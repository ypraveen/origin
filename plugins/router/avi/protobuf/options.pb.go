// Code generated by protoc-gen-go.
// source: options.proto
// DO NOT EDIT!

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MetricPeriod int32

const (
	MetricPeriod_METRIC_PERIOD_UNDEF   MetricPeriod = 0
	MetricPeriod_METRIC_PERIOD_1SECOND MetricPeriod = 1
	MetricPeriod_METRIC_PERIOD_5SECOND MetricPeriod = 5
	MetricPeriod_METRIC_PERIOD_1MINUTE MetricPeriod = 60
	MetricPeriod_METRIC_PERIOD_5MINUTE MetricPeriod = 300
	MetricPeriod_METRIC_PERIOD_1HOUR   MetricPeriod = 3600
	MetricPeriod_METRIC_PERIOD_2HOUR   MetricPeriod = 7200
	MetricPeriod_METRIC_PERIOD_1DAY    MetricPeriod = 86400
	MetricPeriod_METRIC_PERIOD_1WEEK   MetricPeriod = 604800
	MetricPeriod_METRIC_PERIOD_1MONTH  MetricPeriod = 2592000
	// https://en.wikipedia.org/wiki/Year
	MetricPeriod_METRIC_PERIOD_1YEAR MetricPeriod = 31556925
)

var MetricPeriod_name = map[int32]string{
	0:        "METRIC_PERIOD_UNDEF",
	1:        "METRIC_PERIOD_1SECOND",
	5:        "METRIC_PERIOD_5SECOND",
	60:       "METRIC_PERIOD_1MINUTE",
	300:      "METRIC_PERIOD_5MINUTE",
	3600:     "METRIC_PERIOD_1HOUR",
	7200:     "METRIC_PERIOD_2HOUR",
	86400:    "METRIC_PERIOD_1DAY",
	604800:   "METRIC_PERIOD_1WEEK",
	2592000:  "METRIC_PERIOD_1MONTH",
	31556925: "METRIC_PERIOD_1YEAR",
}
var MetricPeriod_value = map[string]int32{
	"METRIC_PERIOD_UNDEF":   0,
	"METRIC_PERIOD_1SECOND": 1,
	"METRIC_PERIOD_5SECOND": 5,
	"METRIC_PERIOD_1MINUTE": 60,
	"METRIC_PERIOD_5MINUTE": 300,
	"METRIC_PERIOD_1HOUR":   3600,
	"METRIC_PERIOD_2HOUR":   7200,
	"METRIC_PERIOD_1DAY":    86400,
	"METRIC_PERIOD_1WEEK":   604800,
	"METRIC_PERIOD_1MONTH":  2592000,
	"METRIC_PERIOD_1YEAR":   31556925,
}

func (x MetricPeriod) Enum() *MetricPeriod {
	p := new(MetricPeriod)
	*p = x
	return p
}
func (x MetricPeriod) String() string {
	return proto.EnumName(MetricPeriod_name, int32(x))
}
func (x *MetricPeriod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricPeriod_value, data, "MetricPeriod")
	if err != nil {
		return err
	}
	*x = MetricPeriod(value)
	return nil
}
func (MetricPeriod) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{0} }

type MetricType int32

const (
	MetricType_ABSOLUTE MetricType = 1
	MetricType_GAUGE    MetricType = 2
	MetricType_COUNTER  MetricType = 3
	MetricType_DERIVED  MetricType = 4
)

var MetricType_name = map[int32]string{
	1: "ABSOLUTE",
	2: "GAUGE",
	3: "COUNTER",
	4: "DERIVED",
}
var MetricType_value = map[string]int32{
	"ABSOLUTE": 1,
	"GAUGE":    2,
	"COUNTER":  3,
	"DERIVED":  4,
}

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}
func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (x *MetricType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricType_value, data, "MetricType")
	if err != nil {
		return err
	}
	*x = MetricType(value)
	return nil
}
func (MetricType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{1} }

type SeMetricType int32

const (
	// Tells SE how to do diffs
	SeMetricType_SE_MTYPE_ABSOLUTE SeMetricType = 1
	SeMetricType_SE_MTYPE_GAUGE    SeMetricType = 2
)

var SeMetricType_name = map[int32]string{
	1: "SE_MTYPE_ABSOLUTE",
	2: "SE_MTYPE_GAUGE",
}
var SeMetricType_value = map[string]int32{
	"SE_MTYPE_ABSOLUTE": 1,
	"SE_MTYPE_GAUGE":    2,
}

func (x SeMetricType) Enum() *SeMetricType {
	p := new(SeMetricType)
	*p = x
	return p
}
func (x SeMetricType) String() string {
	return proto.EnumName(SeMetricType_name, int32(x))
}
func (x *SeMetricType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SeMetricType_value, data, "SeMetricType")
	if err != nil {
		return err
	}
	*x = SeMetricType(value)
	return nil
}
func (SeMetricType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{2} }

type MetricsDerivationFn int32

const (
	MetricsDerivationFn_METRICS_ALIAS                                      MetricsDerivationFn = 0
	MetricsDerivationFn_SUM_FIRST_N_DIVIDE_BY_LAST                         MetricsDerivationFn = 1
	MetricsDerivationFn_SUM_BW_GAUGE                                       MetricsDerivationFn = 2
	MetricsDerivationFn_AVG_GET_POST_OTHER_LATENCY                         MetricsDerivationFn = 3
	MetricsDerivationFn_APPDEX_ON_3_BUCKETS                                MetricsDerivationFn = 4
	MetricsDerivationFn_APPDEX_ON_4_BUCKETS                                MetricsDerivationFn = 5
	MetricsDerivationFn_SUM_GAUGE                                          MetricsDerivationFn = 6
	MetricsDerivationFn_SUM_N_METRICS                                      MetricsDerivationFn = 7
	MetricsDerivationFn_APPDEX_ON_5_BUCKETS                                MetricsDerivationFn = 8
	MetricsDerivationFn_APPDEX_ON_6_BUCKETS                                MetricsDerivationFn = 9
	MetricsDerivationFn_APPDEX_ON_CONNECTIONS                              MetricsDerivationFn = 10
	MetricsDerivationFn_APPDEX_ON_2_BUCKETS                                MetricsDerivationFn = 11
	MetricsDerivationFn_AVG_CLIENT_LATENCY                                 MetricsDerivationFn = 12
	MetricsDerivationFn_AVG_APPLICATION_LATENCY                            MetricsDerivationFn = 13
	MetricsDerivationFn_MIN_N_METRICS                                      MetricsDerivationFn = 14
	MetricsDerivationFn_SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE              MetricsDerivationFn = 15
	MetricsDerivationFn_L4_CONNECTION_ERROR_PERCENTAGE                     MetricsDerivationFn = 16
	MetricsDerivationFn_AVG_L4_CLIENT_LATENCY                              MetricsDerivationFn = 17
	MetricsDerivationFn_CHECK_FOR_TRANSITIONS                              MetricsDerivationFn = 18
	MetricsDerivationFn_SUBSTRACT_ALL_FROM_FIRST                           MetricsDerivationFn = 19
	MetricsDerivationFn_AVG_N_OVER_TIME_PERIOD                             MetricsDerivationFn = 20
	MetricsDerivationFn_AVG_NAVIGATION_TIMING                              MetricsDerivationFn = 21
	MetricsDerivationFn_AVG_RUM_VISITS                                     MetricsDerivationFn = 22
	MetricsDerivationFn_PCT_SSL_ERROR_CONNECTIONS                          MetricsDerivationFn = 23
	MetricsDerivationFn_AVG_RESPONSE_TIME                                  MetricsDerivationFn = 24
	MetricsDerivationFn_SUM_RATES_FIRST_N_DIVIDE_BY_LAST                   MetricsDerivationFn = 25
	MetricsDerivationFn_SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE        MetricsDerivationFn = 26
	MetricsDerivationFn_PCT_CACHE_METRICS                                  MetricsDerivationFn = 27
	MetricsDerivationFn_SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE      MetricsDerivationFn = 28
	MetricsDerivationFn_SUM_FIRST_N_SUBSTRACT_LAST                         MetricsDerivationFn = 29
	MetricsDerivationFn_AVG_POOL_METRICS                                   MetricsDerivationFn = 30
	MetricsDerivationFn_AVG_POOL_BW                                        MetricsDerivationFn = 31
	MetricsDerivationFn_AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME          MetricsDerivationFn = 32
	MetricsDerivationFn_AVG_RSA_PFS                                        MetricsDerivationFn = 33
	MetricsDerivationFn_EVAL_FN                                            MetricsDerivationFn = 34
	MetricsDerivationFn_SSL_PROTOCOL_INDICATOR                             MetricsDerivationFn = 35
	MetricsDerivationFn_SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE MetricsDerivationFn = 36
	MetricsDerivationFn_SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO           MetricsDerivationFn = 37
	MetricsDerivationFn_AVAILABLE_CAPACITY                                 MetricsDerivationFn = 38
	MetricsDerivationFn_CONNECTION_SATURATION                              MetricsDerivationFn = 39
	MetricsDerivationFn_AVG_RSA_NON_PFS                                    MetricsDerivationFn = 40
	MetricsDerivationFn_SSL_HANDSHAKES_NONPFS                              MetricsDerivationFn = 41
)

var MetricsDerivationFn_name = map[int32]string{
	0:  "METRICS_ALIAS",
	1:  "SUM_FIRST_N_DIVIDE_BY_LAST",
	2:  "SUM_BW_GAUGE",
	3:  "AVG_GET_POST_OTHER_LATENCY",
	4:  "APPDEX_ON_3_BUCKETS",
	5:  "APPDEX_ON_4_BUCKETS",
	6:  "SUM_GAUGE",
	7:  "SUM_N_METRICS",
	8:  "APPDEX_ON_5_BUCKETS",
	9:  "APPDEX_ON_6_BUCKETS",
	10: "APPDEX_ON_CONNECTIONS",
	11: "APPDEX_ON_2_BUCKETS",
	12: "AVG_CLIENT_LATENCY",
	13: "AVG_APPLICATION_LATENCY",
	14: "MIN_N_METRICS",
	15: "SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE",
	16: "L4_CONNECTION_ERROR_PERCENTAGE",
	17: "AVG_L4_CLIENT_LATENCY",
	18: "CHECK_FOR_TRANSITIONS",
	19: "SUBSTRACT_ALL_FROM_FIRST",
	20: "AVG_N_OVER_TIME_PERIOD",
	21: "AVG_NAVIGATION_TIMING",
	22: "AVG_RUM_VISITS",
	23: "PCT_SSL_ERROR_CONNECTIONS",
	24: "AVG_RESPONSE_TIME",
	25: "SUM_RATES_FIRST_N_DIVIDE_BY_LAST",
	26: "SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE",
	27: "PCT_CACHE_METRICS",
	28: "SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE",
	29: "SUM_FIRST_N_SUBSTRACT_LAST",
	30: "AVG_POOL_METRICS",
	31: "AVG_POOL_BW",
	32: "AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME",
	33: "AVG_RSA_PFS",
	34: "EVAL_FN",
	35: "SSL_PROTOCOL_INDICATOR",
	36: "SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE",
	37: "SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO",
	38: "AVAILABLE_CAPACITY",
	39: "CONNECTION_SATURATION",
	40: "AVG_RSA_NON_PFS",
	41: "SSL_HANDSHAKES_NONPFS",
}
var MetricsDerivationFn_value = map[string]int32{
	"METRICS_ALIAS":                                      0,
	"SUM_FIRST_N_DIVIDE_BY_LAST":                         1,
	"SUM_BW_GAUGE":                                       2,
	"AVG_GET_POST_OTHER_LATENCY":                         3,
	"APPDEX_ON_3_BUCKETS":                                4,
	"APPDEX_ON_4_BUCKETS":                                5,
	"SUM_GAUGE":                                          6,
	"SUM_N_METRICS":                                      7,
	"APPDEX_ON_5_BUCKETS":                                8,
	"APPDEX_ON_6_BUCKETS":                                9,
	"APPDEX_ON_CONNECTIONS":                              10,
	"APPDEX_ON_2_BUCKETS":                                11,
	"AVG_CLIENT_LATENCY":                                 12,
	"AVG_APPLICATION_LATENCY":                            13,
	"MIN_N_METRICS":                                      14,
	"SUM_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE":              15,
	"L4_CONNECTION_ERROR_PERCENTAGE":                     16,
	"AVG_L4_CLIENT_LATENCY":                              17,
	"CHECK_FOR_TRANSITIONS":                              18,
	"SUBSTRACT_ALL_FROM_FIRST":                           19,
	"AVG_N_OVER_TIME_PERIOD":                             20,
	"AVG_NAVIGATION_TIMING":                              21,
	"AVG_RUM_VISITS":                                     22,
	"PCT_SSL_ERROR_CONNECTIONS":                          23,
	"AVG_RESPONSE_TIME":                                  24,
	"SUM_RATES_FIRST_N_DIVIDE_BY_LAST":                   25,
	"SUM_RATES_FIRST_N_DIVIDE_BY_LAST_PERCENTAGE":        26,
	"PCT_CACHE_METRICS":                                  27,
	"SUM_FIRST_N_DIVIDE_BY_SECLAST_EXCL_ERROR_RATE":      28,
	"SUM_FIRST_N_SUBSTRACT_LAST":                         29,
	"AVG_POOL_METRICS":                                   30,
	"AVG_POOL_BW":                                        31,
	"AVG_BY_SUBSTRACT_ALL_FROM_FIRST_OVER_TIME":          32,
	"AVG_RSA_PFS":                                        33,
	"EVAL_FN":                                            34,
	"SSL_PROTOCOL_INDICATOR":                             35,
	"SUM_FIRST_N_DIVIDE_BY_SECLAST_RATE_EXCL_ERROR_RATE": 36,
	"SUBSTRACT_ALL_FROM_FIRST_WITH_FLOOR_ZERO":           37,
	"AVAILABLE_CAPACITY":                                 38,
	"CONNECTION_SATURATION":                              39,
	"AVG_RSA_NON_PFS":                                    40,
	"SSL_HANDSHAKES_NONPFS":                              41,
}

func (x MetricsDerivationFn) Enum() *MetricsDerivationFn {
	p := new(MetricsDerivationFn)
	*p = x
	return p
}
func (x MetricsDerivationFn) String() string {
	return proto.EnumName(MetricsDerivationFn_name, int32(x))
}
func (x *MetricsDerivationFn) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsDerivationFn_value, data, "MetricsDerivationFn")
	if err != nil {
		return err
	}
	*x = MetricsDerivationFn(value)
	return nil
}
func (MetricsDerivationFn) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{3} }

type MetricUnits int32

const (
	MetricUnits_METRIC_COUNT          MetricUnits = 0
	MetricUnits_BITS_PER_SECOND       MetricUnits = 1
	MetricUnits_MILLISECONDS          MetricUnits = 2
	MetricUnits_SECONDS               MetricUnits = 3
	MetricUnits_PER_SECOND            MetricUnits = 4
	MetricUnits_BYTES                 MetricUnits = 5
	MetricUnits_PERCENT               MetricUnits = 6
	MetricUnits_KILO_BYTES            MetricUnits = 7
	MetricUnits_KILO_BYTES_PER_SECOND MetricUnits = 8
	MetricUnits_BYTES_PER_SECOND      MetricUnits = 9
	MetricUnits_KILO_BITS_PER_SECOND  MetricUnits = 10
	MetricUnits_GIGA_BYTES            MetricUnits = 11
	MetricUnits_MEGA_BYTES            MetricUnits = 12
	MetricUnits_NORMALIZED            MetricUnits = 13
)

var MetricUnits_name = map[int32]string{
	0:  "METRIC_COUNT",
	1:  "BITS_PER_SECOND",
	2:  "MILLISECONDS",
	3:  "SECONDS",
	4:  "PER_SECOND",
	5:  "BYTES",
	6:  "PERCENT",
	7:  "KILO_BYTES",
	8:  "KILO_BYTES_PER_SECOND",
	9:  "BYTES_PER_SECOND",
	10: "KILO_BITS_PER_SECOND",
	11: "GIGA_BYTES",
	12: "MEGA_BYTES",
	13: "NORMALIZED",
}
var MetricUnits_value = map[string]int32{
	"METRIC_COUNT":          0,
	"BITS_PER_SECOND":       1,
	"MILLISECONDS":          2,
	"SECONDS":               3,
	"PER_SECOND":            4,
	"BYTES":                 5,
	"PERCENT":               6,
	"KILO_BYTES":            7,
	"KILO_BYTES_PER_SECOND": 8,
	"BYTES_PER_SECOND":      9,
	"KILO_BITS_PER_SECOND":  10,
	"GIGA_BYTES":            11,
	"MEGA_BYTES":            12,
	"NORMALIZED":            13,
}

func (x MetricUnits) Enum() *MetricUnits {
	p := new(MetricUnits)
	*p = x
	return p
}
func (x MetricUnits) String() string {
	return proto.EnumName(MetricUnits_name, int32(x))
}
func (x *MetricUnits) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricUnits_value, data, "MetricUnits")
	if err != nil {
		return err
	}
	*x = MetricUnits(value)
	return nil
}
func (MetricUnits) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{4} }

type MetricsRuleType int32

const (
	MetricsRuleType_GENERATE_EVENT_WITH_LOW_WM  MetricsRuleType = 0
	MetricsRuleType_GENERATE_EVENT_FOR_ANOMALY  MetricsRuleType = 1
	MetricsRuleType_GENERATE_EVENT_WITH_HIGH_WM MetricsRuleType = 2
)

var MetricsRuleType_name = map[int32]string{
	0: "GENERATE_EVENT_WITH_LOW_WM",
	1: "GENERATE_EVENT_FOR_ANOMALY",
	2: "GENERATE_EVENT_WITH_HIGH_WM",
}
var MetricsRuleType_value = map[string]int32{
	"GENERATE_EVENT_WITH_LOW_WM":  0,
	"GENERATE_EVENT_FOR_ANOMALY":  1,
	"GENERATE_EVENT_WITH_HIGH_WM": 2,
}

func (x MetricsRuleType) Enum() *MetricsRuleType {
	p := new(MetricsRuleType)
	*p = x
	return p
}
func (x MetricsRuleType) String() string {
	return proto.EnumName(MetricsRuleType_name, int32(x))
}
func (x *MetricsRuleType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsRuleType_value, data, "MetricsRuleType")
	if err != nil {
		return err
	}
	*x = MetricsRuleType(value)
	return nil
}
func (MetricsRuleType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{5} }

type PbAggOp int32

const (
	PbAggOp_AGG_SUM     PbAggOp = 1
	PbAggOp_AGG_MAX     PbAggOp = 2
	PbAggOp_AGG_MIN     PbAggOp = 3
	PbAggOp_AGG_ANY     PbAggOp = 4
	PbAggOp_AGG_SUM_ANY PbAggOp = 5
)

var PbAggOp_name = map[int32]string{
	1: "AGG_SUM",
	2: "AGG_MAX",
	3: "AGG_MIN",
	4: "AGG_ANY",
	5: "AGG_SUM_ANY",
}
var PbAggOp_value = map[string]int32{
	"AGG_SUM":     1,
	"AGG_MAX":     2,
	"AGG_MIN":     3,
	"AGG_ANY":     4,
	"AGG_SUM_ANY": 5,
}

func (x PbAggOp) Enum() *PbAggOp {
	p := new(PbAggOp)
	*p = x
	return p
}
func (x PbAggOp) String() string {
	return proto.EnumName(PbAggOp_name, int32(x))
}
func (x *PbAggOp) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PbAggOp_value, data, "PbAggOp")
	if err != nil {
		return err
	}
	*x = PbAggOp(value)
	return nil
}
func (PbAggOp) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{6} }

type VinfraErrCategory int32

const (
	VinfraErrCategory_VINFRA_RECOVERABLE     VinfraErrCategory = 1
	VinfraErrCategory_VINFRA_NON_RECOVERABLE VinfraErrCategory = 2
)

var VinfraErrCategory_name = map[int32]string{
	1: "VINFRA_RECOVERABLE",
	2: "VINFRA_NON_RECOVERABLE",
}
var VinfraErrCategory_value = map[string]int32{
	"VINFRA_RECOVERABLE":     1,
	"VINFRA_NON_RECOVERABLE": 2,
}

func (x VinfraErrCategory) Enum() *VinfraErrCategory {
	p := new(VinfraErrCategory)
	*p = x
	return p
}
func (x VinfraErrCategory) String() string {
	return proto.EnumName(VinfraErrCategory_name, int32(x))
}
func (x *VinfraErrCategory) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VinfraErrCategory_value, data, "VinfraErrCategory")
	if err != nil {
		return err
	}
	*x = VinfraErrCategory(value)
	return nil
}
func (VinfraErrCategory) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{7} }

// *
// unit in milliseconds
type MetricRespLatencyTime int32

const (
	MetricRespLatencyTime_METRIC_RESP_TIME_0    MetricRespLatencyTime = 0
	MetricRespLatencyTime_METRIC_RESP_TIME_400  MetricRespLatencyTime = 400
	MetricRespLatencyTime_METRIC_RESP_TIME_500  MetricRespLatencyTime = 500
	MetricRespLatencyTime_METRIC_RESP_TIME_1600 MetricRespLatencyTime = 1600
	MetricRespLatencyTime_METRIC_RESP_TIME_2000 MetricRespLatencyTime = 2000
)

var MetricRespLatencyTime_name = map[int32]string{
	0:    "METRIC_RESP_TIME_0",
	400:  "METRIC_RESP_TIME_400",
	500:  "METRIC_RESP_TIME_500",
	1600: "METRIC_RESP_TIME_1600",
	2000: "METRIC_RESP_TIME_2000",
}
var MetricRespLatencyTime_value = map[string]int32{
	"METRIC_RESP_TIME_0":    0,
	"METRIC_RESP_TIME_400":  400,
	"METRIC_RESP_TIME_500":  500,
	"METRIC_RESP_TIME_1600": 1600,
	"METRIC_RESP_TIME_2000": 2000,
}

func (x MetricRespLatencyTime) Enum() *MetricRespLatencyTime {
	p := new(MetricRespLatencyTime)
	*p = x
	return p
}
func (x MetricRespLatencyTime) String() string {
	return proto.EnumName(MetricRespLatencyTime_name, int32(x))
}
func (x *MetricRespLatencyTime) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricRespLatencyTime_value, data, "MetricRespLatencyTime")
	if err != nil {
		return err
	}
	*x = MetricRespLatencyTime(value)
	return nil
}
func (MetricRespLatencyTime) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{8} }

type MetricsAggregationEnum int32

const (
	MetricsAggregationEnum_METRICS_AGG_NONE             MetricsAggregationEnum = 0
	MetricsAggregationEnum_METRICS_AGG_NODE             MetricsAggregationEnum = 1
	MetricsAggregationEnum_METRICS_AGG_POOL             MetricsAggregationEnum = 2
	MetricsAggregationEnum_METRICS_AGG_SERVER           MetricsAggregationEnum = 3
	MetricsAggregationEnum_METRICS_AGG_NODE_POOL        MetricsAggregationEnum = 4
	MetricsAggregationEnum_METRICS_AGG_NODE_SERVER      MetricsAggregationEnum = 5
	MetricsAggregationEnum_METRICS_AGG_POOL_SERVER      MetricsAggregationEnum = 6
	MetricsAggregationEnum_METRICS_AGG_NODE_POOL_SERVER MetricsAggregationEnum = 7
	MetricsAggregationEnum_METRICS_AGG_SERVICE          MetricsAggregationEnum = 8
	MetricsAggregationEnum_METRICS_AGG_NODE_SERVICE     MetricsAggregationEnum = 9
	MetricsAggregationEnum_METRICS_AGG_DIMENSIONID      MetricsAggregationEnum = 10
)

var MetricsAggregationEnum_name = map[int32]string{
	0:  "METRICS_AGG_NONE",
	1:  "METRICS_AGG_NODE",
	2:  "METRICS_AGG_POOL",
	3:  "METRICS_AGG_SERVER",
	4:  "METRICS_AGG_NODE_POOL",
	5:  "METRICS_AGG_NODE_SERVER",
	6:  "METRICS_AGG_POOL_SERVER",
	7:  "METRICS_AGG_NODE_POOL_SERVER",
	8:  "METRICS_AGG_SERVICE",
	9:  "METRICS_AGG_NODE_SERVICE",
	10: "METRICS_AGG_DIMENSIONID",
}
var MetricsAggregationEnum_value = map[string]int32{
	"METRICS_AGG_NONE":             0,
	"METRICS_AGG_NODE":             1,
	"METRICS_AGG_POOL":             2,
	"METRICS_AGG_SERVER":           3,
	"METRICS_AGG_NODE_POOL":        4,
	"METRICS_AGG_NODE_SERVER":      5,
	"METRICS_AGG_POOL_SERVER":      6,
	"METRICS_AGG_NODE_POOL_SERVER": 7,
	"METRICS_AGG_SERVICE":          8,
	"METRICS_AGG_NODE_SERVICE":     9,
	"METRICS_AGG_DIMENSIONID":      10,
}

func (x MetricsAggregationEnum) Enum() *MetricsAggregationEnum {
	p := new(MetricsAggregationEnum)
	*p = x
	return p
}
func (x MetricsAggregationEnum) String() string {
	return proto.EnumName(MetricsAggregationEnum_name, int32(x))
}
func (x *MetricsAggregationEnum) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsAggregationEnum_value, data, "MetricsAggregationEnum")
	if err != nil {
		return err
	}
	*x = MetricsAggregationEnum(value)
	return nil
}
func (MetricsAggregationEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{9} }

type MetricsObjType int32

const (
	MetricsObjType_METRICS_OBJ_TYPE_UNKNOWN MetricsObjType = 100
	MetricsObjType_VSERVER_L4_SERVER        MetricsObjType = 101
	MetricsObjType_VSERVER_L4_CLIENT        MetricsObjType = 102
	MetricsObjType_VSERVER_L7_SERVER        MetricsObjType = 103
	MetricsObjType_VSERVER_L7_CLIENT        MetricsObjType = 104
	MetricsObjType_VM_METRICS_OBJ           MetricsObjType = 105
	// ANOMALY_OBJ = 106; // ANOMALY
	MetricsObjType_SE_METRICS_OBJ                        MetricsObjType = 107
	MetricsObjType_VSERVER_RUM                           MetricsObjType = 108
	MetricsObjType_CONTROLLER_METRICS_OBJ                MetricsObjType = 109
	MetricsObjType_METRICS_COLLECTION                    MetricsObjType = 110
	MetricsObjType_METRICS_RUM_PREAGG_BROWSER_OBJ        MetricsObjType = 111
	MetricsObjType_METRICS_RUM_PREAGG_COUNTRY_OBJ        MetricsObjType = 112
	MetricsObjType_METRICS_RUM_PREAGG_DEVTYPE_OBJ        MetricsObjType = 113
	MetricsObjType_METRICS_RUM_PREAGG_LANG_OBJ           MetricsObjType = 114
	MetricsObjType_METRICS_RUM_PREAGG_OS_OBJ             MetricsObjType = 115
	MetricsObjType_METRICS_RUM_PREAGG_URL_OBJ            MetricsObjType = 116
	MetricsObjType_METRICS_ANOMALY_OBJ                   MetricsObjType = 117
	MetricsObjType_METRICS_HEALTHSCORE_OBJ               MetricsObjType = 118
	MetricsObjType_METRICS_RESOURCE_TIMING_BROWSER_OBJ   MetricsObjType = 119
	MetricsObjType_METRICS_RESOURCE_TIMING_OS_OBJ        MetricsObjType = 120
	MetricsObjType_METRICS_RESOURCE_TIMING_COUNTRY_OBJ   MetricsObjType = 121
	MetricsObjType_METRICS_RESOURCE_TIMING_LANG_OBJ      MetricsObjType = 122
	MetricsObjType_METRICS_RESOURCE_TIMING_DEVTYPE_OBJ   MetricsObjType = 123
	MetricsObjType_METRICS_RESOURCE_TIMING_URL_OBJ       MetricsObjType = 124
	MetricsObjType_METRICS_RESOURCE_TIMING_DIMENSION_OBJ MetricsObjType = 125
	MetricsObjType_METRICS_RESOURCE_TIMING_BLOB_OBJ      MetricsObjType = 126
	MetricsObjType_METRICS_DOS_OBJ                       MetricsObjType = 127
	MetricsObjType_METRICS_RUM_PREAGG_IPGROUP_OBJ        MetricsObjType = 128
	MetricsObjType_METRICS_APP_INSIGHTS_OBJ              MetricsObjType = 129
	MetricsObjType_METRICS_VSERVER_DNS_OBJ               MetricsObjType = 130
	MetricsObjType_METRICS_SERVER_DNS_OBJ                MetricsObjType = 131
	MetricsObjType_METRICS_SERVICE_INSIGHTS_OBJ          MetricsObjType = 132
	MetricsObjType_METRICS_SOURCE_INSIGHTS_OBJ           MetricsObjType = 133
	MetricsObjType_METRICS_TENANT_STATS_OBJ              MetricsObjType = 134
)

var MetricsObjType_name = map[int32]string{
	100: "METRICS_OBJ_TYPE_UNKNOWN",
	101: "VSERVER_L4_SERVER",
	102: "VSERVER_L4_CLIENT",
	103: "VSERVER_L7_SERVER",
	104: "VSERVER_L7_CLIENT",
	105: "VM_METRICS_OBJ",
	107: "SE_METRICS_OBJ",
	108: "VSERVER_RUM",
	109: "CONTROLLER_METRICS_OBJ",
	110: "METRICS_COLLECTION",
	111: "METRICS_RUM_PREAGG_BROWSER_OBJ",
	112: "METRICS_RUM_PREAGG_COUNTRY_OBJ",
	113: "METRICS_RUM_PREAGG_DEVTYPE_OBJ",
	114: "METRICS_RUM_PREAGG_LANG_OBJ",
	115: "METRICS_RUM_PREAGG_OS_OBJ",
	116: "METRICS_RUM_PREAGG_URL_OBJ",
	117: "METRICS_ANOMALY_OBJ",
	118: "METRICS_HEALTHSCORE_OBJ",
	119: "METRICS_RESOURCE_TIMING_BROWSER_OBJ",
	120: "METRICS_RESOURCE_TIMING_OS_OBJ",
	121: "METRICS_RESOURCE_TIMING_COUNTRY_OBJ",
	122: "METRICS_RESOURCE_TIMING_LANG_OBJ",
	123: "METRICS_RESOURCE_TIMING_DEVTYPE_OBJ",
	124: "METRICS_RESOURCE_TIMING_URL_OBJ",
	125: "METRICS_RESOURCE_TIMING_DIMENSION_OBJ",
	126: "METRICS_RESOURCE_TIMING_BLOB_OBJ",
	127: "METRICS_DOS_OBJ",
	128: "METRICS_RUM_PREAGG_IPGROUP_OBJ",
	129: "METRICS_APP_INSIGHTS_OBJ",
	130: "METRICS_VSERVER_DNS_OBJ",
	131: "METRICS_SERVER_DNS_OBJ",
	132: "METRICS_SERVICE_INSIGHTS_OBJ",
	133: "METRICS_SOURCE_INSIGHTS_OBJ",
	134: "METRICS_TENANT_STATS_OBJ",
}
var MetricsObjType_value = map[string]int32{
	"METRICS_OBJ_TYPE_UNKNOWN":              100,
	"VSERVER_L4_SERVER":                     101,
	"VSERVER_L4_CLIENT":                     102,
	"VSERVER_L7_SERVER":                     103,
	"VSERVER_L7_CLIENT":                     104,
	"VM_METRICS_OBJ":                        105,
	"SE_METRICS_OBJ":                        107,
	"VSERVER_RUM":                           108,
	"CONTROLLER_METRICS_OBJ":                109,
	"METRICS_COLLECTION":                    110,
	"METRICS_RUM_PREAGG_BROWSER_OBJ":        111,
	"METRICS_RUM_PREAGG_COUNTRY_OBJ":        112,
	"METRICS_RUM_PREAGG_DEVTYPE_OBJ":        113,
	"METRICS_RUM_PREAGG_LANG_OBJ":           114,
	"METRICS_RUM_PREAGG_OS_OBJ":             115,
	"METRICS_RUM_PREAGG_URL_OBJ":            116,
	"METRICS_ANOMALY_OBJ":                   117,
	"METRICS_HEALTHSCORE_OBJ":               118,
	"METRICS_RESOURCE_TIMING_BROWSER_OBJ":   119,
	"METRICS_RESOURCE_TIMING_OS_OBJ":        120,
	"METRICS_RESOURCE_TIMING_COUNTRY_OBJ":   121,
	"METRICS_RESOURCE_TIMING_LANG_OBJ":      122,
	"METRICS_RESOURCE_TIMING_DEVTYPE_OBJ":   123,
	"METRICS_RESOURCE_TIMING_URL_OBJ":       124,
	"METRICS_RESOURCE_TIMING_DIMENSION_OBJ": 125,
	"METRICS_RESOURCE_TIMING_BLOB_OBJ":      126,
	"METRICS_DOS_OBJ":                       127,
	"METRICS_RUM_PREAGG_IPGROUP_OBJ":        128,
	"METRICS_APP_INSIGHTS_OBJ":              129,
	"METRICS_VSERVER_DNS_OBJ":               130,
	"METRICS_SERVER_DNS_OBJ":                131,
	"METRICS_SERVICE_INSIGHTS_OBJ":          132,
	"METRICS_SOURCE_INSIGHTS_OBJ":           133,
	"METRICS_TENANT_STATS_OBJ":              134,
}

func (x MetricsObjType) Enum() *MetricsObjType {
	p := new(MetricsObjType)
	*p = x
	return p
}
func (x MetricsObjType) String() string {
	return proto.EnumName(MetricsObjType_name, int32(x))
}
func (x *MetricsObjType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsObjType_value, data, "MetricsObjType")
	if err != nil {
		return err
	}
	*x = MetricsObjType(value)
	return nil
}
func (MetricsObjType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{10} }

type AggregateType int32

const (
	AggregateType_AGGREGATE_TYPE_ALL                          AggregateType = 100
	AggregateType_AGGREGATE_TYPE_FIRST                        AggregateType = 101
	AggregateType_AGGREGATE_TYPE_OPER_STATUS_IGNORE_TIMESTAMP AggregateType = 102
	AggregateType_AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT          AggregateType = 103
	AggregateType_AGGREGATE_TYPE_TS_EARLIEST                  AggregateType = 104
	AggregateType_AGGREGATE_TYPE_TS_LATEST                    AggregateType = 105
)

var AggregateType_name = map[int32]string{
	100: "AGGREGATE_TYPE_ALL",
	101: "AGGREGATE_TYPE_FIRST",
	102: "AGGREGATE_TYPE_OPER_STATUS_IGNORE_TIMESTAMP",
	103: "AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT",
	104: "AGGREGATE_TYPE_TS_EARLIEST",
	105: "AGGREGATE_TYPE_TS_LATEST",
}
var AggregateType_value = map[string]int32{
	"AGGREGATE_TYPE_ALL":                          100,
	"AGGREGATE_TYPE_FIRST":                        101,
	"AGGREGATE_TYPE_OPER_STATUS_IGNORE_TIMESTAMP": 102,
	"AGGREGATE_TYPE_PRIMARY_KEY_IP_PORT":          103,
	"AGGREGATE_TYPE_TS_EARLIEST":                  104,
	"AGGREGATE_TYPE_TS_LATEST":                    105,
}

func (x AggregateType) Enum() *AggregateType {
	p := new(AggregateType)
	*p = x
	return p
}
func (x AggregateType) String() string {
	return proto.EnumName(AggregateType_name, int32(x))
}
func (x *AggregateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AggregateType_value, data, "AggregateType")
	if err != nil {
		return err
	}
	*x = AggregateType(value)
	return nil
}
func (AggregateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{11} }

type MetricsIndexes int32

const (
	MetricsIndexes_METRIC_TIMESTAMP       MetricsIndexes = 1
	MetricsIndexes_METRIC_PERIOD          MetricsIndexes = 2
	MetricsIndexes_POOL_KEY               MetricsIndexes = 3
	MetricsIndexes_OBJ_KEY                MetricsIndexes = 4
	MetricsIndexes_ENTITY_KEY             MetricsIndexes = 5
	MetricsIndexes_NODE_KEY               MetricsIndexes = 6
	MetricsIndexes_COUNTRY_KEY            MetricsIndexes = 7
	MetricsIndexes_OS_KEY                 MetricsIndexes = 8
	MetricsIndexes_URL_KEY                MetricsIndexes = 9
	MetricsIndexes_DEVTYPE_KEY            MetricsIndexes = 10
	MetricsIndexes_LANG_KEY               MetricsIndexes = 11
	MetricsIndexes_BROWSER_KEY            MetricsIndexes = 12
	MetricsIndexes_TIMESTAMP              MetricsIndexes = 13
	MetricsIndexes_OBJ_TYPE               MetricsIndexes = 14
	MetricsIndexes_METRIC_RUM_SAMPLE_TYPE MetricsIndexes = 15
	MetricsIndexes_METRIC_ID              MetricsIndexes = 16
	MetricsIndexes_PRIORITY               MetricsIndexes = 17
	MetricsIndexes_CI_SRC_TYPE            MetricsIndexes = 18
	MetricsIndexes_BLOB_KEY               MetricsIndexes = 19
	MetricsIndexes_IPGROUP_KEY            MetricsIndexes = 20
	MetricsIndexes_TENANT_KEY             MetricsIndexes = 21
	MetricsIndexes_ENTITY_TYPE            MetricsIndexes = 22
	MetricsIndexes_ATTACK_KEY             MetricsIndexes = 23
	MetricsIndexes_DIMENSIONID_KEY        MetricsIndexes = 24
	MetricsIndexes_METRICS_DIMENSION      MetricsIndexes = 25
	MetricsIndexes_ASN_KEY                MetricsIndexes = 26
)

var MetricsIndexes_name = map[int32]string{
	1:  "METRIC_TIMESTAMP",
	2:  "METRIC_PERIOD",
	3:  "POOL_KEY",
	4:  "OBJ_KEY",
	5:  "ENTITY_KEY",
	6:  "NODE_KEY",
	7:  "COUNTRY_KEY",
	8:  "OS_KEY",
	9:  "URL_KEY",
	10: "DEVTYPE_KEY",
	11: "LANG_KEY",
	12: "BROWSER_KEY",
	13: "TIMESTAMP",
	14: "OBJ_TYPE",
	15: "METRIC_RUM_SAMPLE_TYPE",
	16: "METRIC_ID",
	17: "PRIORITY",
	18: "CI_SRC_TYPE",
	19: "BLOB_KEY",
	20: "IPGROUP_KEY",
	21: "TENANT_KEY",
	22: "ENTITY_TYPE",
	23: "ATTACK_KEY",
	24: "DIMENSIONID_KEY",
	25: "METRICS_DIMENSION",
	26: "ASN_KEY",
}
var MetricsIndexes_value = map[string]int32{
	"METRIC_TIMESTAMP":       1,
	"METRIC_PERIOD":          2,
	"POOL_KEY":               3,
	"OBJ_KEY":                4,
	"ENTITY_KEY":             5,
	"NODE_KEY":               6,
	"COUNTRY_KEY":            7,
	"OS_KEY":                 8,
	"URL_KEY":                9,
	"DEVTYPE_KEY":            10,
	"LANG_KEY":               11,
	"BROWSER_KEY":            12,
	"TIMESTAMP":              13,
	"OBJ_TYPE":               14,
	"METRIC_RUM_SAMPLE_TYPE": 15,
	"METRIC_ID":              16,
	"PRIORITY":               17,
	"CI_SRC_TYPE":            18,
	"BLOB_KEY":               19,
	"IPGROUP_KEY":            20,
	"TENANT_KEY":             21,
	"ENTITY_TYPE":            22,
	"ATTACK_KEY":             23,
	"DIMENSIONID_KEY":        24,
	"METRICS_DIMENSION":      25,
	"ASN_KEY":                26,
}

func (x MetricsIndexes) Enum() *MetricsIndexes {
	p := new(MetricsIndexes)
	*p = x
	return p
}
func (x MetricsIndexes) String() string {
	return proto.EnumName(MetricsIndexes_name, int32(x))
}
func (x *MetricsIndexes) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsIndexes_value, data, "MetricsIndexes")
	if err != nil {
		return err
	}
	*x = MetricsIndexes(value)
	return nil
}
func (MetricsIndexes) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{12} }

type MetricsDimension int32

const (
	MetricsDimension_METRICS_DIMENSION_METRIC_TIMESTAMP MetricsDimension = 0
	MetricsDimension_METRICS_DIMENSION_COUNTRY          MetricsDimension = 1
	MetricsDimension_METRICS_DIMENSION_OS               MetricsDimension = 2
	MetricsDimension_METRICS_DIMENSION_URL              MetricsDimension = 3
	MetricsDimension_METRICS_DIMENSION_DEVTYPE          MetricsDimension = 4
	MetricsDimension_METRICS_DIMENSION_LANG             MetricsDimension = 5
	MetricsDimension_METRICS_DIMENSION_BROWSER          MetricsDimension = 6
	MetricsDimension_METRICS_DIMENSION_IPGROUP          MetricsDimension = 7
	MetricsDimension_METRICS_DIMENSION_ATTACK           MetricsDimension = 8
	MetricsDimension_METRICS_DIMENSION_ASN              MetricsDimension = 9
)

var MetricsDimension_name = map[int32]string{
	0: "METRICS_DIMENSION_METRIC_TIMESTAMP",
	1: "METRICS_DIMENSION_COUNTRY",
	2: "METRICS_DIMENSION_OS",
	3: "METRICS_DIMENSION_URL",
	4: "METRICS_DIMENSION_DEVTYPE",
	5: "METRICS_DIMENSION_LANG",
	6: "METRICS_DIMENSION_BROWSER",
	7: "METRICS_DIMENSION_IPGROUP",
	8: "METRICS_DIMENSION_ATTACK",
	9: "METRICS_DIMENSION_ASN",
}
var MetricsDimension_value = map[string]int32{
	"METRICS_DIMENSION_METRIC_TIMESTAMP": 0,
	"METRICS_DIMENSION_COUNTRY":          1,
	"METRICS_DIMENSION_OS":               2,
	"METRICS_DIMENSION_URL":              3,
	"METRICS_DIMENSION_DEVTYPE":          4,
	"METRICS_DIMENSION_LANG":             5,
	"METRICS_DIMENSION_BROWSER":          6,
	"METRICS_DIMENSION_IPGROUP":          7,
	"METRICS_DIMENSION_ATTACK":           8,
	"METRICS_DIMENSION_ASN":              9,
}

func (x MetricsDimension) Enum() *MetricsDimension {
	p := new(MetricsDimension)
	*p = x
	return p
}
func (x MetricsDimension) String() string {
	return proto.EnumName(MetricsDimension_name, int32(x))
}
func (x *MetricsDimension) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsDimension_value, data, "MetricsDimension")
	if err != nil {
		return err
	}
	*x = MetricsDimension(value)
	return nil
}
func (MetricsDimension) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{13} }

type MetricsDbTableArchivePolicy int32

const (
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_NONE     MetricsDbTableArchivePolicy = 0
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_ALL      MetricsDbTableArchivePolicy = 1
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_HIGHEST  MetricsDbTableArchivePolicy = 2
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_LOWEST   MetricsDbTableArchivePolicy = 3
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_DAY      MetricsDbTableArchivePolicy = 4
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_DAY_WEEK MetricsDbTableArchivePolicy = 5
	MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_DAY_YEAR MetricsDbTableArchivePolicy = 6
)

var MetricsDbTableArchivePolicy_name = map[int32]string{
	0: "METRICS_DB_TABLE_ARCHIVE_NONE",
	1: "METRICS_DB_TABLE_ARCHIVE_ALL",
	2: "METRICS_DB_TABLE_ARCHIVE_HIGHEST",
	3: "METRICS_DB_TABLE_ARCHIVE_LOWEST",
	4: "METRICS_DB_TABLE_ARCHIVE_DAY",
	5: "METRICS_DB_TABLE_ARCHIVE_DAY_WEEK",
	6: "METRICS_DB_TABLE_ARCHIVE_DAY_YEAR",
}
var MetricsDbTableArchivePolicy_value = map[string]int32{
	"METRICS_DB_TABLE_ARCHIVE_NONE":     0,
	"METRICS_DB_TABLE_ARCHIVE_ALL":      1,
	"METRICS_DB_TABLE_ARCHIVE_HIGHEST":  2,
	"METRICS_DB_TABLE_ARCHIVE_LOWEST":   3,
	"METRICS_DB_TABLE_ARCHIVE_DAY":      4,
	"METRICS_DB_TABLE_ARCHIVE_DAY_WEEK": 5,
	"METRICS_DB_TABLE_ARCHIVE_DAY_YEAR": 6,
}

func (x MetricsDbTableArchivePolicy) Enum() *MetricsDbTableArchivePolicy {
	p := new(MetricsDbTableArchivePolicy)
	*p = x
	return p
}
func (x MetricsDbTableArchivePolicy) String() string {
	return proto.EnumName(MetricsDbTableArchivePolicy_name, int32(x))
}
func (x *MetricsDbTableArchivePolicy) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsDbTableArchivePolicy_value, data, "MetricsDbTableArchivePolicy")
	if err != nil {
		return err
	}
	*x = MetricsDbTableArchivePolicy(value)
	return nil
}
func (MetricsDbTableArchivePolicy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor74, []int{14}
}

type MetricsTableId int32

const (
	MetricsTableId_METRICS_TABLE_NONE                 MetricsTableId = 0
	MetricsTableId_METRICS_TABLE_ANOMALY              MetricsTableId = 1
	MetricsTableId_METRICS_TABLE_CONTROLLER_STATS     MetricsTableId = 2
	MetricsTableId_METRICS_TABLE_HEALTH_SCORE         MetricsTableId = 3
	MetricsTableId_METRICS_TABLE_SE_STATS             MetricsTableId = 4
	MetricsTableId_METRICS_TABLE_VSERVER_L4_SERVER    MetricsTableId = 5
	MetricsTableId_METRICS_TABLE_VSERVER_L4_CLIENT    MetricsTableId = 6
	MetricsTableId_METRICS_TABLE_VSERVER_L7_CLIENT    MetricsTableId = 7
	MetricsTableId_METRICS_TABLE_VSERVER_L7_SERVER    MetricsTableId = 8
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_BROWSER   MetricsTableId = 10
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_COUNTRY   MetricsTableId = 11
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_DEVTYPE   MetricsTableId = 12
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_LANG      MetricsTableId = 13
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_OS        MetricsTableId = 14
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_URL       MetricsTableId = 15
	MetricsTableId_METRICS_TABLE_RUM_ANALYTICS        MetricsTableId = 16
	MetricsTableId_METRICS_TABLE_VM_STATS             MetricsTableId = 23
	MetricsTableId_METRICS_TABLE_RESOURCE_TIMING_DIM  MetricsTableId = 24
	MetricsTableId_METRICS_TABLE_RESOURCE_TIMING_BLOB MetricsTableId = 25
	MetricsTableId_METRICS_TABLE_RUM_PREAGG_IPGROUP   MetricsTableId = 26
	MetricsTableId_METRICS_TABLE_DOS_ANALYTICS        MetricsTableId = 27
	MetricsTableId_METRICS_TABLE_APP_INSIGHTS         MetricsTableId = 28
	MetricsTableId_METRICS_TABLE_VSERVER_DNS          MetricsTableId = 29
	MetricsTableId_METRICS_TABLE_SERVER_DNS           MetricsTableId = 30
	MetricsTableId_METRICS_TABLE_SERVICE_INSIGHTS     MetricsTableId = 31
	MetricsTableId_METRICS_TABLE_SOURCE_INSIGHTS      MetricsTableId = 32
	MetricsTableId_METRICS_TABLE_TENANT_STATS         MetricsTableId = 33
)

var MetricsTableId_name = map[int32]string{
	0:  "METRICS_TABLE_NONE",
	1:  "METRICS_TABLE_ANOMALY",
	2:  "METRICS_TABLE_CONTROLLER_STATS",
	3:  "METRICS_TABLE_HEALTH_SCORE",
	4:  "METRICS_TABLE_SE_STATS",
	5:  "METRICS_TABLE_VSERVER_L4_SERVER",
	6:  "METRICS_TABLE_VSERVER_L4_CLIENT",
	7:  "METRICS_TABLE_VSERVER_L7_CLIENT",
	8:  "METRICS_TABLE_VSERVER_L7_SERVER",
	10: "METRICS_TABLE_RUM_PREAGG_BROWSER",
	11: "METRICS_TABLE_RUM_PREAGG_COUNTRY",
	12: "METRICS_TABLE_RUM_PREAGG_DEVTYPE",
	13: "METRICS_TABLE_RUM_PREAGG_LANG",
	14: "METRICS_TABLE_RUM_PREAGG_OS",
	15: "METRICS_TABLE_RUM_PREAGG_URL",
	16: "METRICS_TABLE_RUM_ANALYTICS",
	23: "METRICS_TABLE_VM_STATS",
	24: "METRICS_TABLE_RESOURCE_TIMING_DIM",
	25: "METRICS_TABLE_RESOURCE_TIMING_BLOB",
	26: "METRICS_TABLE_RUM_PREAGG_IPGROUP",
	27: "METRICS_TABLE_DOS_ANALYTICS",
	28: "METRICS_TABLE_APP_INSIGHTS",
	29: "METRICS_TABLE_VSERVER_DNS",
	30: "METRICS_TABLE_SERVER_DNS",
	31: "METRICS_TABLE_SERVICE_INSIGHTS",
	32: "METRICS_TABLE_SOURCE_INSIGHTS",
	33: "METRICS_TABLE_TENANT_STATS",
}
var MetricsTableId_value = map[string]int32{
	"METRICS_TABLE_NONE":                 0,
	"METRICS_TABLE_ANOMALY":              1,
	"METRICS_TABLE_CONTROLLER_STATS":     2,
	"METRICS_TABLE_HEALTH_SCORE":         3,
	"METRICS_TABLE_SE_STATS":             4,
	"METRICS_TABLE_VSERVER_L4_SERVER":    5,
	"METRICS_TABLE_VSERVER_L4_CLIENT":    6,
	"METRICS_TABLE_VSERVER_L7_CLIENT":    7,
	"METRICS_TABLE_VSERVER_L7_SERVER":    8,
	"METRICS_TABLE_RUM_PREAGG_BROWSER":   10,
	"METRICS_TABLE_RUM_PREAGG_COUNTRY":   11,
	"METRICS_TABLE_RUM_PREAGG_DEVTYPE":   12,
	"METRICS_TABLE_RUM_PREAGG_LANG":      13,
	"METRICS_TABLE_RUM_PREAGG_OS":        14,
	"METRICS_TABLE_RUM_PREAGG_URL":       15,
	"METRICS_TABLE_RUM_ANALYTICS":        16,
	"METRICS_TABLE_VM_STATS":             23,
	"METRICS_TABLE_RESOURCE_TIMING_DIM":  24,
	"METRICS_TABLE_RESOURCE_TIMING_BLOB": 25,
	"METRICS_TABLE_RUM_PREAGG_IPGROUP":   26,
	"METRICS_TABLE_DOS_ANALYTICS":        27,
	"METRICS_TABLE_APP_INSIGHTS":         28,
	"METRICS_TABLE_VSERVER_DNS":          29,
	"METRICS_TABLE_SERVER_DNS":           30,
	"METRICS_TABLE_SERVICE_INSIGHTS":     31,
	"METRICS_TABLE_SOURCE_INSIGHTS":      32,
	"METRICS_TABLE_TENANT_STATS":         33,
}

func (x MetricsTableId) Enum() *MetricsTableId {
	p := new(MetricsTableId)
	*p = x
	return p
}
func (x MetricsTableId) String() string {
	return proto.EnumName(MetricsTableId_name, int32(x))
}
func (x *MetricsTableId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsTableId_value, data, "MetricsTableId")
	if err != nil {
		return err
	}
	*x = MetricsTableId(value)
	return nil
}
func (MetricsTableId) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{15} }

type AnomalyModels int32

const (
	AnomalyModels_EXPONENTIAL_MOVING_AVG          AnomalyModels = 1
	AnomalyModels_EXPONENTIAL_WEIGHTED_MOVING_AVG AnomalyModels = 2
	AnomalyModels_HOLTWINTERS_AT_AS               AnomalyModels = 4
	AnomalyModels_HOLTWINTERS_AT_MS               AnomalyModels = 8
)

var AnomalyModels_name = map[int32]string{
	1: "EXPONENTIAL_MOVING_AVG",
	2: "EXPONENTIAL_WEIGHTED_MOVING_AVG",
	4: "HOLTWINTERS_AT_AS",
	8: "HOLTWINTERS_AT_MS",
}
var AnomalyModels_value = map[string]int32{
	"EXPONENTIAL_MOVING_AVG":          1,
	"EXPONENTIAL_WEIGHTED_MOVING_AVG": 2,
	"HOLTWINTERS_AT_AS":               4,
	"HOLTWINTERS_AT_MS":               8,
}

func (x AnomalyModels) Enum() *AnomalyModels {
	p := new(AnomalyModels)
	*p = x
	return p
}
func (x AnomalyModels) String() string {
	return proto.EnumName(AnomalyModels_name, int32(x))
}
func (x *AnomalyModels) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AnomalyModels_value, data, "AnomalyModels")
	if err != nil {
		return err
	}
	*x = AnomalyModels(value)
	return nil
}
func (AnomalyModels) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{16} }

type AnomalyInterpretation int32

const (
	AnomalyInterpretation_COMBINE_MODELS_ALL AnomalyInterpretation = 0
	AnomalyInterpretation_COMBINE_MODELS_ANY AnomalyInterpretation = 1
)

var AnomalyInterpretation_name = map[int32]string{
	0: "COMBINE_MODELS_ALL",
	1: "COMBINE_MODELS_ANY",
}
var AnomalyInterpretation_value = map[string]int32{
	"COMBINE_MODELS_ALL": 0,
	"COMBINE_MODELS_ANY": 1,
}

func (x AnomalyInterpretation) Enum() *AnomalyInterpretation {
	p := new(AnomalyInterpretation)
	*p = x
	return p
}
func (x AnomalyInterpretation) String() string {
	return proto.EnumName(AnomalyInterpretation_name, int32(x))
}
func (x *AnomalyInterpretation) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AnomalyInterpretation_value, data, "AnomalyInterpretation")
	if err != nil {
		return err
	}
	*x = AnomalyInterpretation(value)
	return nil
}
func (AnomalyInterpretation) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{17} }

type MetricsAgentMsgHandler int32

const (
	MetricsAgentMsgHandler_METRICS_HANDLER_LOCAL MetricsAgentMsgHandler = 0
	MetricsAgentMsgHandler_METRICS_HANDLER_RUM   MetricsAgentMsgHandler = 1
	MetricsAgentMsgHandler_METRICS_HANDLER_DDOS  MetricsAgentMsgHandler = 2
)

var MetricsAgentMsgHandler_name = map[int32]string{
	0: "METRICS_HANDLER_LOCAL",
	1: "METRICS_HANDLER_RUM",
	2: "METRICS_HANDLER_DDOS",
}
var MetricsAgentMsgHandler_value = map[string]int32{
	"METRICS_HANDLER_LOCAL": 0,
	"METRICS_HANDLER_RUM":   1,
	"METRICS_HANDLER_DDOS":  2,
}

func (x MetricsAgentMsgHandler) Enum() *MetricsAgentMsgHandler {
	p := new(MetricsAgentMsgHandler)
	*p = x
	return p
}
func (x MetricsAgentMsgHandler) String() string {
	return proto.EnumName(MetricsAgentMsgHandler_name, int32(x))
}
func (x *MetricsAgentMsgHandler) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsAgentMsgHandler_value, data, "MetricsAgentMsgHandler")
	if err != nil {
		return err
	}
	*x = MetricsAgentMsgHandler(value)
	return nil
}
func (MetricsAgentMsgHandler) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{18} }

type MetricsAggregationFunction int32

const (
	MetricsAggregationFunction_MAGG_NONE MetricsAggregationFunction = 0
	MetricsAggregationFunction_MAGG_AVG  MetricsAggregationFunction = 1
	MetricsAggregationFunction_MAGG_SUM  MetricsAggregationFunction = 2
	MetricsAggregationFunction_MAGG_MAX  MetricsAggregationFunction = 3
	MetricsAggregationFunction_MAGG_MIN  MetricsAggregationFunction = 4
)

var MetricsAggregationFunction_name = map[int32]string{
	0: "MAGG_NONE",
	1: "MAGG_AVG",
	2: "MAGG_SUM",
	3: "MAGG_MAX",
	4: "MAGG_MIN",
}
var MetricsAggregationFunction_value = map[string]int32{
	"MAGG_NONE": 0,
	"MAGG_AVG":  1,
	"MAGG_SUM":  2,
	"MAGG_MAX":  3,
	"MAGG_MIN":  4,
}

func (x MetricsAggregationFunction) Enum() *MetricsAggregationFunction {
	p := new(MetricsAggregationFunction)
	*p = x
	return p
}
func (x MetricsAggregationFunction) String() string {
	return proto.EnumName(MetricsAggregationFunction_name, int32(x))
}
func (x *MetricsAggregationFunction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsAggregationFunction_value, data, "MetricsAggregationFunction")
	if err != nil {
		return err
	}
	*x = MetricsAggregationFunction(value)
	return nil
}
func (MetricsAggregationFunction) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{19} }

type AciSchemaTag int32

const (
	AciSchemaTag_ACI_MDEV          AciSchemaTag = 0
	AciSchemaTag_ACI_MDEVCFG       AciSchemaTag = 1
	AciSchemaTag_ACI_MFUNC_VSERVER AciSchemaTag = 2
)

var AciSchemaTag_name = map[int32]string{
	0: "ACI_MDEV",
	1: "ACI_MDEVCFG",
	2: "ACI_MFUNC_VSERVER",
}
var AciSchemaTag_value = map[string]int32{
	"ACI_MDEV":          0,
	"ACI_MDEVCFG":       1,
	"ACI_MFUNC_VSERVER": 2,
}

func (x AciSchemaTag) Enum() *AciSchemaTag {
	p := new(AciSchemaTag)
	*p = x
	return p
}
func (x AciSchemaTag) String() string {
	return proto.EnumName(AciSchemaTag_name, int32(x))
}
func (x *AciSchemaTag) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AciSchemaTag_value, data, "AciSchemaTag")
	if err != nil {
		return err
	}
	*x = AciSchemaTag(value)
	return nil
}
func (AciSchemaTag) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{20} }

type MetricsEntityType int32

const (
	MetricsEntityType_VSERVER_METRICS_ENTITY     MetricsEntityType = 1
	MetricsEntityType_VM_METRICS_ENTITY          MetricsEntityType = 2
	MetricsEntityType_SE_METRICS_ENTITY          MetricsEntityType = 3
	MetricsEntityType_CONTROLLER_METRICS_ENTITY  MetricsEntityType = 4
	MetricsEntityType_APPLICATION_METRICS_ENTITY MetricsEntityType = 5
	MetricsEntityType_TENANT_METRICS_ENTITY      MetricsEntityType = 6
)

var MetricsEntityType_name = map[int32]string{
	1: "VSERVER_METRICS_ENTITY",
	2: "VM_METRICS_ENTITY",
	3: "SE_METRICS_ENTITY",
	4: "CONTROLLER_METRICS_ENTITY",
	5: "APPLICATION_METRICS_ENTITY",
	6: "TENANT_METRICS_ENTITY",
}
var MetricsEntityType_value = map[string]int32{
	"VSERVER_METRICS_ENTITY":     1,
	"VM_METRICS_ENTITY":          2,
	"SE_METRICS_ENTITY":          3,
	"CONTROLLER_METRICS_ENTITY":  4,
	"APPLICATION_METRICS_ENTITY": 5,
	"TENANT_METRICS_ENTITY":      6,
}

func (x MetricsEntityType) Enum() *MetricsEntityType {
	p := new(MetricsEntityType)
	*p = x
	return p
}
func (x MetricsEntityType) String() string {
	return proto.EnumName(MetricsEntityType_name, int32(x))
}
func (x *MetricsEntityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricsEntityType_value, data, "MetricsEntityType")
	if err != nil {
		return err
	}
	*x = MetricsEntityType(value)
	return nil
}
func (MetricsEntityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{21} }

type MetricAnomalyzerPriority int32

const (
	MetricAnomalyzerPriority_M_ANOMALYZER_HIGH   MetricAnomalyzerPriority = 1
	MetricAnomalyzerPriority_M_ANOMALYZER_MEDIUM MetricAnomalyzerPriority = 2
	MetricAnomalyzerPriority_M_ANOMALYZER_LOW    MetricAnomalyzerPriority = 3
	MetricAnomalyzerPriority_M_ANOMALYZER_NONE   MetricAnomalyzerPriority = 4
)

var MetricAnomalyzerPriority_name = map[int32]string{
	1: "M_ANOMALYZER_HIGH",
	2: "M_ANOMALYZER_MEDIUM",
	3: "M_ANOMALYZER_LOW",
	4: "M_ANOMALYZER_NONE",
}
var MetricAnomalyzerPriority_value = map[string]int32{
	"M_ANOMALYZER_HIGH":   1,
	"M_ANOMALYZER_MEDIUM": 2,
	"M_ANOMALYZER_LOW":    3,
	"M_ANOMALYZER_NONE":   4,
}

func (x MetricAnomalyzerPriority) Enum() *MetricAnomalyzerPriority {
	p := new(MetricAnomalyzerPriority)
	*p = x
	return p
}
func (x MetricAnomalyzerPriority) String() string {
	return proto.EnumName(MetricAnomalyzerPriority_name, int32(x))
}
func (x *MetricAnomalyzerPriority) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricAnomalyzerPriority_value, data, "MetricAnomalyzerPriority")
	if err != nil {
		return err
	}
	*x = MetricAnomalyzerPriority(value)
	return nil
}
func (MetricAnomalyzerPriority) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{22} }

type EventDetailsOptions int32

const (
	EventDetailsOptions_EVENT_DETAILS_NONE            EventDetailsOptions = 0
	EventDetailsOptions_EVENT_DETAILS_INCLUDE_SUMMARY EventDetailsOptions = 1
	EventDetailsOptions_EVENT_DETAILS_ONLY_SUMMARY    EventDetailsOptions = 2
)

var EventDetailsOptions_name = map[int32]string{
	0: "EVENT_DETAILS_NONE",
	1: "EVENT_DETAILS_INCLUDE_SUMMARY",
	2: "EVENT_DETAILS_ONLY_SUMMARY",
}
var EventDetailsOptions_value = map[string]int32{
	"EVENT_DETAILS_NONE":            0,
	"EVENT_DETAILS_INCLUDE_SUMMARY": 1,
	"EVENT_DETAILS_ONLY_SUMMARY":    2,
}

func (x EventDetailsOptions) Enum() *EventDetailsOptions {
	p := new(EventDetailsOptions)
	*p = x
	return p
}
func (x EventDetailsOptions) String() string {
	return proto.EnumName(EventDetailsOptions_name, int32(x))
}
func (x *EventDetailsOptions) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EventDetailsOptions_value, data, "EventDetailsOptions")
	if err != nil {
		return err
	}
	*x = EventDetailsOptions(value)
	return nil
}
func (EventDetailsOptions) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{23} }

// AlertLevel
// The type of Alert
type AlertLevel int32

const (
	AlertLevel_ALERT_LOW    AlertLevel = 1
	AlertLevel_ALERT_MEDIUM AlertLevel = 2
	AlertLevel_ALERT_HIGH   AlertLevel = 3
)

var AlertLevel_name = map[int32]string{
	1: "ALERT_LOW",
	2: "ALERT_MEDIUM",
	3: "ALERT_HIGH",
}
var AlertLevel_value = map[string]int32{
	"ALERT_LOW":    1,
	"ALERT_MEDIUM": 2,
	"ALERT_HIGH":   3,
}

func (x AlertLevel) Enum() *AlertLevel {
	p := new(AlertLevel)
	*p = x
	return p
}
func (x AlertLevel) String() string {
	return proto.EnumName(AlertLevel_name, int32(x))
}
func (x *AlertLevel) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlertLevel_value, data, "AlertLevel")
	if err != nil {
		return err
	}
	*x = AlertLevel(value)
	return nil
}
func (AlertLevel) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{24} }

type AlertActionGroupDefaults int32

const (
	AlertActionGroupDefaults_ACTIONGROUP_LOW      AlertActionGroupDefaults = 1
	AlertActionGroupDefaults_ACTIONGROUP_MEDIUM   AlertActionGroupDefaults = 2
	AlertActionGroupDefaults_ACTIONGROUP_HIGH     AlertActionGroupDefaults = 3
	AlertActionGroupDefaults_ACTIONGROUP_EXTERNAL AlertActionGroupDefaults = 4
)

var AlertActionGroupDefaults_name = map[int32]string{
	1: "ACTIONGROUP_LOW",
	2: "ACTIONGROUP_MEDIUM",
	3: "ACTIONGROUP_HIGH",
	4: "ACTIONGROUP_EXTERNAL",
}
var AlertActionGroupDefaults_value = map[string]int32{
	"ACTIONGROUP_LOW":      1,
	"ACTIONGROUP_MEDIUM":   2,
	"ACTIONGROUP_HIGH":     3,
	"ACTIONGROUP_EXTERNAL": 4,
}

func (x AlertActionGroupDefaults) Enum() *AlertActionGroupDefaults {
	p := new(AlertActionGroupDefaults)
	*p = x
	return p
}
func (x AlertActionGroupDefaults) String() string {
	return proto.EnumName(AlertActionGroupDefaults_name, int32(x))
}
func (x *AlertActionGroupDefaults) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlertActionGroupDefaults_value, data, "AlertActionGroupDefaults")
	if err != nil {
		return err
	}
	*x = AlertActionGroupDefaults(value)
	return nil
}
func (AlertActionGroupDefaults) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{25} }

type AlertConfigScope int32

const (
	AlertConfigScope_ALERT_CONFIG_SCOPE_TENANT AlertConfigScope = 0
	AlertConfigScope_ALERT_CONFIG_SCOPE_ADMIN  AlertConfigScope = 1
)

var AlertConfigScope_name = map[int32]string{
	0: "ALERT_CONFIG_SCOPE_TENANT",
	1: "ALERT_CONFIG_SCOPE_ADMIN",
}
var AlertConfigScope_value = map[string]int32{
	"ALERT_CONFIG_SCOPE_TENANT": 0,
	"ALERT_CONFIG_SCOPE_ADMIN":  1,
}

func (x AlertConfigScope) Enum() *AlertConfigScope {
	p := new(AlertConfigScope)
	*p = x
	return p
}
func (x AlertConfigScope) String() string {
	return proto.EnumName(AlertConfigScope_name, int32(x))
}
func (x *AlertConfigScope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AlertConfigScope_value, data, "AlertConfigScope")
	if err != nil {
		return err
	}
	*x = AlertConfigScope(value)
	return nil
}
func (AlertConfigScope) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{26} }

type IpAddrType int32

const (
	IpAddrType_V4  IpAddrType = 0
	IpAddrType_DNS IpAddrType = 1
)

var IpAddrType_name = map[int32]string{
	0: "V4",
	1: "DNS",
}
var IpAddrType_value = map[string]int32{
	"V4":  0,
	"DNS": 1,
}

func (x IpAddrType) Enum() *IpAddrType {
	p := new(IpAddrType)
	*p = x
	return p
}
func (x IpAddrType) String() string {
	return proto.EnumName(IpAddrType_name, int32(x))
}
func (x *IpAddrType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IpAddrType_value, data, "IpAddrType")
	if err != nil {
		return err
	}
	*x = IpAddrType(value)
	return nil
}
func (IpAddrType) EnumDescriptor() ([]byte, []int) { return fileDescriptor74, []int{27} }

type MetricsProviderHypervisor struct {
	Vmware           *string `protobuf:"bytes,1,opt,name=vmware" json:"vmware,omitempty"`
	Kvm              *string `protobuf:"bytes,2,opt,name=kvm" json:"kvm,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetricsProviderHypervisor) Reset()                    { *m = MetricsProviderHypervisor{} }
func (m *MetricsProviderHypervisor) String() string            { return proto.CompactTextString(m) }
func (*MetricsProviderHypervisor) ProtoMessage()               {}
func (*MetricsProviderHypervisor) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{0} }

func (m *MetricsProviderHypervisor) GetVmware() string {
	if m != nil && m.Vmware != nil {
		return *m.Vmware
	}
	return ""
}

func (m *MetricsProviderHypervisor) GetKvm() string {
	if m != nil && m.Kvm != nil {
		return *m.Kvm
	}
	return ""
}

type MetricRespLatencyTimeInterval struct {
	Start            *MetricRespLatencyTime `protobuf:"varint,1,req,name=start,enum=MetricRespLatencyTime" json:"start,omitempty"`
	End              *MetricRespLatencyTime `protobuf:"varint,2,req,name=end,enum=MetricRespLatencyTime" json:"end,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *MetricRespLatencyTimeInterval) Reset()                    { *m = MetricRespLatencyTimeInterval{} }
func (m *MetricRespLatencyTimeInterval) String() string            { return proto.CompactTextString(m) }
func (*MetricRespLatencyTimeInterval) ProtoMessage()               {}
func (*MetricRespLatencyTimeInterval) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{1} }

func (m *MetricRespLatencyTimeInterval) GetStart() MetricRespLatencyTime {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return MetricRespLatencyTime_METRIC_RESP_TIME_0
}

func (m *MetricRespLatencyTimeInterval) GetEnd() MetricRespLatencyTime {
	if m != nil && m.End != nil {
		return *m.End
	}
	return MetricRespLatencyTime_METRIC_RESP_TIME_0
}

type MetricsOptions struct {
	MetricsObjType         *MetricsObjType              `protobuf:"varint,1,opt,name=metrics_obj_type,enum=MetricsObjType" json:"metrics_obj_type,omitempty"`
	MetricsAggregation     []MetricsAggregationEnum     `protobuf:"varint,2,rep,name=metrics_aggregation,enum=MetricsAggregationEnum" json:"metrics_aggregation,omitempty"`
	MetricsZScoreThreshold *float64                     `protobuf:"fixed64,3,opt,name=metrics_z_score_threshold" json:"metrics_z_score_threshold,omitempty"`
	Indexes                []MetricsIndexes             `protobuf:"varint,4,rep,name=indexes,enum=MetricsIndexes" json:"indexes,omitempty"`
	ArchivePolicy          *MetricsDbTableArchivePolicy `protobuf:"varint,5,opt,name=archive_policy,enum=MetricsDbTableArchivePolicy,def=1" json:"archive_policy,omitempty"`
	TableId                *MetricsTableId              `protobuf:"varint,6,opt,name=table_id,enum=MetricsTableId" json:"table_id,omitempty"`
	MetricsObject          *bool                        `protobuf:"varint,7,opt,name=metrics_object" json:"metrics_object,omitempty"`
	XXX_unrecognized       []byte                       `json:"-"`
}

func (m *MetricsOptions) Reset()                    { *m = MetricsOptions{} }
func (m *MetricsOptions) String() string            { return proto.CompactTextString(m) }
func (*MetricsOptions) ProtoMessage()               {}
func (*MetricsOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{2} }

const Default_MetricsOptions_ArchivePolicy MetricsDbTableArchivePolicy = MetricsDbTableArchivePolicy_METRICS_DB_TABLE_ARCHIVE_ALL

func (m *MetricsOptions) GetMetricsObjType() MetricsObjType {
	if m != nil && m.MetricsObjType != nil {
		return *m.MetricsObjType
	}
	return MetricsObjType_METRICS_OBJ_TYPE_UNKNOWN
}

func (m *MetricsOptions) GetMetricsAggregation() []MetricsAggregationEnum {
	if m != nil {
		return m.MetricsAggregation
	}
	return nil
}

func (m *MetricsOptions) GetMetricsZScoreThreshold() float64 {
	if m != nil && m.MetricsZScoreThreshold != nil {
		return *m.MetricsZScoreThreshold
	}
	return 0
}

func (m *MetricsOptions) GetIndexes() []MetricsIndexes {
	if m != nil {
		return m.Indexes
	}
	return nil
}

func (m *MetricsOptions) GetArchivePolicy() MetricsDbTableArchivePolicy {
	if m != nil && m.ArchivePolicy != nil {
		return *m.ArchivePolicy
	}
	return Default_MetricsOptions_ArchivePolicy
}

func (m *MetricsOptions) GetTableId() MetricsTableId {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return MetricsTableId_METRICS_TABLE_NONE
}

func (m *MetricsOptions) GetMetricsObject() bool {
	if m != nil && m.MetricsObject != nil {
		return *m.MetricsObject
	}
	return false
}

type MetricsIndexesOption struct {
	// Is this field a primary key
	PrimaryKey *bool `protobuf:"varint,1,opt,name=primary_key" json:"primary_key,omitempty"`
	// Data type of the field
	Dtype *int32 `protobuf:"varint,2,opt,name=dtype" json:"dtype,omitempty"`
	// Is this field to be indexed in DB
	Toindex *bool `protobuf:"varint,3,opt,name=toindex" json:"toindex,omitempty"`
	// Is this field nullable
	Nullable *bool `protobuf:"varint,4,opt,name=nullable" json:"nullable,omitempty"`
	// Is this field required to be unique in the DB
	UniqueKey *bool `protobuf:"varint,5,opt,name=unique_key" json:"unique_key,omitempty"`
	// Foreign key for this field
	ForeignKey *string `protobuf:"bytes,6,opt,name=foreign_key" json:"foreign_key,omitempty"`
	// Enum value of the index; dtype should reflect ENUM
	EnumName         *string `protobuf:"bytes,7,opt,name=enum_name" json:"enum_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MetricsIndexesOption) Reset()                    { *m = MetricsIndexesOption{} }
func (m *MetricsIndexesOption) String() string            { return proto.CompactTextString(m) }
func (*MetricsIndexesOption) ProtoMessage()               {}
func (*MetricsIndexesOption) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{3} }

func (m *MetricsIndexesOption) GetPrimaryKey() bool {
	if m != nil && m.PrimaryKey != nil {
		return *m.PrimaryKey
	}
	return false
}

func (m *MetricsIndexesOption) GetDtype() int32 {
	if m != nil && m.Dtype != nil {
		return *m.Dtype
	}
	return 0
}

func (m *MetricsIndexesOption) GetToindex() bool {
	if m != nil && m.Toindex != nil {
		return *m.Toindex
	}
	return false
}

func (m *MetricsIndexesOption) GetNullable() bool {
	if m != nil && m.Nullable != nil {
		return *m.Nullable
	}
	return false
}

func (m *MetricsIndexesOption) GetUniqueKey() bool {
	if m != nil && m.UniqueKey != nil {
		return *m.UniqueKey
	}
	return false
}

func (m *MetricsIndexesOption) GetForeignKey() string {
	if m != nil && m.ForeignKey != nil {
		return *m.ForeignKey
	}
	return ""
}

func (m *MetricsIndexesOption) GetEnumName() string {
	if m != nil && m.EnumName != nil {
		return *m.EnumName
	}
	return ""
}

type MetricsAnomalyzerOptions struct {
	AnomalyModelOpts      []*MetricsAnomalyModelOptions `protobuf:"bytes,1,rep,name=anomaly_model_opts" json:"anomaly_model_opts,omitempty"`
	SkipEvalPeriod        *bool                         `protobuf:"varint,2,opt,name=skip_eval_period,def=0" json:"skip_eval_period,omitempty"`
	AnomalyInterpretation *AnomalyInterpretation        `protobuf:"varint,4,opt,name=anomaly_interpretation,enum=AnomalyInterpretation,def=0" json:"anomaly_interpretation,omitempty"`
	XXX_unrecognized      []byte                        `json:"-"`
}

func (m *MetricsAnomalyzerOptions) Reset()                    { *m = MetricsAnomalyzerOptions{} }
func (m *MetricsAnomalyzerOptions) String() string            { return proto.CompactTextString(m) }
func (*MetricsAnomalyzerOptions) ProtoMessage()               {}
func (*MetricsAnomalyzerOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{4} }

const Default_MetricsAnomalyzerOptions_SkipEvalPeriod bool = false
const Default_MetricsAnomalyzerOptions_AnomalyInterpretation AnomalyInterpretation = AnomalyInterpretation_COMBINE_MODELS_ALL

func (m *MetricsAnomalyzerOptions) GetAnomalyModelOpts() []*MetricsAnomalyModelOptions {
	if m != nil {
		return m.AnomalyModelOpts
	}
	return nil
}

func (m *MetricsAnomalyzerOptions) GetSkipEvalPeriod() bool {
	if m != nil && m.SkipEvalPeriod != nil {
		return *m.SkipEvalPeriod
	}
	return Default_MetricsAnomalyzerOptions_SkipEvalPeriod
}

func (m *MetricsAnomalyzerOptions) GetAnomalyInterpretation() AnomalyInterpretation {
	if m != nil && m.AnomalyInterpretation != nil {
		return *m.AnomalyInterpretation
	}
	return Default_MetricsAnomalyzerOptions_AnomalyInterpretation
}

type MetricsAnomalyModelOptions struct {
	AnomalyModel     *AnomalyModels `protobuf:"varint,1,opt,name=anomaly_model,enum=AnomalyModels,def=2" json:"anomaly_model,omitempty"`
	Period           *MetricPeriod  `protobuf:"varint,2,opt,name=period,enum=MetricPeriod" json:"period,omitempty"`
	Seasonality      *int32         `protobuf:"varint,3,opt,name=seasonality" json:"seasonality,omitempty"`
	Alpha            *float64       `protobuf:"fixed64,5,opt,name=alpha,def=0.22" json:"alpha,omitempty"`
	Beta             *float64       `protobuf:"fixed64,6,opt,name=beta,def=0.00034" json:"beta,omitempty"`
	Gamma            *float64       `protobuf:"fixed64,7,opt,name=gamma,def=0.22" json:"gamma,omitempty"`
	Delta            *float64       `protobuf:"fixed64,9,opt,name=delta,def=0.22" json:"delta,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *MetricsAnomalyModelOptions) Reset()                    { *m = MetricsAnomalyModelOptions{} }
func (m *MetricsAnomalyModelOptions) String() string            { return proto.CompactTextString(m) }
func (*MetricsAnomalyModelOptions) ProtoMessage()               {}
func (*MetricsAnomalyModelOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{5} }

const Default_MetricsAnomalyModelOptions_AnomalyModel AnomalyModels = AnomalyModels_EXPONENTIAL_WEIGHTED_MOVING_AVG
const Default_MetricsAnomalyModelOptions_Alpha float64 = 0.22
const Default_MetricsAnomalyModelOptions_Beta float64 = 0.00034
const Default_MetricsAnomalyModelOptions_Gamma float64 = 0.22
const Default_MetricsAnomalyModelOptions_Delta float64 = 0.22

func (m *MetricsAnomalyModelOptions) GetAnomalyModel() AnomalyModels {
	if m != nil && m.AnomalyModel != nil {
		return *m.AnomalyModel
	}
	return Default_MetricsAnomalyModelOptions_AnomalyModel
}

func (m *MetricsAnomalyModelOptions) GetPeriod() MetricPeriod {
	if m != nil && m.Period != nil {
		return *m.Period
	}
	return MetricPeriod_METRIC_PERIOD_UNDEF
}

func (m *MetricsAnomalyModelOptions) GetSeasonality() int32 {
	if m != nil && m.Seasonality != nil {
		return *m.Seasonality
	}
	return 0
}

func (m *MetricsAnomalyModelOptions) GetAlpha() float64 {
	if m != nil && m.Alpha != nil {
		return *m.Alpha
	}
	return Default_MetricsAnomalyModelOptions_Alpha
}

func (m *MetricsAnomalyModelOptions) GetBeta() float64 {
	if m != nil && m.Beta != nil {
		return *m.Beta
	}
	return Default_MetricsAnomalyModelOptions_Beta
}

func (m *MetricsAnomalyModelOptions) GetGamma() float64 {
	if m != nil && m.Gamma != nil {
		return *m.Gamma
	}
	return Default_MetricsAnomalyModelOptions_Gamma
}

func (m *MetricsAnomalyModelOptions) GetDelta() float64 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return Default_MetricsAnomalyModelOptions_Delta
}

type MetricsRuleOptions struct {
	RuleType              *MetricsRuleType `protobuf:"varint,1,opt,name=rule_type,enum=MetricsRuleType" json:"rule_type,omitempty"`
	LowWms                []float64        `protobuf:"fixed64,2,rep,name=low_wms" json:"low_wms,omitempty"`
	HighWms               []float64        `protobuf:"fixed64,3,rep,name=high_wms" json:"high_wms,omitempty"`
	EventIdName           *string          `protobuf:"bytes,4,opt,name=event_id_name" json:"event_id_name,omitempty"`
	OnlyPositiveAnomalies *bool            `protobuf:"varint,6,opt,name=only_positive_anomalies,def=1" json:"only_positive_anomalies,omitempty"`
	ValidEventPeriod      *MetricPeriod    `protobuf:"varint,11,opt,name=valid_event_period,enum=MetricPeriod" json:"valid_event_period,omitempty"`
	XXX_unrecognized      []byte           `json:"-"`
}

func (m *MetricsRuleOptions) Reset()                    { *m = MetricsRuleOptions{} }
func (m *MetricsRuleOptions) String() string            { return proto.CompactTextString(m) }
func (*MetricsRuleOptions) ProtoMessage()               {}
func (*MetricsRuleOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{6} }

const Default_MetricsRuleOptions_OnlyPositiveAnomalies bool = true

func (m *MetricsRuleOptions) GetRuleType() MetricsRuleType {
	if m != nil && m.RuleType != nil {
		return *m.RuleType
	}
	return MetricsRuleType_GENERATE_EVENT_WITH_LOW_WM
}

func (m *MetricsRuleOptions) GetLowWms() []float64 {
	if m != nil {
		return m.LowWms
	}
	return nil
}

func (m *MetricsRuleOptions) GetHighWms() []float64 {
	if m != nil {
		return m.HighWms
	}
	return nil
}

func (m *MetricsRuleOptions) GetEventIdName() string {
	if m != nil && m.EventIdName != nil {
		return *m.EventIdName
	}
	return ""
}

func (m *MetricsRuleOptions) GetOnlyPositiveAnomalies() bool {
	if m != nil && m.OnlyPositiveAnomalies != nil {
		return *m.OnlyPositiveAnomalies
	}
	return Default_MetricsRuleOptions_OnlyPositiveAnomalies
}

func (m *MetricsRuleOptions) GetValidEventPeriod() MetricPeriod {
	if m != nil && m.ValidEventPeriod != nil {
		return *m.ValidEventPeriod
	}
	return MetricPeriod_METRIC_PERIOD_UNDEF
}

type MetricIdOptions struct {
	MetricsObjType      *MetricsObjType `protobuf:"varint,1,opt,name=metrics_obj_type,enum=MetricsObjType" json:"metrics_obj_type,omitempty"`
	MetricsObjFieldName *string         `protobuf:"bytes,2,opt,name=metrics_obj_field_name" json:"metrics_obj_field_name,omitempty"`
	ResourceThreshold   *uint32         `protobuf:"varint,3,opt,name=resource_threshold" json:"resource_threshold,omitempty"`
	IsHsContributor     *bool           `protobuf:"varint,4,opt,name=is_hs_contributor,def=1" json:"is_hs_contributor,omitempty"`
	XXX_unrecognized    []byte          `json:"-"`
}

func (m *MetricIdOptions) Reset()                    { *m = MetricIdOptions{} }
func (m *MetricIdOptions) String() string            { return proto.CompactTextString(m) }
func (*MetricIdOptions) ProtoMessage()               {}
func (*MetricIdOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{7} }

const Default_MetricIdOptions_IsHsContributor bool = true

func (m *MetricIdOptions) GetMetricsObjType() MetricsObjType {
	if m != nil && m.MetricsObjType != nil {
		return *m.MetricsObjType
	}
	return MetricsObjType_METRICS_OBJ_TYPE_UNKNOWN
}

func (m *MetricIdOptions) GetMetricsObjFieldName() string {
	if m != nil && m.MetricsObjFieldName != nil {
		return *m.MetricsObjFieldName
	}
	return ""
}

func (m *MetricIdOptions) GetResourceThreshold() uint32 {
	if m != nil && m.ResourceThreshold != nil {
		return *m.ResourceThreshold
	}
	return 0
}

func (m *MetricIdOptions) GetIsHsContributor() bool {
	if m != nil && m.IsHsContributor != nil {
		return *m.IsHsContributor
	}
	return Default_MetricIdOptions_IsHsContributor
}

type AlertOptions struct {
	Level            *AlertLevel       `protobuf:"varint,1,req,name=level,enum=AlertLevel" json:"level,omitempty"`
	Threshold        *uint32           `protobuf:"varint,2,opt,name=threshold,def=1" json:"threshold,omitempty"`
	CfgScope         *AlertConfigScope `protobuf:"varint,3,opt,name=cfg_scope,enum=AlertConfigScope,def=0" json:"cfg_scope,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AlertOptions) Reset()                    { *m = AlertOptions{} }
func (m *AlertOptions) String() string            { return proto.CompactTextString(m) }
func (*AlertOptions) ProtoMessage()               {}
func (*AlertOptions) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{8} }

const Default_AlertOptions_Threshold uint32 = 1
const Default_AlertOptions_CfgScope AlertConfigScope = AlertConfigScope_ALERT_CONFIG_SCOPE_TENANT

func (m *AlertOptions) GetLevel() AlertLevel {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return AlertLevel_ALERT_LOW
}

func (m *AlertOptions) GetThreshold() uint32 {
	if m != nil && m.Threshold != nil {
		return *m.Threshold
	}
	return Default_AlertOptions_Threshold
}

func (m *AlertOptions) GetCfgScope() AlertConfigScope {
	if m != nil && m.CfgScope != nil {
		return *m.CfgScope
	}
	return Default_AlertOptions_CfgScope
}

// Currently only supported for the priority fields.
// This could have been python dictionary but keep it in protobuf so that
// it can eventually move to the field options.
type MetricsDerivationData struct {
	// Eg. sum_get_resp_bkt1, sum_get_resp_bkt2, sum_get_resp_bkt3, sum_get_reqs
	MetricIds                 *string              `protobuf:"bytes,1,req,name=metric_ids" json:"metric_ids,omitempty"`
	DerivationFn              *MetricsDerivationFn `protobuf:"varint,2,req,name=derivation_fn,enum=MetricsDerivationFn" json:"derivation_fn,omitempty"`
	IncludeDerivationMetrics  *bool                `protobuf:"varint,3,opt,name=include_derivation_metrics,def=0" json:"include_derivation_metrics,omitempty"`
	ExcludeDerivedMetric      *bool                `protobuf:"varint,4,opt,name=exclude_derived_metric,def=0" json:"exclude_derived_metric,omitempty"`
	ResultHasAdditionalFields *bool                `protobuf:"varint,5,opt,name=result_has_additional_fields,def=0" json:"result_has_additional_fields,omitempty"`
	JoinTables                *MetricsTableId      `protobuf:"varint,6,opt,name=join_tables,enum=MetricsTableId" json:"join_tables,omitempty"`
	SkipBackendDerivation     *bool                `protobuf:"varint,7,opt,name=skip_backend_derivation,def=0" json:"skip_backend_derivation,omitempty"`
	XXX_unrecognized          []byte               `json:"-"`
}

func (m *MetricsDerivationData) Reset()                    { *m = MetricsDerivationData{} }
func (m *MetricsDerivationData) String() string            { return proto.CompactTextString(m) }
func (*MetricsDerivationData) ProtoMessage()               {}
func (*MetricsDerivationData) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{9} }

const Default_MetricsDerivationData_IncludeDerivationMetrics bool = false
const Default_MetricsDerivationData_ExcludeDerivedMetric bool = false
const Default_MetricsDerivationData_ResultHasAdditionalFields bool = false
const Default_MetricsDerivationData_SkipBackendDerivation bool = false

func (m *MetricsDerivationData) GetMetricIds() string {
	if m != nil && m.MetricIds != nil {
		return *m.MetricIds
	}
	return ""
}

func (m *MetricsDerivationData) GetDerivationFn() MetricsDerivationFn {
	if m != nil && m.DerivationFn != nil {
		return *m.DerivationFn
	}
	return MetricsDerivationFn_METRICS_ALIAS
}

func (m *MetricsDerivationData) GetIncludeDerivationMetrics() bool {
	if m != nil && m.IncludeDerivationMetrics != nil {
		return *m.IncludeDerivationMetrics
	}
	return Default_MetricsDerivationData_IncludeDerivationMetrics
}

func (m *MetricsDerivationData) GetExcludeDerivedMetric() bool {
	if m != nil && m.ExcludeDerivedMetric != nil {
		return *m.ExcludeDerivedMetric
	}
	return Default_MetricsDerivationData_ExcludeDerivedMetric
}

func (m *MetricsDerivationData) GetResultHasAdditionalFields() bool {
	if m != nil && m.ResultHasAdditionalFields != nil {
		return *m.ResultHasAdditionalFields
	}
	return Default_MetricsDerivationData_ResultHasAdditionalFields
}

func (m *MetricsDerivationData) GetJoinTables() MetricsTableId {
	if m != nil && m.JoinTables != nil {
		return *m.JoinTables
	}
	return MetricsTableId_METRICS_TABLE_NONE
}

func (m *MetricsDerivationData) GetSkipBackendDerivation() bool {
	if m != nil && m.SkipBackendDerivation != nil {
		return *m.SkipBackendDerivation
	}
	return Default_MetricsDerivationData_SkipBackendDerivation
}

type IpAddr struct {
	Addr             *string     `protobuf:"bytes,1,req,name=addr" json:"addr,omitempty"`
	Type             *IpAddrType `protobuf:"varint,2,req,name=type,enum=IpAddrType" json:"type,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *IpAddr) Reset()                    { *m = IpAddr{} }
func (m *IpAddr) String() string            { return proto.CompactTextString(m) }
func (*IpAddr) ProtoMessage()               {}
func (*IpAddr) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{10} }

func (m *IpAddr) GetAddr() string {
	if m != nil && m.Addr != nil {
		return *m.Addr
	}
	return ""
}

func (m *IpAddr) GetType() IpAddrType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return IpAddrType_V4
}

type IpAddrPrefix struct {
	IpAddr           *IpAddr `protobuf:"bytes,1,req,name=ip_addr" json:"ip_addr,omitempty"`
	Mask             *int32  `protobuf:"varint,2,req,name=mask" json:"mask,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IpAddrPrefix) Reset()                    { *m = IpAddrPrefix{} }
func (m *IpAddrPrefix) String() string            { return proto.CompactTextString(m) }
func (*IpAddrPrefix) ProtoMessage()               {}
func (*IpAddrPrefix) Descriptor() ([]byte, []int) { return fileDescriptor74, []int{11} }

func (m *IpAddrPrefix) GetIpAddr() *IpAddr {
	if m != nil {
		return m.IpAddr
	}
	return nil
}

func (m *IpAddrPrefix) GetMask() int32 {
	if m != nil && m.Mask != nil {
		return *m.Mask
	}
	return 0
}

var E_ServiceTransactional = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50001,
	Name:          "service_transactional",
	Tag:           "varint,50001,opt,name=service_transactional",
}

var E_ServiceQName = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50002,
	Name:          "service_q_name",
	Tag:           "bytes,50002,opt,name=service_q_name",
}

var E_ServiceRpcTimeout = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.ServiceOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         50003,
	Name:          "service_rpc_timeout",
	Tag:           "varint,50003,opt,name=service_rpc_timeout",
}

var E_MethodTransactional = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50001,
	Name:          "method_transactional",
	Tag:           "varint,50001,opt,name=method_transactional",
}

var E_MethodQName = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50002,
	Name:          "method_q_name",
	Tag:           "bytes,50002,opt,name=method_q_name",
}

var E_MethodRpcTimeout = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         50003,
	Name:          "method_rpc_timeout",
	Tag:           "varint,50003,opt,name=method_rpc_timeout",
}

var E_MethodExpirable = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MethodOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         50004,
	Name:          "method_expirable",
	Tag:           "varint,50004,opt,name=method_expirable",
}

var E_RefersTo = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60001,
	Name:          "refers_to",
	Tag:           "bytes,60001,opt,name=refers_to",
}

var E_WeakRefersTo = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60002,
	Name:          "weak_refers_to",
	Tag:           "bytes,60002,opt,name=weak_refers_to",
}

var E_BelongsTo = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60003,
	Name:          "belongs_to",
	Tag:           "bytes,60003,opt,name=belongs_to",
}

var E_FDescription = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60004,
	Name:          "f_description",
	Tag:           "bytes,60004,opt,name=f_description",
}

var E_Units = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60005,
	Name:          "units",
	Tag:           "bytes,60005,opt,name=units",
}

var E_Range = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60006,
	Name:          "range",
	Tag:           "bytes,60006,opt,name=range",
}

var E_Pattern = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60007,
	Name:          "pattern",
	Tag:           "bytes,60007,opt,name=pattern",
}

var E_MinElements = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         60008,
	Name:          "min_elements",
	Tag:           "varint,60008,opt,name=min_elements",
}

var E_MaxElements = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*int32)(nil),
	Field:         60009,
	Name:          "max_elements",
	Tag:           "varint,60009,opt,name=max_elements",
}

var E_UnionEnum = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60010,
	Name:          "union_enum",
	Tag:           "bytes,60010,opt,name=union_enum",
}

var E_SpecialValues = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60011,
	Name:          "special_values",
	Tag:           "bytes,60011,opt,name=special_values",
}

var E_MetricType = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricType)(nil),
	Field:         60012,
	Name:          "metric_type",
	Tag:           "varint,60012,opt,name=metric_type,enum=MetricType",
}

var E_StringLength = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*uint32)(nil),
	Field:         60013,
	Name:          "string_length",
	Tag:           "varint,60013,opt,name=string_length",
}

var E_FMust = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60014,
	Name:          "f_must",
	Tag:           "bytes,60014,opt,name=f_must",
}

var E_OrderedBy = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60015,
	Name:          "ordered_by",
	Tag:           "bytes,60015,opt,name=ordered_by",
}

var E_HyperlinkTo = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60016,
	Name:          "hyperlink_to",
	Tag:           "bytes,60016,opt,name=hyperlink_to",
}

var E_SpecialDefault = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60017,
	Name:          "special_default",
	Tag:           "bytes,60017,opt,name=special_default",
}

var E_FTypedef = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60018,
	Name:          "f_typedef",
	Tag:           "bytes,60018,opt,name=f_typedef",
}

var E_FReadonly = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60019,
	Name:          "f_readonly",
	Tag:           "varint,60019,opt,name=f_readonly",
}

var E_FBlobMessage = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60020,
	Name:          "f_blob_message",
	Tag:           "varint,60020,opt,name=f_blob_message",
}

var E_DispHyperlinkTo = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60021,
	Name:          "disp_hyperlink_to",
	Tag:           "bytes,60021,opt,name=disp_hyperlink_to",
}

var E_FSensitive = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60022,
	Name:          "f_sensitive",
	Tag:           "varint,60022,opt,name=f_sensitive",
}

var E_FHidden = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60023,
	Name:          "f_hidden",
	Tag:           "varint,60023,opt,name=f_hidden",
}

var E_FSkipInputCheck = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60024,
	Name:          "f_skip_input_check",
	Tag:           "varint,60024,opt,name=f_skip_input_check",
}

var E_FJsonDefault = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60025,
	Name:          "f_json_default",
	Tag:           "bytes,60025,opt,name=f_json_default",
}

var E_AggOp = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*PbAggOp)(nil),
	Field:         70001,
	Name:          "agg_op",
	Tag:           "varint,70001,opt,name=agg_op,enum=PbAggOp",
}

var E_TableColumn = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70002,
	Name:          "table_column",
	Tag:           "varint,70002,opt,name=table_column",
}

var E_DisruptiveUpdate = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70003,
	Name:          "disruptive_update",
	Tag:           "varint,70003,opt,name=disruptive_update",
}

var E_MetricsHypervisor = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsProviderHypervisor)(nil),
	Field:         70004,
	Name:          "metrics_hypervisor",
	Tag:           "bytes,70004,opt,name=metrics_hypervisor",
}

var E_SecIdx = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70005,
	Name:          "sec_idx",
	Tag:           "bytes,70005,opt,name=sec_idx",
}

var E_Aggregate = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*AggregateType)(nil),
	Field:         70006,
	Name:          "aggregate",
	Tag:           "varint,70006,opt,name=aggregate,enum=AggregateType",
}

var E_MetricsDerivation = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsDerivationData)(nil),
	Field:         70007,
	Name:          "metrics_derivation",
	Tag:           "bytes,70007,opt,name=metrics_derivation",
}

var E_MetricUnits = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricUnits)(nil),
	Field:         70008,
	Name:          "metric_units",
	Tag:           "varint,70008,opt,name=metric_units,enum=MetricUnits",
}

var E_MetricsRespLatencyBkt = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricRespLatencyTimeInterval)(nil),
	Field:         70009,
	Name:          "metrics_resp_latency_bkt",
	Tag:           "bytes,70009,opt,name=metrics_resp_latency_bkt",
}

var E_MetricsMinScale = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*float64)(nil),
	Field:         70010,
	Name:          "metrics_min_scale",
	Tag:           "fixed64,70010,opt,name=metrics_min_scale",
}

var E_MetricsMsgHandler = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsAgentMsgHandler)(nil),
	Field:         70011,
	Name:          "metrics_msg_handler",
	Tag:           "varint,70011,opt,name=metrics_msg_handler,enum=MetricsAgentMsgHandler",
}

var E_MaggFunction = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsAggregationFunction)(nil),
	Field:         70012,
	Name:          "magg_function",
	Tag:           "varint,70012,opt,name=magg_function,enum=MetricsAggregationFunction",
}

var E_MetricsIdOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricIdOptions)(nil),
	Field:         70013,
	Name:          "metrics_id_options",
	Tag:           "bytes,70013,opt,name=metrics_id_options",
}

var E_MetricsRuleOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsRuleOptions)(nil),
	Field:         70014,
	Name:          "metrics_rule_options",
	Tag:           "bytes,70014,opt,name=metrics_rule_options",
}

var E_FAciSkip = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70015,
	Name:          "f_aci_skip",
	Tag:           "varint,70015,opt,name=f_aci_skip",
}

var E_MetricMaxCheckSkip = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70016,
	Name:          "metric_max_check_skip",
	Tag:           "varint,70016,opt,name=metric_max_check_skip",
}

var E_MAnomalyzerPriority = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricAnomalyzerPriority)(nil),
	Field:         70017,
	Name:          "m_anomalyzer_priority",
	Tag:           "varint,70017,opt,name=m_anomalyzer_priority,enum=MetricAnomalyzerPriority",
}

var E_FStdin = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70018,
	Name:          "f_stdin",
	Tag:           "varint,70018,opt,name=f_stdin",
}

var E_MetricsSumAggInvalid = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70019,
	Name:          "metrics_sum_agg_invalid",
	Tag:           "varint,70019,opt,name=metrics_sum_agg_invalid",
}

var E_MetricsSkipInactivityAgg = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70020,
	Name:          "metrics_skip_inactivity_agg",
	Tag:           "varint,70020,opt,name=metrics_skip_inactivity_agg",
}

var E_FCliCompletion = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70021,
	Name:          "f_cli_completion",
	Tag:           "bytes,70021,opt,name=f_cli_completion",
}

var E_MetricsAnomalyzerOpts = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*MetricsAnomalyzerOptions)(nil),
	Field:         70022,
	Name:          "metrics_anomalyzer_opts",
	Tag:           "bytes,70022,opt,name=metrics_anomalyzer_opts",
}

var E_DiffSkip = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70023,
	Name:          "diff_skip",
	Tag:           "varint,70023,opt,name=diff_skip",
}

var E_SeMetricType = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*SeMetricType)(nil),
	Field:         70024,
	Name:          "se_metric_type",
	Tag:           "varint,70024,opt,name=se_metric_type,enum=SeMetricType",
}

var E_Sortable = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         80001,
	Name:          "sortable",
	Tag:           "bytes,80001,opt,name=sortable",
}

var E_Groupable = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         80002,
	Name:          "groupable",
	Tag:           "bytes,80002,opt,name=groupable",
}

var E_Text = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70001,
	Name:          "text",
	Tag:           "bytes,70001,opt,name=text",
}

var E_EDescription = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70002,
	Name:          "e_description",
	Tag:           "bytes,70002,opt,name=e_description",
}

var E_EventDesc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70003,
	Name:          "event_desc",
	Tag:           "bytes,70003,opt,name=event_desc",
}

var E_ErrorType = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*VinfraErrCategory)(nil),
	Field:         70004,
	Name:          "error_type",
	Tag:           "varint,70004,opt,name=error_type,enum=VinfraErrCategory",
}

var E_EFormatStr = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70005,
	Name:          "e_format_str",
	Tag:           "bytes,70005,opt,name=e_format_str",
}

var E_EFormatFunc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70006,
	Name:          "e_format_func",
	Tag:           "bytes,70006,opt,name=e_format_func",
}

var E_OsSecgrpProtocol = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70007,
	Name:          "os_secgrp_protocol",
	Tag:           "bytes,70007,opt,name=os_secgrp_protocol",
}

var E_EventDetails = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70008,
	Name:          "event_details",
	Tag:           "bytes,70008,opt,name=event_details",
}

var E_EventObject = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70009,
	Name:          "event_object",
	Tag:           "bytes,70009,opt,name=event_object",
}

var E_SysevAlertOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*AlertOptions)(nil),
	Field:         70010,
	Name:          "sysev_alert_options",
	Tag:           "bytes,70010,opt,name=sysev_alert_options",
}

var E_EventInternal = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70011,
	Name:          "event_internal",
	Tag:           "varint,70011,opt,name=event_internal",
}

var E_HttpRef = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70012,
	Name:          "http_ref",
	Tag:           "bytes,70012,opt,name=http_ref",
}

var E_EventPagePool = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70013,
	Name:          "event_page_pool",
	Tag:           "varint,70013,opt,name=event_page_pool",
}

var E_EventPageVs = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70014,
	Name:          "event_page_vs",
	Tag:           "varint,70014,opt,name=event_page_vs",
}

var E_EventPageSe = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70015,
	Name:          "event_page_se",
	Tag:           "varint,70015,opt,name=event_page_se",
}

var E_EventPageCntlr = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70016,
	Name:          "event_page_cntlr",
	Tag:           "varint,70016,opt,name=event_page_cntlr",
}

var E_EventPageAdminAccount = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70017,
	Name:          "event_page_admin_account",
	Tag:           "varint,70017,opt,name=event_page_admin_account",
}

var E_EventPageAuditTrail = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70018,
	Name:          "event_page_audit_trail",
	Tag:           "varint,70018,opt,name=event_page_audit_trail",
}

var E_EventPageAll = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70019,
	Name:          "event_page_all",
	Tag:           "varint,70019,opt,name=event_page_all",
}

var E_GenericEvent = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70020,
	Name:          "generic_event",
	Tag:           "varint,70020,opt,name=generic_event",
}

var E_IgnoreEventDetails = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70021,
	Name:          "ignore_event_details",
	Tag:           "varint,70021,opt,name=ignore_event_details",
}

var E_MetricsIndexesOption = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*MetricsIndexesOption)(nil),
	Field:         70022,
	Name:          "metrics_indexes_option",
	Tag:           "bytes,70022,opt,name=metrics_indexes_option",
}

var E_ERecommendation = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70023,
	Name:          "e_recommendation",
	Tag:           "bytes,70023,opt,name=e_recommendation",
}

var E_EventDescFunc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70024,
	Name:          "event_desc_func",
	Tag:           "bytes,70024,opt,name=event_desc_func",
}

var E_SslPerformance = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70025,
	Name:          "ssl_performance",
	Tag:           "bytes,70025,opt,name=ssl_performance",
}

var E_SslCompatibility = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70026,
	Name:          "ssl_compatibility",
	Tag:           "bytes,70026,opt,name=ssl_compatibility",
}

var E_SslSecurity = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70027,
	Name:          "ssl_security",
	Tag:           "bytes,70027,opt,name=ssl_security",
}

var E_SslSecurityScore = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*float64)(nil),
	Field:         70031,
	Name:          "ssl_security_score",
	Tag:           "fixed64,70031,opt,name=ssl_security_score",
}

var E_IsSecurityEvent = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70028,
	Name:          "is_security_event",
	Tag:           "varint,70028,opt,name=is_security_event",
}

var E_CategoryTitle = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70029,
	Name:          "category_title",
	Tag:           "bytes,70029,opt,name=category_title",
}

var E_DosEventIdName = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70030,
	Name:          "dos_event_id_name",
	Tag:           "bytes,70030,opt,name=dos_event_id_name",
}

var E_SslTls_1_0 = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70032,
	Name:          "ssl_tls_1_0",
	Tag:           "varint,70032,opt,name=ssl_tls_1_0",
}

var E_SslTls_1_1 = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70033,
	Name:          "ssl_tls_1_1",
	Tag:           "varint,70033,opt,name=ssl_tls_1_1",
}

var E_SslTls_1_2 = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.EnumValueOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70034,
	Name:          "ssl_tls_1_2",
	Tag:           "varint,70034,opt,name=ssl_tls_1_2",
}

var E_MTypedef = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60001,
	Name:          "m_typedef",
	Tag:           "bytes,60001,opt,name=m_typedef",
}

var E_MUnion = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60002,
	Name:          "m_union",
	Tag:           "varint,60002,opt,name=m_union",
}

var E_Key = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60003,
	Name:          "key",
	Tag:           "bytes,60003,opt,name=key",
}

var E_Unique = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60004,
	Name:          "unique",
	Tag:           "bytes,60004,opt,name=unique",
}

var E_Submode = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60005,
	Name:          "submode",
	Tag:           "varint,60005,opt,name=submode,def=1",
}

var E_MMust = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60006,
	Name:          "m_must",
	Tag:           "bytes,60006,opt,name=m_must",
}

var E_MTransform = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60007,
	Name:          "m_transform",
	Tag:           "bytes,60007,opt,name=m_transform",
}

var E_MDefault = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60008,
	Name:          "m_default",
	Tag:           "bytes,60008,opt,name=m_default",
}

var E_MBlobNestedMessages = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         60009,
	Name:          "m_blob_nested_messages",
	Tag:           "varint,60009,opt,name=m_blob_nested_messages",
}

var E_MResolve = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         60010,
	Name:          "m_resolve",
	Tag:           "bytes,60010,opt,name=m_resolve",
}

var E_MessageRoot = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70001,
	Name:          "message_root",
	Tag:           "varint,70001,opt,name=message_root",
}

var E_DbNotification = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70002,
	Name:          "db_notification",
	Tag:           "varint,70002,opt,name=db_notification",
}

var E_MetricsOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*MetricsOptions)(nil),
	Field:         70003,
	Name:          "metrics_options",
	Tag:           "bytes,70003,opt,name=metrics_options",
}

var E_MetricsRolledUp = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70004,
	Name:          "metrics_rolled_up",
	Tag:           "varint,70004,opt,name=metrics_rolled_up",
}

var E_MFormatStr = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70005,
	Name:          "m_format_str",
	Tag:           "bytes,70005,opt,name=m_format_str",
}

var E_MFormatFunc = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         70006,
	Name:          "m_format_func",
	Tag:           "bytes,70006,opt,name=m_format_func",
}

var E_MAciSkip = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70007,
	Name:          "m_aci_skip",
	Tag:           "varint,70007,opt,name=m_aci_skip",
}

var E_MAciSchemaTag = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*AciSchemaTag)(nil),
	Field:         70008,
	Name:          "m_aci_schema_tag",
	Tag:           "varint,70008,opt,name=m_aci_schema_tag,enum=AciSchemaTag",
}

var E_MetricsEntity = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*MetricsEntityType)(nil),
	Field:         70009,
	Name:          "metrics_entity",
	Tag:           "varint,70009,opt,name=metrics_entity,enum=MetricsEntityType",
}

var E_EvDetailsOptions = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*EventDetailsOptions)(nil),
	Field:         70010,
	Name:          "ev_details_options",
	Tag:           "varint,70010,opt,name=ev_details_options,enum=EventDetailsOptions",
}

var E_DbNotificationSpecial = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70011,
	Name:          "db_notification_special",
	Tag:           "varint,70011,opt,name=db_notification_special",
}

var E_DbNotificationSelectOnly = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70012,
	Name:          "db_notification_select_only",
	Tag:           "varint,70012,opt,name=db_notification_select_only",
}

var E_BaseObjDbNotification = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         70013,
	Name:          "base_obj_db_notification",
	Tag:           "varint,70013,opt,name=base_obj_db_notification",
}

func init() {
	proto.RegisterType((*MetricsProviderHypervisor)(nil), "MetricsProviderHypervisor")
	proto.RegisterType((*MetricRespLatencyTimeInterval)(nil), "MetricRespLatencyTimeInterval")
	proto.RegisterType((*MetricsOptions)(nil), "MetricsOptions")
	proto.RegisterType((*MetricsIndexesOption)(nil), "MetricsIndexesOption")
	proto.RegisterType((*MetricsAnomalyzerOptions)(nil), "MetricsAnomalyzerOptions")
	proto.RegisterType((*MetricsAnomalyModelOptions)(nil), "MetricsAnomalyModelOptions")
	proto.RegisterType((*MetricsRuleOptions)(nil), "MetricsRuleOptions")
	proto.RegisterType((*MetricIdOptions)(nil), "MetricIdOptions")
	proto.RegisterType((*AlertOptions)(nil), "AlertOptions")
	proto.RegisterType((*MetricsDerivationData)(nil), "MetricsDerivationData")
	proto.RegisterType((*IpAddr)(nil), "IpAddr")
	proto.RegisterType((*IpAddrPrefix)(nil), "IpAddrPrefix")
	proto.RegisterEnum("MetricPeriod", MetricPeriod_name, MetricPeriod_value)
	proto.RegisterEnum("MetricType", MetricType_name, MetricType_value)
	proto.RegisterEnum("SeMetricType", SeMetricType_name, SeMetricType_value)
	proto.RegisterEnum("MetricsDerivationFn", MetricsDerivationFn_name, MetricsDerivationFn_value)
	proto.RegisterEnum("MetricUnits", MetricUnits_name, MetricUnits_value)
	proto.RegisterEnum("MetricsRuleType", MetricsRuleType_name, MetricsRuleType_value)
	proto.RegisterEnum("PbAggOp", PbAggOp_name, PbAggOp_value)
	proto.RegisterEnum("VinfraErrCategory", VinfraErrCategory_name, VinfraErrCategory_value)
	proto.RegisterEnum("MetricRespLatencyTime", MetricRespLatencyTime_name, MetricRespLatencyTime_value)
	proto.RegisterEnum("MetricsAggregationEnum", MetricsAggregationEnum_name, MetricsAggregationEnum_value)
	proto.RegisterEnum("MetricsObjType", MetricsObjType_name, MetricsObjType_value)
	proto.RegisterEnum("AggregateType", AggregateType_name, AggregateType_value)
	proto.RegisterEnum("MetricsIndexes", MetricsIndexes_name, MetricsIndexes_value)
	proto.RegisterEnum("MetricsDimension", MetricsDimension_name, MetricsDimension_value)
	proto.RegisterEnum("MetricsDbTableArchivePolicy", MetricsDbTableArchivePolicy_name, MetricsDbTableArchivePolicy_value)
	proto.RegisterEnum("MetricsTableId", MetricsTableId_name, MetricsTableId_value)
	proto.RegisterEnum("AnomalyModels", AnomalyModels_name, AnomalyModels_value)
	proto.RegisterEnum("AnomalyInterpretation", AnomalyInterpretation_name, AnomalyInterpretation_value)
	proto.RegisterEnum("MetricsAgentMsgHandler", MetricsAgentMsgHandler_name, MetricsAgentMsgHandler_value)
	proto.RegisterEnum("MetricsAggregationFunction", MetricsAggregationFunction_name, MetricsAggregationFunction_value)
	proto.RegisterEnum("AciSchemaTag", AciSchemaTag_name, AciSchemaTag_value)
	proto.RegisterEnum("MetricsEntityType", MetricsEntityType_name, MetricsEntityType_value)
	proto.RegisterEnum("MetricAnomalyzerPriority", MetricAnomalyzerPriority_name, MetricAnomalyzerPriority_value)
	proto.RegisterEnum("EventDetailsOptions", EventDetailsOptions_name, EventDetailsOptions_value)
	proto.RegisterEnum("AlertLevel", AlertLevel_name, AlertLevel_value)
	proto.RegisterEnum("AlertActionGroupDefaults", AlertActionGroupDefaults_name, AlertActionGroupDefaults_value)
	proto.RegisterEnum("AlertConfigScope", AlertConfigScope_name, AlertConfigScope_value)
	proto.RegisterEnum("IpAddrType", IpAddrType_name, IpAddrType_value)
	proto.RegisterExtension(E_ServiceTransactional)
	proto.RegisterExtension(E_ServiceQName)
	proto.RegisterExtension(E_ServiceRpcTimeout)
	proto.RegisterExtension(E_MethodTransactional)
	proto.RegisterExtension(E_MethodQName)
	proto.RegisterExtension(E_MethodRpcTimeout)
	proto.RegisterExtension(E_MethodExpirable)
	proto.RegisterExtension(E_RefersTo)
	proto.RegisterExtension(E_WeakRefersTo)
	proto.RegisterExtension(E_BelongsTo)
	proto.RegisterExtension(E_FDescription)
	proto.RegisterExtension(E_Units)
	proto.RegisterExtension(E_Range)
	proto.RegisterExtension(E_Pattern)
	proto.RegisterExtension(E_MinElements)
	proto.RegisterExtension(E_MaxElements)
	proto.RegisterExtension(E_UnionEnum)
	proto.RegisterExtension(E_SpecialValues)
	proto.RegisterExtension(E_MetricType)
	proto.RegisterExtension(E_StringLength)
	proto.RegisterExtension(E_FMust)
	proto.RegisterExtension(E_OrderedBy)
	proto.RegisterExtension(E_HyperlinkTo)
	proto.RegisterExtension(E_SpecialDefault)
	proto.RegisterExtension(E_FTypedef)
	proto.RegisterExtension(E_FReadonly)
	proto.RegisterExtension(E_FBlobMessage)
	proto.RegisterExtension(E_DispHyperlinkTo)
	proto.RegisterExtension(E_FSensitive)
	proto.RegisterExtension(E_FHidden)
	proto.RegisterExtension(E_FSkipInputCheck)
	proto.RegisterExtension(E_FJsonDefault)
	proto.RegisterExtension(E_AggOp)
	proto.RegisterExtension(E_TableColumn)
	proto.RegisterExtension(E_DisruptiveUpdate)
	proto.RegisterExtension(E_MetricsHypervisor)
	proto.RegisterExtension(E_SecIdx)
	proto.RegisterExtension(E_Aggregate)
	proto.RegisterExtension(E_MetricsDerivation)
	proto.RegisterExtension(E_MetricUnits)
	proto.RegisterExtension(E_MetricsRespLatencyBkt)
	proto.RegisterExtension(E_MetricsMinScale)
	proto.RegisterExtension(E_MetricsMsgHandler)
	proto.RegisterExtension(E_MaggFunction)
	proto.RegisterExtension(E_MetricsIdOptions)
	proto.RegisterExtension(E_MetricsRuleOptions)
	proto.RegisterExtension(E_FAciSkip)
	proto.RegisterExtension(E_MetricMaxCheckSkip)
	proto.RegisterExtension(E_MAnomalyzerPriority)
	proto.RegisterExtension(E_FStdin)
	proto.RegisterExtension(E_MetricsSumAggInvalid)
	proto.RegisterExtension(E_MetricsSkipInactivityAgg)
	proto.RegisterExtension(E_FCliCompletion)
	proto.RegisterExtension(E_MetricsAnomalyzerOpts)
	proto.RegisterExtension(E_DiffSkip)
	proto.RegisterExtension(E_SeMetricType)
	proto.RegisterExtension(E_Sortable)
	proto.RegisterExtension(E_Groupable)
	proto.RegisterExtension(E_Text)
	proto.RegisterExtension(E_EDescription)
	proto.RegisterExtension(E_EventDesc)
	proto.RegisterExtension(E_ErrorType)
	proto.RegisterExtension(E_EFormatStr)
	proto.RegisterExtension(E_EFormatFunc)
	proto.RegisterExtension(E_OsSecgrpProtocol)
	proto.RegisterExtension(E_EventDetails)
	proto.RegisterExtension(E_EventObject)
	proto.RegisterExtension(E_SysevAlertOptions)
	proto.RegisterExtension(E_EventInternal)
	proto.RegisterExtension(E_HttpRef)
	proto.RegisterExtension(E_EventPagePool)
	proto.RegisterExtension(E_EventPageVs)
	proto.RegisterExtension(E_EventPageSe)
	proto.RegisterExtension(E_EventPageCntlr)
	proto.RegisterExtension(E_EventPageAdminAccount)
	proto.RegisterExtension(E_EventPageAuditTrail)
	proto.RegisterExtension(E_EventPageAll)
	proto.RegisterExtension(E_GenericEvent)
	proto.RegisterExtension(E_IgnoreEventDetails)
	proto.RegisterExtension(E_MetricsIndexesOption)
	proto.RegisterExtension(E_ERecommendation)
	proto.RegisterExtension(E_EventDescFunc)
	proto.RegisterExtension(E_SslPerformance)
	proto.RegisterExtension(E_SslCompatibility)
	proto.RegisterExtension(E_SslSecurity)
	proto.RegisterExtension(E_SslSecurityScore)
	proto.RegisterExtension(E_IsSecurityEvent)
	proto.RegisterExtension(E_CategoryTitle)
	proto.RegisterExtension(E_DosEventIdName)
	proto.RegisterExtension(E_SslTls_1_0)
	proto.RegisterExtension(E_SslTls_1_1)
	proto.RegisterExtension(E_SslTls_1_2)
	proto.RegisterExtension(E_MTypedef)
	proto.RegisterExtension(E_MUnion)
	proto.RegisterExtension(E_Key)
	proto.RegisterExtension(E_Unique)
	proto.RegisterExtension(E_Submode)
	proto.RegisterExtension(E_MMust)
	proto.RegisterExtension(E_MTransform)
	proto.RegisterExtension(E_MDefault)
	proto.RegisterExtension(E_MBlobNestedMessages)
	proto.RegisterExtension(E_MResolve)
	proto.RegisterExtension(E_MessageRoot)
	proto.RegisterExtension(E_DbNotification)
	proto.RegisterExtension(E_MetricsOptions)
	proto.RegisterExtension(E_MetricsRolledUp)
	proto.RegisterExtension(E_MFormatStr)
	proto.RegisterExtension(E_MFormatFunc)
	proto.RegisterExtension(E_MAciSkip)
	proto.RegisterExtension(E_MAciSchemaTag)
	proto.RegisterExtension(E_MetricsEntity)
	proto.RegisterExtension(E_EvDetailsOptions)
	proto.RegisterExtension(E_DbNotificationSpecial)
	proto.RegisterExtension(E_DbNotificationSelectOnly)
	proto.RegisterExtension(E_BaseObjDbNotification)
}

var fileDescriptor74 = []byte{
	// 6488 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x5c, 0x69, 0x70, 0x23, 0xd7,
	0x71, 0x36, 0x78, 0xf3, 0xf1, 0x1a, 0xce, 0xee, 0x72, 0xb9, 0xdc, 0x0b, 0x4b, 0x59, 0xf6, 0x8a,
	0xb6, 0x21, 0x92, 0xda, 0xd5, 0x01, 0xcb, 0x92, 0x71, 0x0c, 0x49, 0x78, 0x71, 0x05, 0x00, 0x49,
	0x51, 0x4e, 0xd5, 0xd4, 0x10, 0x18, 0x80, 0x23, 0x02, 0x33, 0xf0, 0xcc, 0x80, 0x5c, 0x2a, 0x89,
	0x23, 0xf9, 0x90, 0x1d, 0xd9, 0x49, 0x9c, 0xfc, 0x49, 0xe2, 0x2a, 0xa7, 0x1c, 0x6d, 0x59, 0x95,
	0x1f, 0xce, 0x9f, 0xfc, 0x48, 0xaa, 0x52, 0xe5, 0x2a, 0xff, 0x49, 0xe5, 0x5f, 0x2a, 0x87, 0x7e,
	0xe4, 0x6f, 0x7c, 0x3b, 0xb7, 0x2d, 0xf9, 0x96, 0x9d, 0x74, 0xbf, 0x63, 0x30, 0xb8, 0x38, 0x50,
	0x6a, 0xab, 0xb8, 0x9c, 0xf7, 0xfa, 0xeb, 0xd7, 0xdd, 0xaf, 0x5f, 0xbf, 0xee, 0x37, 0x6f, 0x48,
	0xe6, 0xac, 0xa6, 0x6b, 0x58, 0xa6, 0x13, 0x69, 0xda, 0x96, 0x6b, 0xad, 0x84, 0x6b, 0x96, 0x55,
	0xab, 0xeb, 0x8f, 0xd2, 0xa7, 0xc3, 0x56, 0xf5, 0xd1, 0x8a, 0xee, 0x94, 0x6d, 0xa3, 0xe9, 0x5a,
	0x36, 0xa3, 0x58, 0x7d, 0x92, 0x5c, 0xc9, 0xe8, 0xae, 0x6d, 0x94, 0x9d, 0xbc, 0x6d, 0x9d, 0x18,
	0x15, 0xdd, 0xde, 0x39, 0x6b, 0xea, 0xf6, 0x89, 0xe1, 0x58, 0xb6, 0x3c, 0x4f, 0x26, 0x4e, 0x1a,
	0xa7, 0x9a, 0xad, 0x2f, 0x87, 0xc2, 0xa1, 0xdb, 0xd3, 0xf2, 0x0c, 0x19, 0x3d, 0x3e, 0x69, 0x2c,
	0x8f, 0xe0, 0xc3, 0xea, 0x31, 0xb9, 0xce, 0x90, 0x05, 0xdd, 0x69, 0xa6, 0x35, 0x57, 0x37, 0xcb,
	0x67, 0x25, 0xa3, 0xa1, 0xa7, 0x4c, 0x17, 0xf0, 0x5a, 0x5d, 0x7e, 0x98, 0x8c, 0x3b, 0xae, 0x66,
	0xbb, 0x00, 0x1e, 0xb9, 0x3d, 0xbf, 0xb9, 0x14, 0xe9, 0x4b, 0x2e, 0x3f, 0x44, 0x46, 0x75, 0xb3,
	0x02, 0x4c, 0xcf, 0x21, 0x5a, 0xfd, 0xdb, 0x11, 0x32, 0xcf, 0xe5, 0xcc, 0x31, 0x0d, 0xe5, 0x47,
	0x88, 0xd4, 0x60, 0x2d, 0xaa, 0x75, 0xf8, 0x82, 0xea, 0x82, 0xd8, 0x54, 0xcc, 0xf9, 0xcd, 0x85,
	0x88, 0x20, 0x3d, 0x7c, 0xa1, 0x04, 0xcd, 0xf2, 0x1d, 0x72, 0x41, 0x90, 0x6a, 0xb5, 0x9a, 0xad,
	0xd7, 0x34, 0x64, 0x01, 0x43, 0x8e, 0x02, 0xf5, 0x65, 0x41, 0x1d, 0x6b, 0x77, 0x29, 0x66, 0xab,
	0x21, 0xdf, 0x22, 0x57, 0x04, 0xea, 0x45, 0xd5, 0x29, 0x5b, 0xb6, 0xae, 0xba, 0x47, 0xb6, 0xee,
	0x1c, 0x59, 0xf5, 0xca, 0xf2, 0x28, 0x8c, 0x14, 0x92, 0xc3, 0x64, 0xd2, 0x30, 0x2b, 0xfa, 0x7d,
	0xdd, 0x59, 0x1e, 0xa3, 0xcc, 0xbc, 0xa1, 0x53, 0xac, 0x59, 0x2e, 0x90, 0x79, 0xcd, 0x2e, 0x1f,
	0x19, 0x27, 0xba, 0xda, 0xb4, 0xea, 0x46, 0xf9, 0x6c, 0x79, 0x9c, 0xca, 0x78, 0x4d, 0x10, 0x26,
	0x0f, 0x4b, 0xda, 0x61, 0x5d, 0x8f, 0x31, 0xa2, 0x3c, 0xa5, 0x89, 0x5e, 0xcb, 0x28, 0xa5, 0x42,
	0x2a, 0x51, 0x54, 0x93, 0x71, 0xb5, 0x14, 0x8b, 0xa7, 0x15, 0x35, 0x56, 0x48, 0xec, 0xa4, 0xf6,
	0xe0, 0xff, 0x74, 0x1a, 0x04, 0x9b, 0x72, 0x11, 0xa3, 0x1a, 0x95, 0xe5, 0x89, 0x4e, 0x8d, 0x29,
	0xaf, 0x54, 0x45, 0x5e, 0x22, 0xf3, 0x3e, 0xe3, 0xe8, 0x65, 0x77, 0x79, 0x12, 0x08, 0xa7, 0x56,
	0xff, 0x24, 0x44, 0x2e, 0x76, 0x4a, 0xc8, 0xcc, 0x29, 0x5f, 0x20, 0x33, 0x4d, 0xdb, 0x68, 0x68,
	0xf6, 0x99, 0x7a, 0xac, 0x9f, 0x51, 0x43, 0x4e, 0xc9, 0x73, 0x64, 0xbc, 0x42, 0xed, 0x8a, 0x33,
	0x3e, 0x2e, 0x2f, 0x90, 0x49, 0xd7, 0xa2, 0xfa, 0x52, 0xf5, 0xa7, 0x64, 0x89, 0x4c, 0x99, 0xad,
	0x7a, 0x1d, 0xc7, 0x04, 0xfd, 0xb1, 0x45, 0x26, 0xa4, 0x65, 0x1a, 0x1f, 0x6b, 0xe9, 0x94, 0xcb,
	0x38, 0x6d, 0x03, 0xd6, 0x55, 0x30, 0x9e, 0x51, 0x33, 0x69, 0xe3, 0x04, 0x75, 0xa5, 0x45, 0x32,
	0xad, 0x83, 0x91, 0x55, 0x53, 0x6b, 0xe8, 0x54, 0xb6, 0xe9, 0xd5, 0xef, 0x8f, 0x90, 0x65, 0x31,
	0x15, 0xa6, 0xd5, 0xd0, 0xea, 0x67, 0x2f, 0xea, 0xb6, 0x98, 0xed, 0x27, 0x88, 0xac, 0xb1, 0x46,
	0xb5, 0x61, 0x55, 0xf4, 0xba, 0x0a, 0x8e, 0xee, 0x80, 0x98, 0xa3, 0xb7, 0x67, 0x36, 0xaf, 0x46,
	0x3a, 0x61, 0x19, 0x24, 0x10, 0xc0, 0xbf, 0x0b, 0x11, 0xc9, 0x39, 0x36, 0x9a, 0xaa, 0x0e, 0x3e,
	0xa9, 0x82, 0x6b, 0x1b, 0x56, 0x85, 0xea, 0x33, 0x15, 0x1d, 0xaf, 0x6a, 0x75, 0x47, 0x8f, 0x7f,
	0x25, 0xf4, 0xda, 0xeb, 0xd7, 0xbf, 0x1c, 0x2a, 0x02, 0x51, 0xd8, 0x3d, 0xd2, 0xc3, 0xae, 0xad,
	0x19, 0xa6, 0x61, 0xd6, 0xc2, 0x8c, 0x38, 0x0c, 0xc2, 0x87, 0xf9, 0xd8, 0x91, 0x70, 0xf1, 0xc8,
	0x6a, 0xd5, 0x2b, 0x61, 0xcb, 0xac, 0x9f, 0x85, 0x0f, 0xf5, 0x70, 0xcb, 0xd1, 0x19, 0x81, 0xd3,
	0xd4, 0xcb, 0x86, 0x56, 0x0f, 0xeb, 0xb6, 0x0d, 0x4f, 0x65, 0xcd, 0xd1, 0x9d, 0xf0, 0xe9, 0x91,
	0x6e, 0xeb, 0xe1, 0x53, 0x3d, 0x5c, 0xb1, 0xcc, 0xf7, 0xba, 0xe1, 0x53, 0xcd, 0x74, 0x5d, 0x0b,
	0xfe, 0x33, 0x5c, 0x0a, 0xd1, 0xef, 0x37, 0x2d, 0x53, 0x37, 0x5d, 0x84, 0x35, 0x60, 0xed, 0xc1,
	0x88, 0xda, 0x89, 0x6e, 0x6b, 0x35, 0x10, 0xc1, 0x0a, 0xd7, 0x75, 0xcd, 0x36, 0xa9, 0x3c, 0x4d,
	0xcd, 0x85, 0x15, 0x65, 0xca, 0x1f, 0x21, 0x4b, 0xc2, 0x04, 0x06, 0xae, 0xb1, 0xa6, 0xad, 0xbb,
	0xcc, 0x91, 0xc7, 0xa8, 0x13, 0x2c, 0x45, 0xb8, 0xfe, 0xa9, 0x8e, 0xde, 0xa8, 0x9c, 0xc8, 0x65,
	0xe2, 0xa9, 0xac, 0xa2, 0x66, 0x72, 0x49, 0x25, 0x5d, 0x44, 0x17, 0x5a, 0xfd, 0xfb, 0x09, 0xb2,
	0x72, 0x8e, 0xd1, 0x7e, 0x1c, 0x22, 0x73, 0x1d, 0xe6, 0xe6, 0x2b, 0x6b, 0x3e, 0xe2, 0xa7, 0x76,
	0xa2, 0x37, 0x95, 0xe7, 0xf2, 0xb9, 0xac, 0x92, 0x2d, 0xa5, 0x62, 0x69, 0x75, 0x5f, 0x49, 0x6d,
	0xef, 0x94, 0x94, 0x24, 0x8c, 0xb3, 0x97, 0xca, 0x6e, 0xab, 0xb1, 0xbd, 0xed, 0xf8, 0x5f, 0xa0,
	0x6d, 0xff, 0x3c, 0x54, 0x02, 0x35, 0x28, 0x1f, 0xd4, 0x0c, 0x6c, 0x16, 0x09, 0x6f, 0x81, 0x01,
	0x76, 0xac, 0xba, 0x1b, 0xde, 0xa7, 0xba, 0x38, 0x61, 0x70, 0xd7, 0x23, 0xab, 0xe2, 0xbc, 0x1f,
	0x55, 0xd6, 0xea, 0xcd, 0x23, 0xed, 0xfd, 0x60, 0x5f, 0x17, 0x7e, 0xd6, 0xb4, 0x46, 0x03, 0xfe,
	0x83, 0x28, 0x14, 0x76, 0x74, 0xb0, 0xa2, 0xe1, 0x1e, 0x85, 0x0d, 0xb3, 0xd9, 0x72, 0x9d, 0x70,
	0xd5, 0xb6, 0x1a, 0xdc, 0x44, 0x30, 0x57, 0xd1, 0x70, 0xec, 0x10, 0xcc, 0x0f, 0x56, 0x0e, 0xc7,
	0xf5, 0x23, 0xed, 0xc4, 0x80, 0x21, 0x92, 0xba, 0x0b, 0xce, 0x0f, 0x3a, 0x01, 0x24, 0x8c, 0x91,
	0x24, 0x5c, 0x84, 0x49, 0x85, 0xb9, 0xc1, 0x09, 0xc8, 0xea, 0xee, 0xa9, 0x65, 0x1f, 0x87, 0x33,
	0x96, 0x69, 0x40, 0x44, 0x84, 0x09, 0x90, 0x5f, 0x24, 0x13, 0x3e, 0x17, 0x99, 0xdf, 0x9c, 0xe3,
	0xae, 0x95, 0xa7, 0x8d, 0xf1, 0x8f, 0x82, 0x36, 0xfb, 0x45, 0x9c, 0xea, 0xea, 0x19, 0x1b, 0xb8,
	0xed, 0x22, 0xa7, 0x47, 0x46, 0xf9, 0x88, 0x36, 0x3a, 0xba, 0xe6, 0x58, 0xa6, 0x56, 0x37, 0xdc,
	0xb3, 0xb0, 0xd6, 0x6c, 0xd6, 0x61, 0xbc, 0x48, 0xb8, 0x64, 0x79, 0xfe, 0x42, 0x55, 0x40, 0xe5,
	0x85, 0xee, 0xe8, 0x4d, 0x11, 0xf9, 0xcf, 0x42, 0x64, 0xc6, 0x07, 0xa5, 0x6b, 0x6c, 0x3c, 0xfe,
	0x39, 0xb4, 0xe0, 0x2b, 0xa1, 0xa2, 0x8f, 0x27, 0x8e, 0x86, 0xe3, 0xb0, 0x15, 0x1e, 0x36, 0xaa,
	0x1d, 0xcc, 0x0c, 0x07, 0x8d, 0x0c, 0x63, 0xb1, 0xa1, 0x2b, 0x91, 0xb0, 0x12, 0xa9, 0x45, 0x28,
	0xa8, 0xa2, 0xb9, 0x5a, 0xd8, 0xd6, 0x9b, 0x3a, 0x38, 0x06, 0x7a, 0x9b, 0x69, 0xb6, 0xb4, 0x3a,
	0x38, 0x32, 0x15, 0x08, 0x54, 0x81, 0x39, 0x32, 0xe1, 0x37, 0x47, 0x6b, 0x34, 0xeb, 0x3a, 0x4c,
	0x85, 0x5f, 0x11, 0x60, 0xbb, 0xb1, 0x29, 0xeb, 0x64, 0x9c, 0x4e, 0x0e, 0x5d, 0xda, 0xa1, 0xe8,
	0xd8, 0x7a, 0x64, 0x73, 0x33, 0x9e, 0x07, 0x09, 0xd3, 0x3b, 0xfb, 0xd1, 0x30, 0xed, 0x8a, 0x84,
	0xb7, 0x21, 0x90, 0x39, 0xe1, 0xa7, 0xee, 0x3e, 0x0c, 0xbe, 0x6f, 0xd4, 0x8e, 0x5c, 0x94, 0xe7,
	0xf6, 0xdd, 0x86, 0x61, 0x3e, 0x22, 0x58, 0xe3, 0x6c, 0xa0, 0x06, 0x75, 0xcd, 0x71, 0xc3, 0xb0,
	0xa2, 0xec, 0xf0, 0xed, 0x8d, 0x4d, 0xd1, 0xf9, 0x48, 0x44, 0x3e, 0x22, 0x63, 0x38, 0xf9, 0x34,
	0x56, 0x84, 0xa2, 0x93, 0xeb, 0x91, 0xf5, 0xf5, 0xf5, 0xc7, 0xee, 0xc4, 0x7f, 0x0d, 0x06, 0xca,
	0xe0, 0x40, 0xd8, 0x29, 0xc6, 0xb9, 0xbb, 0x3e, 0xe4, 0x38, 0xa7, 0xba, 0x7e, 0x1c, 0xbe, 0xbd,
	0xb9, 0xbe, 0xf1, 0xb8, 0x6f, 0xa4, 0x55, 0x32, 0x4e, 0x1d, 0x8c, 0xc6, 0x20, 0xa1, 0xd0, 0x1c,
	0x8c, 0x33, 0x8d, 0xe3, 0xd0, 0x2e, 0xa4, 0x01, 0xd7, 0x05, 0x71, 0xa6, 0xfb, 0xd1, 0xd0, 0xae,
	0xd5, 0x6f, 0x8e, 0x10, 0x99, 0x2f, 0xa8, 0x42, 0xab, 0xae, 0x8b, 0x85, 0xf4, 0x10, 0x99, 0xb6,
	0xe1, 0xd1, 0xbf, 0x3b, 0x49, 0x11, 0x1f, 0x1d, 0xdd, 0x9e, 0x20, 0xae, 0xd6, 0xad, 0x53, 0xf5,
	0xb4, 0xe1, 0xd0, 0x2d, 0x29, 0x84, 0x71, 0xf5, 0x08, 0x14, 0xa2, 0x2d, 0xa3, 0xb4, 0xe5, 0x12,
	0x99, 0xd3, 0x4f, 0x20, 0x56, 0x40, 0xc8, 0x67, 0x21, 0x73, 0x8c, 0x46, 0xd1, 0xcf, 0x87, 0xc8,
	0x65, 0x74, 0x1e, 0xd8, 0x5b, 0x1c, 0xc3, 0xc5, 0x4d, 0x86, 0xad, 0x5a, 0xf0, 0x38, 0x6a, 0xbb,
	0xa9, 0xe8, 0x98, 0x6b, 0xb7, 0xf4, 0xb8, 0x0e, 0xc2, 0x42, 0x5c, 0x31, 0x21, 0xba, 0xb8, 0x7a,
	0x98, 0x72, 0x62, 0x5e, 0x47, 0xdd, 0x42, 0x80, 0x41, 0x95, 0x13, 0x43, 0x63, 0xf9, 0x43, 0x78,
	0x17, 0x3d, 0xd5, 0x23, 0x41, 0x23, 0x6e, 0x0b, 0xbc, 0x22, 0xf0, 0x61, 0x1e, 0x0d, 0xc2, 0x2c,
	0xeb, 0x90, 0x55, 0x22, 0x43, 0x90, 0x05, 0x11, 0x99, 0xac, 0x7c, 0x25, 0xcd, 0xf4, 0x5b, 0x49,
	0x77, 0x40, 0xa2, 0xf5, 0x7c, 0xbf, 0xd5, 0xc3, 0xa5, 0xc3, 0xf5, 0xce, 0xfc, 0x58, 0xc8, 0x5d,
	0x89, 0xe0, 0xf6, 0xb5, 0xc0, 0xd8, 0xa4, 0x2a, 0xff, 0x8f, 0x3c, 0xe0, 0x06, 0x59, 0xf2, 0x93,
	0x56, 0x0d, 0xbd, 0xce, 0xcd, 0x49, 0x53, 0x1a, 0x79, 0x85, 0xc8, 0xb0, 0xbf, 0x83, 0x3b, 0x96,
	0xbb, 0xb7, 0xfa, 0x39, 0xf9, 0x26, 0x59, 0x34, 0x1c, 0xf5, 0xc8, 0x51, 0xcb, 0xb0, 0x46, 0x6c,
	0xe3, 0xb0, 0x05, 0x11, 0x83, 0x6d, 0x7a, 0xcc, 0xc6, 0xab, 0x2f, 0x87, 0xc8, 0x6c, 0xac, 0xae,
	0xdb, 0xae, 0x10, 0x6c, 0x85, 0x8c, 0xd7, 0x41, 0x99, 0x3a, 0xcf, 0x7f, 0x66, 0x22, 0xb4, 0x37,
	0x8d, 0x4d, 0xf2, 0x45, 0x32, 0xdd, 0x1e, 0x00, 0x07, 0x9f, 0x8b, 0x86, 0x36, 0xe4, 0x67, 0xc9,
	0x74, 0xb9, 0x5a, 0xc3, 0x5c, 0x03, 0x74, 0x18, 0xa5, 0x3a, 0x2c, 0x32, 0x54, 0xc2, 0x32, 0xab,
	0x46, 0xad, 0x88, 0x1d, 0xd1, 0x2b, 0xb1, 0xb4, 0x52, 0x28, 0xa9, 0x89, 0x5c, 0x76, 0x2b, 0xb5,
	0xad, 0x16, 0x13, 0xb9, 0xbc, 0xa2, 0x96, 0x94, 0x6c, 0x2c, 0x5b, 0x5a, 0xfd, 0xca, 0x08, 0xb9,
	0x24, 0xf2, 0x0a, 0xb0, 0xed, 0x09, 0x9d, 0xcc, 0x24, 0xac, 0x7a, 0xdc, 0x98, 0x99, 0xea, 0xe0,
	0x41, 0x0e, 0x95, 0x68, 0x5a, 0x7e, 0x1f, 0x99, 0xab, 0x78, 0x54, 0x6a, 0xd5, 0xe4, 0x39, 0xd8,
	0xc5, 0x48, 0x0f, 0x8b, 0x2d, 0x13, 0xcc, 0xbc, 0x62, 0x98, 0xe5, 0x7a, 0xab, 0xa2, 0xab, 0x3e,
	0x10, 0x37, 0x27, 0xcb, 0x07, 0xf8, 0x86, 0x0a, 0x89, 0xdf, 0x92, 0x7e, 0xdf, 0x47, 0xaa, 0x57,
	0x38, 0x1d, 0xb7, 0x17, 0x27, 0x7b, 0x1f, 0xb9, 0x06, 0x16, 0x68, 0xd5, 0x5d, 0xf5, 0x48, 0x83,
	0xc4, 0xac, 0x52, 0x31, 0x90, 0x25, 0x6c, 0xd2, 0x74, 0x5e, 0x1c, 0x96, 0x3d, 0x08, 0xe2, 0x77,
	0x93, 0x99, 0x17, 0x20, 0xf7, 0x50, 0x69, 0xe2, 0xe3, 0x0c, 0x4a, 0x7b, 0xde, 0x43, 0x2e, 0xd3,
	0xbd, 0xfe, 0x50, 0x2b, 0x1f, 0x43, 0x52, 0xe9, 0x93, 0x94, 0xe5, 0x3f, 0x9c, 0x1b, 0xe4, 0xae,
	0x13, 0xa9, 0x66, 0xac, 0x52, 0xb1, 0xe5, 0x6b, 0x64, 0x0c, 0x46, 0xb6, 0x99, 0x45, 0xe2, 0xf3,
	0xe0, 0x95, 0x24, 0x95, 0x0f, 0x63, 0x93, 0xee, 0x38, 0xf2, 0x15, 0x32, 0xc6, 0xf3, 0x1f, 0x36,
	0x83, 0x0c, 0x84, 0xbe, 0x14, 0xbd, 0xfd, 0xea, 0xeb, 0xd7, 0xaf, 0xa5, 0xf2, 0x77, 0xc2, 0x31,
	0x46, 0x8b, 0x5e, 0xdc, 0xd0, 0xdc, 0xf0, 0xd3, 0xf7, 0x23, 0xf4, 0xdf, 0x33, 0x5f, 0x7c, 0xfd,
	0x3a, 0x65, 0xbd, 0x7a, 0x40, 0x66, 0x19, 0x2e, 0x6f, 0xeb, 0x55, 0xe3, 0xbe, 0xbc, 0x0c, 0x49,
	0x63, 0x53, 0xf5, 0x46, 0x9d, 0xd9, 0x9c, 0xe4, 0x7c, 0xe5, 0x59, 0x32, 0xd6, 0xd0, 0x9c, 0x63,
	0x3a, 0xdc, 0x78, 0xf4, 0x16, 0x8c, 0x70, 0x1d, 0x47, 0x60, 0xb8, 0xee, 0x01, 0x1e, 0xbd, 0xff,
	0xcc, 0xda, 0x5f, 0x8d, 0x90, 0x59, 0xff, 0xb2, 0x92, 0x2f, 0x93, 0x0b, 0x2c, 0x75, 0x54, 0xf3,
	0x4a, 0x21, 0x95, 0x4b, 0xaa, 0xbb, 0xd9, 0xa4, 0xb2, 0x25, 0xbd, 0x0b, 0x34, 0xb9, 0xd4, 0xd9,
	0xb1, 0x51, 0x54, 0xc0, 0x83, 0x92, 0x52, 0xa8, 0xb7, 0xeb, 0x2e, 0xef, 0x1a, 0xef, 0x83, 0xca,
	0xa4, 0xb2, 0xbb, 0x25, 0x45, 0x7a, 0x1a, 0xbc, 0xbb, 0x1b, 0xc5, 0xbb, 0xbe, 0x3a, 0x02, 0x1a,
	0x76, 0x49, 0xb1, 0xb1, 0x93, 0xdb, 0x2d, 0x48, 0x5f, 0xb8, 0xd6, 0xdb, 0xb3, 0x49, 0x7b, 0xbe,
	0xfc, 0x24, 0xf4, 0xc8, 0x5d, 0x98, 0x64, 0xec, 0x40, 0x7a, 0xe9, 0x01, 0x0a, 0xd1, 0xcd, 0x6d,
	0x5f, 0x51, 0xee, 0x49, 0x2f, 0xfd, 0xe8, 0xdd, 0xf2, 0x55, 0xc8, 0x66, 0xbb, 0xe4, 0xcb, 0x65,
	0x4b, 0x3b, 0xd2, 0x4b, 0x5f, 0xfc, 0xd3, 0x10, 0x48, 0xd8, 0x8d, 0x3b, 0x50, 0x62, 0x05, 0xe9,
	0x6b, 0xaf, 0xbe, 0xb2, 0xb0, 0xf6, 0x2c, 0x21, 0xcc, 0x6e, 0x34, 0x2e, 0xcc, 0x92, 0xa9, 0x58,
	0xbc, 0x98, 0x4b, 0xa3, 0xf8, 0x21, 0x79, 0x9a, 0x8c, 0x6f, 0xc7, 0x76, 0xb7, 0x15, 0x69, 0x04,
	0x0a, 0x9e, 0xc9, 0x44, 0x6e, 0x37, 0x5b, 0x52, 0x0a, 0xd2, 0x28, 0x3e, 0x24, 0x81, 0xd1, 0x9e,
	0x92, 0x94, 0xc6, 0xd6, 0x9e, 0x22, 0xb3, 0x45, 0xdd, 0xc7, 0xe2, 0x12, 0x59, 0x2c, 0x42, 0x86,
	0x55, 0x3a, 0x80, 0xc5, 0xe8, 0xe3, 0x25, 0x93, 0x79, 0xaf, 0x99, 0x33, 0x5d, 0xfb, 0x9b, 0x69,
	0x10, 0xac, 0xcf, 0x0a, 0x5b, 0x24, 0x73, 0x22, 0xed, 0x8f, 0xa5, 0x53, 0xb1, 0x22, 0xcc, 0xda,
	0x0d, 0xb2, 0x52, 0xdc, 0xcd, 0xa8, 0x5b, 0xa9, 0x42, 0xb1, 0xa4, 0x66, 0xd5, 0x64, 0x6a, 0x2f,
	0x95, 0x54, 0xd4, 0xf8, 0x81, 0x9a, 0x8e, 0x15, 0x4b, 0x12, 0x6e, 0x14, 0xb3, 0xd8, 0x1f, 0xdf,
	0x17, 0xcc, 0x11, 0x01, 0x79, 0x97, 0xba, 0xad, 0x94, 0xd4, 0x7c, 0x0e, 0x40, 0xb9, 0xd2, 0x8e,
	0x52, 0x00, 0x72, 0x08, 0x10, 0x89, 0x03, 0x50, 0x02, 0x1c, 0x24, 0x96, 0xcf, 0x27, 0x95, 0xe7,
	0xd4, 0x5c, 0x56, 0x7d, 0x4c, 0x8d, 0xef, 0x26, 0xee, 0x29, 0xa5, 0xa2, 0x34, 0xd6, 0xd9, 0x71,
	0xc7, 0xeb, 0x18, 0x87, 0x22, 0x60, 0x1a, 0xc7, 0x60, 0x03, 0x4c, 0xa0, 0x94, 0xf8, 0x98, 0x55,
	0xb9, 0xac, 0xd2, 0x64, 0x27, 0xf4, 0xae, 0x07, 0x9d, 0xea, 0xec, 0x78, 0xdc, 0xeb, 0x98, 0x46,
	0xbf, 0x6a, 0x77, 0x80, 0xaf, 0x65, 0x95, 0x44, 0x29, 0x95, 0xcb, 0x16, 0x25, 0xd2, 0x89, 0xd9,
	0xf4, 0x30, 0x33, 0x50, 0xd2, 0xc8, 0xa8, 0x59, 0x22, 0x9d, 0x82, 0x7c, 0xd3, 0xd3, 0x68, 0x16,
	0x7c, 0xe0, 0x32, 0xb6, 0x03, 0x28, 0x9d, 0x4a, 0xc4, 0x90, 0x8d, 0xd7, 0x39, 0x47, 0x6d, 0x9a,
	0xca, 0xfa, 0xa4, 0x9d, 0x87, 0x40, 0xf6, 0xf0, 0x60, 0x9b, 0xa2, 0xab, 0x24, 0x80, 0x7f, 0x0c,
	0x74, 0x5d, 0x80, 0x8d, 0xff, 0x46, 0xfa, 0x8e, 0x4f, 0x3e, 0x55, 0x29, 0x14, 0x72, 0x05, 0x3f,
	0x8d, 0x44, 0x55, 0x81, 0xe1, 0x91, 0xae, 0x53, 0xb2, 0x45, 0xec, 0x4a, 0xec, 0x28, 0x89, 0x7b,
	0xea, 0x16, 0x80, 0x4a, 0x85, 0x58, 0xb6, 0x98, 0x62, 0x5a, 0xca, 0x10, 0x76, 0x96, 0x8b, 0xbb,
	0xf1, 0x22, 0x34, 0x26, 0x4a, 0x98, 0x90, 0xab, 0x5b, 0x85, 0x1c, 0x97, 0x49, 0xba, 0x00, 0x9e,
	0xbb, 0x84, 0x3c, 0xb3, 0x6a, 0x6e, 0x0f, 0x26, 0xaf, 0x94, 0xca, 0x28, 0xdc, 0x85, 0xa5, 0x8b,
	0x62, 0xbc, 0x6c, 0x6c, 0x2f, 0xb5, 0xcd, 0xb4, 0x85, 0x7e, 0x48, 0xb7, 0xa5, 0x4b, 0xe8, 0x6c,
	0xd8, 0x55, 0x00, 0xed, 0xf6, 0x52, 0x30, 0x56, 0x51, 0x5a, 0x92, 0xaf, 0x93, 0x2b, 0x79, 0x18,
	0xa2, 0x58, 0x4c, 0x73, 0xe1, 0xfd, 0xd6, 0xbe, 0x8c, 0x6e, 0x4b, 0x21, 0x4a, 0x11, 0xf2, 0x78,
	0xf0, 0x54, 0x1c, 0x4b, 0x5a, 0x86, 0x68, 0x1b, 0x46, 0x1b, 0x15, 0x40, 0x95, 0xe2, 0x20, 0xef,
	0xbb, 0x22, 0x3f, 0x4a, 0xde, 0x17, 0x44, 0xe5, 0xb7, 0xd5, 0x0a, 0x8e, 0x86, 0xc2, 0x24, 0x62,
	0x60, 0x16, 0x6f, 0x46, 0xae, 0xca, 0x1b, 0xe4, 0x03, 0xfd, 0x67, 0x04, 0xe2, 0x10, 0x65, 0xa2,
	0x3c, 0x97, 0x10, 0xe2, 0xe3, 0x60, 0xd2, 0xb5, 0xee, 0x85, 0xd1, 0xb6, 0x25, 0x15, 0xed, 0x3a,
	0xec, 0xaf, 0x12, 0xea, 0x95, 0xcf, 0xe5, 0xd2, 0xde, 0x40, 0x37, 0x20, 0xd1, 0x9a, 0xf1, 0x5a,
	0xe3, 0xfb, 0xd2, 0x4d, 0xf9, 0x03, 0xe4, 0x11, 0x6c, 0xc0, 0xa1, 0x06, 0xcc, 0x46, 0x7b, 0x0a,
	0xa4, 0xb0, 0xc0, 0x17, 0x8a, 0x31, 0x35, 0xbf, 0x55, 0x94, 0x6e, 0x61, 0x48, 0x50, 0xf6, 0xa0,
	0xf4, 0xd9, 0xca, 0x4a, 0xab, 0x38, 0x6b, 0x68, 0xe6, 0x7c, 0x21, 0x57, 0xca, 0x25, 0x60, 0x84,
	0x54, 0x36, 0x89, 0x0e, 0x99, 0x2b, 0x48, 0x0f, 0xc9, 0x8f, 0x93, 0xcd, 0xf3, 0x55, 0x44, 0xbd,
	0x7a, 0xf4, 0x7c, 0xb7, 0xfc, 0x7e, 0x72, 0x7b, 0xa0, 0x64, 0xfb, 0xa9, 0xd2, 0x8e, 0xba, 0x95,
	0xce, 0x01, 0xf5, 0xf3, 0x4a, 0x21, 0x27, 0x3d, 0xcc, 0x96, 0x48, 0x2c, 0x95, 0xa6, 0x27, 0x06,
	0x89, 0x58, 0x3e, 0x96, 0x48, 0x95, 0x0e, 0xa4, 0xf7, 0x50, 0x47, 0x6c, 0x3b, 0x71, 0x31, 0x56,
	0xda, 0x2d, 0x50, 0xd7, 0x91, 0xde, 0x0b, 0xc5, 0xf9, 0x82, 0x50, 0x29, 0x0b, 0x7d, 0xa8, 0xd6,
	0x6d, 0xa4, 0x47, 0x4d, 0x76, 0x62, 0xd9, 0x64, 0x71, 0x27, 0x76, 0x0f, 0x66, 0x17, 0xfa, 0xb0,
	0xeb, 0x91, 0xb5, 0x57, 0x46, 0xc8, 0x0c, 0x0b, 0x5e, 0xbb, 0x50, 0x34, 0x39, 0x18, 0x81, 0x78,
	0x90, 0xa5, 0x81, 0x12, 0x62, 0x16, 0x70, 0x8c, 0x83, 0xef, 0xe1, 0xcc, 0xab, 0xde, 0x1e, 0x83,
	0x64, 0xa9, 0x74, 0x3a, 0xc5, 0x1a, 0x8a, 0x2c, 0xb4, 0x8a, 0x87, 0x51, 0x79, 0x9e, 0x10, 0x1f,
	0xf9, 0x18, 0x86, 0xe0, 0xf8, 0x01, 0x78, 0x15, 0x84, 0x1f, 0xa0, 0xe3, 0x3e, 0x04, 0xc1, 0x07,
	0xe8, 0xee, 0xa5, 0xd2, 0x39, 0x95, 0x75, 0x4e, 0xa2, 0xa0, 0xed, 0x67, 0xff, 0x88, 0x53, 0xe8,
	0x01, 0x3d, 0xad, 0xd3, 0xb0, 0xcb, 0x5c, 0x64, 0x80, 0x2e, 0x09, 0x09, 0xb2, 0xde, 0x86, 0x15,
	0xc5, 0x59, 0xcf, 0xe0, 0x73, 0x46, 0xf1, 0x9e, 0x67, 0xf1, 0x39, 0x9b, 0x2b, 0x64, 0x20, 0x32,
	0x3f, 0x0f, 0x1b, 0xc0, 0xdc, 0x9a, 0x2d, 0x32, 0xd1, 0x76, 0x1e, 0x0f, 0x4e, 0xb9, 0xad, 0x64,
	0x15, 0x36, 0x95, 0x7b, 0x18, 0x0b, 0xe8, 0x14, 0xa5, 0x73, 0xfb, 0xea, 0x7e, 0x86, 0x45, 0xf3,
	0xae, 0x7e, 0x0c, 0x0c, 0xb1, 0x6c, 0x0e, 0xb8, 0x1e, 0x80, 0x91, 0x6e, 0x92, 0xab, 0xfd, 0xf0,
	0x3b, 0x50, 0x56, 0x23, 0x83, 0x91, 0xb5, 0x2c, 0xd8, 0xe2, 0x30, 0x56, 0xab, 0xe5, 0x9a, 0x68,
	0x96, 0xd8, 0x36, 0x64, 0x7f, 0xbb, 0x19, 0x00, 0xf2, 0x87, 0x4c, 0xec, 0x39, 0x66, 0x58, 0xfa,
	0x90, 0xca, 0xb2, 0x3d, 0x0b, 0x1f, 0x62, 0xd9, 0x03, 0xb0, 0x2a, 0xba, 0x2f, 0xc3, 0xd0, 0x86,
	0xf1, 0xb5, 0x6d, 0xb2, 0xb8, 0x67, 0x98, 0x55, 0x5b, 0x53, 0x6c, 0x3b, 0x01, 0x19, 0x76, 0xcd,
	0xb2, 0xcf, 0xd0, 0x89, 0xa0, 0x7c, 0xdf, 0x2a, 0xc4, 0x20, 0x2a, 0x24, 0xd0, 0xfb, 0xd1, 0x9b,
	0x24, 0xdc, 0x4e, 0x97, 0x78, 0x3b, 0x3a, 0x8a, 0xbf, 0x6f, 0x64, 0xed, 0x4b, 0x21, 0x91, 0x77,
	0x76, 0x9f, 0xee, 0x2d, 0x79, 0xdb, 0x3a, 0xc6, 0x18, 0x16, 0xcb, 0xd6, 0x69, 0x3e, 0x72, 0xb1,
	0xa7, 0xfd, 0xce, 0xfa, 0xba, 0xf4, 0x85, 0xd1, 0xbe, 0x5d, 0x77, 0xa1, 0xeb, 0xad, 0x51, 0x5f,
	0xd2, 0xd1, 0xee, 0xda, 0x78, 0x1c, 0xfa, 0xbe, 0x3e, 0xdb, 0xb7, 0x6f, 0x13, 0xea, 0x46, 0xe9,
	0x1f, 0x16, 0xd6, 0xbe, 0x36, 0x42, 0x96, 0x06, 0x9c, 0xf2, 0x81, 0x9f, 0x78, 0xbb, 0x2e, 0x18,
	0x07, 0x74, 0x53, 0x40, 0xbc, 0x9e, 0xd6, 0x24, 0x9a, 0xa0, 0xab, 0x15, 0xe3, 0x08, 0x18, 0xdc,
	0x53, 0x91, 0xb5, 0x16, 0x95, 0xc2, 0x1e, 0xcd, 0x17, 0xbc, 0xe4, 0xa9, 0xcd, 0x83, 0x41, 0xc6,
	0x70, 0xcf, 0xea, 0xe9, 0xe2, 0xb8, 0xf1, 0xee, 0x4e, 0x1a, 0xad, 0x78, 0xe7, 0x84, 0x1c, 0x26,
	0xd7, 0xfa, 0x32, 0x15, 0x14, 0x93, 0xed, 0x14, 0xb0, 0x2d, 0x4e, 0x2a, 0xa1, 0xc0, 0x8a, 0x80,
	0x3d, 0xa7, 0xef, 0xa0, 0xd8, 0x3b, 0xdd, 0x3d, 0x6a, 0x12, 0xcc, 0x07, 0xfb, 0x55, 0x2e, 0x9b,
	0x82, 0xc5, 0xb1, 0xf6, 0xd5, 0xa9, 0xf6, 0xf1, 0x2b, 0xaf, 0xa5, 0x7c, 0xdc, 0x72, 0xf1, 0x8f,
	0xa8, 0x34, 0xc3, 0xd9, 0xcd, 0xde, 0xcb, 0xe6, 0xf6, 0xb3, 0x52, 0x05, 0x23, 0xfd, 0x1e, 0x93,
	0x08, 0x77, 0x46, 0x2e, 0x9b, 0xde, 0xd5, 0xcc, 0x36, 0x4c, 0xa9, 0xda, 0xd1, 0xfc, 0x84, 0xa0,
	0xae, 0x75, 0x35, 0x73, 0xea, 0x23, 0xdc, 0xe6, 0xf6, 0x32, 0xaa, 0x6f, 0x70, 0xc9, 0x10, 0x79,
	0x96, 0xaf, 0xed, 0x18, 0xdd, 0x5d, 0xc0, 0x61, 0x4b, 0x94, 0xea, 0xe8, 0xc1, 0xb0, 0xd8, 0x4b,
	0x85, 0x5c, 0x1a, 0x0a, 0xa8, 0x0e, 0xe2, 0x86, 0x7f, 0x12, 0x13, 0xd8, 0x4f, 0x43, 0xa5, 0x64,
	0x62, 0x0a, 0x20, 0xda, 0x71, 0x5f, 0xcd, 0x17, 0x14, 0xb4, 0x4e, 0xbc, 0x90, 0xdb, 0x07, 0xd6,
	0x14, 0x6b, 0x0d, 0xa0, 0xa1, 0xf1, 0xb0, 0x70, 0x40, 0x69, 0x9a, 0x03, 0x68, 0x92, 0xca, 0x1e,
	0x35, 0x1c, 0xd2, 0x7c, 0x0c, 0xd7, 0x7f, 0x1f, 0x9a, 0x74, 0x2c, 0xbb, 0x4d, 0x09, 0x6c, 0xdc,
	0xcc, 0xfb, 0x10, 0xe4, 0x98, 0x0e, 0x0e, 0xc6, 0x97, 0x3e, 0xdd, 0xbb, 0x85, 0x34, 0xed, 0x77,
	0x3b, 0x3c, 0x83, 0x05, 0x1d, 0xda, 0xd1, 0xf2, 0xcf, 0xfd, 0x8e, 0x12, 0x4b, 0x97, 0x76, 0xa0,
	0xa8, 0x2c, 0x30, 0xa9, 0x4e, 0xe4, 0xf7, 0x92, 0x87, 0x3c, 0xae, 0x4a, 0x11, 0xb2, 0xf5, 0x84,
	0xc2, 0x53, 0x8e, 0x0e, 0x33, 0x9c, 0x76, 0xa8, 0xd8, 0x45, 0xc8, 0x45, 0xbc, 0x7f, 0x1e, 0x33,
	0xbf, 0xbd, 0xce, 0x30, 0x03, 0x19, 0x44, 0xe8, 0x19, 0xe4, 0xc5, 0xf3, 0xd8, 0xf9, 0x4d, 0xfb,
	0x1b, 0xf2, 0x43, 0xe4, 0xe6, 0x20, 0x42, 0x61, 0x9f, 0xdf, 0xc4, 0xcc, 0x70, 0x20, 0x37, 0xb1,
	0x1c, 0x28, 0xe9, 0x6f, 0x9d, 0x27, 0x5e, 0x3c, 0x9d, 0x8b, 0x53, 0xaa, 0x8f, 0xe3, 0x56, 0xe8,
	0x1d, 0xe4, 0x73, 0x13, 0xfc, 0x36, 0x88, 0xd2, 0xcf, 0x13, 0x52, 0xf9, 0xed, 0x42, 0x6e, 0x37,
	0x4f, 0x69, 0x5e, 0x0a, 0xc1, 0x4c, 0xb7, 0xd7, 0x6a, 0x3e, 0x0f, 0xa9, 0x44, 0x11, 0xcf, 0x56,
	0x19, 0x8b, 0x97, 0x43, 0xb0, 0xf8, 0xbc, 0x09, 0x13, 0x2e, 0x9e, 0xcc, 0xb2, 0xde, 0x4f, 0x84,
	0x60, 0x3a, 0x97, 0x44, 0x6f, 0x57, 0xe7, 0x27, 0x43, 0xf2, 0xad, 0x76, 0x00, 0xe1, 0x8b, 0xbf,
	0x93, 0xfb, 0xa7, 0xf0, 0xad, 0x86, 0xe7, 0x87, 0x5c, 0xb5, 0x0e, 0x8a, 0x4f, 0x77, 0x88, 0xc7,
	0x4e, 0x1e, 0xd4, 0x62, 0x29, 0xc6, 0xbb, 0x5f, 0x09, 0xad, 0xfd, 0x4b, 0x88, 0xcc, 0x89, 0x38,
	0xcb, 0xb6, 0x46, 0xcc, 0x4c, 0xb6, 0xb7, 0x0b, 0xb0, 0xa1, 0xc2, 0xde, 0xc6, 0x8a, 0xa4, 0x74,
	0x1a, 0xe2, 0x04, 0xec, 0xc7, 0x5d, 0xed, 0x2c, 0x07, 0xd6, 0x31, 0xb9, 0xec, 0xea, 0xc9, 0xd1,
	0xfd, 0x1a, 0xc6, 0xd9, 0x2d, 0xaa, 0xa9, 0xed, 0x2c, 0x7a, 0x28, 0x06, 0x79, 0x68, 0xc9, 0xe4,
	0x21, 0x88, 0xbc, 0x87, 0xac, 0x76, 0x01, 0xf2, 0x85, 0x54, 0x26, 0x06, 0x1e, 0x75, 0x4f, 0x39,
	0x00, 0xfb, 0x42, 0x98, 0x2c, 0x94, 0x20, 0xaa, 0x60, 0x85, 0xd4, 0x49, 0x07, 0x82, 0x43, 0x61,
	0x08, 0xe1, 0xa5, 0x88, 0xe1, 0x05, 0x02, 0x5b, 0x6f, 0x3f, 0x26, 0xf5, 0xd0, 0x6b, 0xac, 0xbd,
	0x3a, 0xeb, 0x45, 0x42, 0xf1, 0x8a, 0xe7, 0x8e, 0xd8, 0x15, 0x7c, 0xe2, 0x84, 0x56, 0x6e, 0xfc,
	0xe5, 0x1f, 0xaf, 0x8e, 0x4c, 0x85, 0xf0, 0xa7, 0x34, 0x83, 0x3f, 0x97, 0xdf, 0x85, 0x3f, 0xc3,
	0xf4, 0xe7, 0xed, 0x90, 0x1c, 0x17, 0xd5, 0x9e, 0x48, 0xed, 0x47, 0x56, 0x1e, 0xf5, 0x41, 0xa6,
	0xe0, 0xe7, 0x5c, 0x74, 0x86, 0x1d, 0xa1, 0xd1, 0x43, 0xad, 0x3e, 0x3c, 0x14, 0x32, 0x45, 0x63,
	0x3f, 0x28, 0x28, 0x8d, 0xae, 0x3c, 0xe1, 0x83, 0x87, 0x3c, 0xea, 0x4b, 0x9b, 0x17, 0x9a, 0x96,
	0x55, 0x67, 0x07, 0x27, 0x11, 0xfa, 0xeb, 0xb1, 0x7e, 0x46, 0xd9, 0x84, 0x3c, 0x51, 0x26, 0x31,
	0x84, 0x23, 0x97, 0xb1, 0x95, 0xbb, 0x7d, 0xb9, 0x5c, 0xd8, 0x5c, 0xa4, 0x87, 0x6b, 0x94, 0x09,
	0xfe, 0xd6, 0xcd, 0xe3, 0x1e, 0x21, 0xf8, 0x1a, 0xa0, 0x44, 0xad, 0x2d, 0x8d, 0xaf, 0x7c, 0xb0,
	0x2f, 0x9b, 0x2b, 0x9b, 0x97, 0xf1, 0x85, 0x87, 0x7b, 0xc6, 0x39, 0xf1, 0x07, 0xc1, 0xcc, 0xa7,
	0x17, 0xdd, 0x9d, 0x90, 0xd5, 0xc4, 0x60, 0xbd, 0x4c, 0xab, 0xa2, 0x73, 0x46, 0xf4, 0xd7, 0x6e,
	0x36, 0x59, 0x32, 0x23, 0x82, 0x0a, 0x72, 0x9a, 0x5c, 0xf9, 0x50, 0x5f, 0x4e, 0x57, 0x37, 0xaf,
	0x94, 0xad, 0x96, 0xe9, 0xda, 0x42, 0x2a, 0xf1, 0xd4, 0xcd, 0xef, 0x59, 0x32, 0x01, 0xab, 0x18,
	0x59, 0x4d, 0xad, 0x3c, 0xd6, 0x97, 0xd5, 0xe2, 0xe6, 0x82, 0xe5, 0x08, 0x2b, 0x39, 0x3d, 0x0c,
	0xc0, 0xd0, 0x18, 0x6d, 0x90, 0xc3, 0xf4, 0x60, 0x43, 0xb7, 0x6c, 0x31, 0x5b, 0xf8, 0x5b, 0x1f,
	0xa5, 0x44, 0x68, 0x43, 0x3e, 0x64, 0xb0, 0x52, 0x15, 0xfd, 0x04, 0xfd, 0x86, 0xf3, 0x12, 0x4f,
	0x7d, 0x6c, 0x4d, 0x03, 0x2a, 0x32, 0x9b, 0x19, 0x6c, 0xeb, 0xba, 0x66, 0xd6, 0x38, 0x27, 0xfa,
	0x6b, 0x1f, 0xb1, 0xc4, 0x6e, 0x80, 0x9c, 0x66, 0x07, 0x8b, 0x75, 0x68, 0x5b, 0xa7, 0x8e, 0x6e,
	0x73, 0x66, 0xe2, 0xa9, 0x9b, 0xdf, 0x1c, 0x99, 0x6e, 0xaf, 0xa6, 0x39, 0x3c, 0xa1, 0x11, 0x59,
	0x06, 0x94, 0xf0, 0x2b, 0x22, 0xc0, 0xd1, 0x08, 0x5a, 0x04, 0x92, 0x34, 0x5b, 0xaa, 0x50, 0xb3,
	0x03, 0x90, 0xf7, 0x41, 0xe6, 0x22, 0x21, 0x10, 0xc2, 0x40, 0xae, 0x80, 0x85, 0xd0, 0xa2, 0xbc,
	0x0e, 0x1e, 0x91, 0x52, 0x8b, 0x85, 0x04, 0xa3, 0x96, 0x57, 0x6e, 0x7a, 0x8b, 0xed, 0x52, 0xd4,
	0x7b, 0x47, 0x5c, 0x36, 0x54, 0xc7, 0x2e, 0xd3, 0x45, 0x87, 0x78, 0x1a, 0xd0, 0x51, 0xa9, 0x0b,
	0xa8, 0xa5, 0x08, 0xd4, 0xd8, 0x70, 0x71, 0xb0, 0x96, 0x46, 0xb3, 0x66, 0x5b, 0xad, 0x26, 0xd7,
	0x52, 0x3c, 0x75, 0x6b, 0x09, 0xab, 0x86, 0xc7, 0x4f, 0x64, 0x77, 0x69, 0xf0, 0xaa, 0x81, 0x84,
	0x5a, 0x33, 0x5d, 0xce, 0x8d, 0x3f, 0x74, 0x33, 0xfb, 0x20, 0x99, 0xe1, 0x4b, 0x90, 0x2a, 0xb7,
	0xb4, 0xb2, 0xd6, 0x15, 0x4f, 0xe6, 0xa3, 0xb3, 0x62, 0xf5, 0x81, 0x6a, 0x4e, 0x3b, 0xa0, 0x30,
	0x49, 0x62, 0xa5, 0x52, 0x2c, 0x71, 0x8f, 0x4a, 0x72, 0x79, 0xb0, 0x24, 0x9a, 0xeb, 0x6a, 0xe5,
	0x63, 0x2e, 0x09, 0x7f, 0xe8, 0x96, 0xa4, 0x44, 0x16, 0x7c, 0xf9, 0x23, 0xe5, 0xb8, 0xbc, 0xf2,
	0x6c, 0x17, 0xc7, 0x87, 0x36, 0x6f, 0x55, 0xa0, 0x42, 0x30, 0x1d, 0xc8, 0xc4, 0x8d, 0x8a, 0xf0,
	0x52, 0x5f, 0x0b, 0xe7, 0xea, 0x89, 0x98, 0x26, 0x8b, 0xde, 0x6e, 0x2a, 0xb8, 0x4b, 0x57, 0x3a,
	0xd6, 0x11, 0x6a, 0x79, 0x25, 0x7a, 0x59, 0x4c, 0xa4, 0xc7, 0xad, 0x8f, 0xc2, 0xb0, 0x16, 0x63,
	0xc5, 0x2c, 0x95, 0x6d, 0x65, 0xf0, 0x5a, 0xd4, 0x1c, 0x53, 0xa8, 0xea, 0x98, 0xdd, 0x7a, 0xae,
	0x7d, 0x7d, 0x04, 0x42, 0x3f, 0x3f, 0xc9, 0x13, 0x43, 0xe1, 0x3e, 0xd4, 0x23, 0xa6, 0xda, 0xb3,
	0x41, 0xbc, 0xcb, 0x9f, 0xcc, 0xb5, 0xe9, 0x78, 0xbc, 0x82, 0x5a, 0x63, 0x59, 0x54, 0x41, 0xfe,
	0xee, 0x1c, 0x56, 0xce, 0xbe, 0xba, 0xa2, 0xdd, 0x03, 0x71, 0x05, 0x4a, 0x8e, 0xbe, 0x3c, 0x79,
	0xb8, 0x80, 0xb2, 0x63, 0xa5, 0x9d, 0x18, 0xb4, 0xbb, 0x71, 0xf5, 0x43, 0xd5, 0xd1, 0x17, 0xca,
	0x97, 0x34, 0xd4, 0x1d, 0x7d, 0xbb, 0xf9, 0x5a, 0x80, 0xa2, 0xc3, 0x57, 0x0d, 0xb4, 0xbb, 0x99,
	0x43, 0x41, 0xe5, 0xd1, 0x57, 0x62, 0xb0, 0xbe, 0x34, 0xbd, 0xf6, 0xa5, 0x11, 0x48, 0x36, 0x06,
	0xdf, 0x84, 0x80, 0x74, 0xe5, 0xfa, 0xc0, 0xbb, 0x10, 0xbc, 0x56, 0xf3, 0x95, 0x44, 0xfd, 0xae,
	0x4b, 0x80, 0x2d, 0x7d, 0xd9, 0x5a, 0x0f, 0x05, 0x56, 0xd7, 0xb8, 0xb5, 0x8f, 0xf8, 0x73, 0xc4,
	0x1e, 0x2a, 0xa8, 0xe1, 0x91, 0x68, 0xf4, 0xdc, 0xc1, 0xf0, 0xc0, 0x7a, 0x4c, 0x7e, 0x98, 0xdc,
	0x3a, 0x8f, 0x42, 0xa5, 0x87, 0xd7, 0xe3, 0x81, 0x64, 0xf4, 0xac, 0x7a, 0x62, 0xed, 0xf5, 0x49,
	0x2f, 0xdf, 0x68, 0xdf, 0xed, 0xf0, 0x4a, 0x15, 0x06, 0xe3, 0x76, 0xf0, 0x59, 0x99, 0xb3, 0xf3,
	0x4e, 0x16, 0x7c, 0xa9, 0x39, 0xeb, 0xf2, 0xd5, 0x41, 0x34, 0x73, 0x63, 0x27, 0xc7, 0x9d, 0x34,
	0xac, 0x14, 0x50, 0x69, 0x2d, 0x20, 0x8d, 0xfa, 0x9d, 0x87, 0xf5, 0x43, 0xc1, 0xc5, 0xb0, 0x63,
	0x7e, 0xd3, 0xb1, 0xbe, 0xde, 0xe2, 0x6f, 0xfc, 0x5c, 0x22, 0x5e, 0xdc, 0x4d, 0x9c, 0x43, 0xe4,
	0x55, 0x80, 0x93, 0xe7, 0x12, 0xf1, 0xe1, 0xa6, 0xfc, 0x93, 0xce, 0x88, 0x7a, 0xeb, 0x37, 0x89,
	0x9c, 0x4b, 0x25, 0x16, 0xe3, 0xcc, 0xb9, 0x54, 0x62, 0x79, 0xcd, 0xfa, 0x7d, 0xb5, 0x87, 0x8a,
	0xae, 0xb2, 0x39, 0x7f, 0x89, 0xd7, 0x43, 0x92, 0xc3, 0xd3, 0x69, 0x9f, 0x7f, 0xf5, 0x10, 0xe0,
	0x1a, 0x5f, 0xe8, 0xcf, 0x22, 0x96, 0x85, 0x89, 0x2e, 0xe1, 0x29, 0xa7, 0xd4, 0x3b, 0x51, 0x50,
	0x2d, 0xb3, 0x89, 0xba, 0xec, 0xf7, 0x3a, 0x0e, 0xee, 0x2d, 0x74, 0xa4, 0x65, 0x7f, 0x0c, 0xeb,
	0x4f, 0x86, 0x7b, 0xa2, 0x74, 0xe5, 0x5c, 0xbb, 0x88, 0xe0, 0xb0, 0xd2, 0x2b, 0x31, 0x16, 0x43,
	0x6d, 0x89, 0xaf, 0xf6, 0xba, 0x9e, 0xbf, 0xe6, 0x91, 0xae, 0xf9, 0x83, 0x4f, 0xe7, 0x7c, 0x43,
	0x5d, 0x23, 0x5d, 0xf7, 0x07, 0x1f, 0xe1, 0x99, 0x5e, 0xef, 0x8d, 0x5e, 0xdf, 0xef, 0x2e, 0x7b,
	0xa4, 0x9b, 0xbd, 0x33, 0xd7, 0x55, 0xf7, 0x48, 0xe1, 0x5e, 0x19, 0xfd, 0x85, 0x8f, 0x74, 0x6b,
	0xed, 0xe3, 0x50, 0xf2, 0xf8, 0xef, 0xc6, 0xe0, 0x34, 0xf8, 0x6f, 0xc7, 0xb4, 0x2f, 0xc5, 0xc0,
	0x7a, 0x04, 0x07, 0x0e, 0xb8, 0x39, 0x03, 0x0b, 0xf2, 0x12, 0x59, 0xdc, 0xc9, 0xa5, 0x4b, 0xfb,
	0x29, 0x7c, 0xff, 0x04, 0x06, 0x2b, 0x41, 0xc8, 0x84, 0xb5, 0xd6, 0xdb, 0x9c, 0x29, 0x4a, 0x53,
	0x6b, 0xdb, 0xe4, 0x52, 0xdf, 0xeb, 0x3f, 0x18, 0x2e, 0x7a, 0x2f, 0x00, 0x41, 0xb8, 0xe8, 0xd3,
	0x9e, 0x85, 0x58, 0xb1, 0x56, 0xf5, 0x1d, 0x95, 0x41, 0xba, 0x90, 0x71, 0x6a, 0x3b, 0x9a, 0x59,
	0xa9, 0xeb, 0xb6, 0x3f, 0xc0, 0xe0, 0xd1, 0x30, 0x06, 0x8f, 0x74, 0x2e, 0x11, 0x43, 0x66, 0xbe,
	0xa3, 0x05, 0xd1, 0x55, 0xa0, 0x47, 0x93, 0xbe, 0x6d, 0x4c, 0x74, 0x24, 0x93, 0xb8, 0x8d, 0xad,
	0x95, 0xdb, 0x37, 0x90, 0xda, 0x47, 0x72, 0x5b, 0x2d, 0x93, 0x5e, 0xd7, 0xa1, 0x69, 0x9c, 0xef,
	0x3c, 0x0e, 0xd2, 0x30, 0xfa, 0xc8, 0xcc, 0x27, 0x9e, 0xf0, 0xf4, 0x73, 0xc4, 0x7b, 0xc2, 0xe3,
	0xcf, 0xd1, 0xf6, 0x53, 0x2a, 0x2b, 0x8d, 0xad, 0x25, 0xc9, 0x6c, 0xac, 0x6c, 0x14, 0xcb, 0x47,
	0x7a, 0x43, 0x2b, 0x69, 0x35, 0xfa, 0xa6, 0x0f, 0x32, 0xc0, 0x0c, 0x2c, 0x5a, 0xe0, 0x8a, 0x07,
	0xa2, 0xfc, 0x29, 0xb1, 0x85, 0x8c, 0xf1, 0x75, 0x08, 0x36, 0x6c, 0xed, 0x66, 0x13, 0xc2, 0xc9,
	0x40, 0xd4, 0xbf, 0x0e, 0x41, 0xea, 0xc1, 0x64, 0x55, 0x68, 0x02, 0x45, 0x6b, 0x5a, 0x3c, 0x10,
	0xe5, 0x9e, 0x26, 0x54, 0x64, 0xf9, 0x17, 0x63, 0xe4, 0x3b, 0xa3, 0xe2, 0xcd, 0x23, 0xe2, 0x2d,
	0x61, 0x67, 0x33, 0xdd, 0xb6, 0xfb, 0x1c, 0x4c, 0xf1, 0xee, 0x31, 0x5a, 0xb1, 0xfa, 0xde, 0x6e,
	0x75, 0xf5, 0xd3, 0xb7, 0xb4, 0xdc, 0x19, 0xbb, 0xba, 0x26, 0xd6, 0x4e, 0xc5, 0x95, 0xba, 0xf6,
	0x8d, 0xba, 0x3c, 0x54, 0x94, 0x36, 0xe8, 0x80, 0xc2, 0x64, 0xc4, 0x1e, 0xf1, 0x3c, 0x8c, 0x8b,
	0x3b, 0x21, 0x88, 0x8e, 0x53, 0xe9, 0x6f, 0xce, 0x28, 0xc9, 0x14, 0xb5, 0x33, 0x9e, 0x7e, 0xfa,
	0x3b, 0x60, 0x4f, 0x04, 0xd9, 0xbb, 0xb9, 0xd0, 0x09, 0x1b, 0x5b, 0x6b, 0x92, 0x0b, 0xf4, 0x9a,
	0x48, 0x12, 0xdc, 0xd0, 0xa8, 0x7b, 0x97, 0x36, 0xc1, 0xe9, 0xd8, 0xc9, 0x76, 0x52, 0x29, 0xc5,
	0x52, 0xe9, 0xa2, 0x98, 0x5f, 0x58, 0x80, 0x9d, 0xed, 0xa9, 0x6c, 0x22, 0xbd, 0x8b, 0x07, 0x94,
	0xbb, 0x19, 0xac, 0xe1, 0x41, 0x2e, 0xb0, 0x42, 0x27, 0x49, 0x2e, 0x9b, 0x3e, 0xf0, 0xfa, 0x47,
	0xd6, 0x7e, 0x1d, 0x32, 0xd8, 0xf6, 0x05, 0x8b, 0x25, 0x32, 0xcd, 0xae, 0x49, 0xa0, 0x94, 0xa1,
	0x95, 0xc9, 0x57, 0xff, 0x68, 0x75, 0x34, 0x6d, 0x9d, 0x42, 0xac, 0x98, 0x65, 0xed, 0x42, 0xad,
	0x15, 0x02, 0x5d, 0x13, 0x19, 0xbd, 0x62, 0xb4, 0x1a, 0xe0, 0xad, 0x84, 0xf5, 0x52, 0x5b, 0x8c,
	0xae, 0x4c, 0x41, 0xdf, 0xd8, 0x8e, 0x51, 0x3b, 0x42, 0x43, 0x52, 0xee, 0x31, 0xea, 0x9e, 0xdb,
	0x98, 0xcd, 0x27, 0xf5, 0xaa, 0xd6, 0xaa, 0xbb, 0x0e, 0x7d, 0x87, 0x42, 0xcf, 0x0b, 0x59, 0x65,
	0x40, 0x47, 0xa4, 0x27, 0x1e, 0xbe, 0x46, 0xbf, 0x15, 0xfd, 0xed, 0x6c, 0x20, 0x7a, 0x0e, 0xe2,
	0x6b, 0x55, 0x9e, 0x83, 0xb5, 0x0d, 0x01, 0x12, 0x0c, 0x99, 0x03, 0xfa, 0xae, 0x1b, 0x20, 0xe8,
	0x2f, 0x03, 0xef, 0x80, 0x80, 0x31, 0xf1, 0x04, 0xa3, 0xb7, 0x3b, 0x96, 0xc4, 0x25, 0x11, 0x5a,
	0xbb, 0x4e, 0x48, 0xfb, 0x1a, 0x83, 0x3c, 0x41, 0x46, 0xf6, 0xee, 0x00, 0x66, 0x92, 0x8c, 0x62,
	0xb8, 0x0c, 0x45, 0x3f, 0x4c, 0x2e, 0x39, 0x78, 0xff, 0x17, 0xaf, 0xc0, 0xd8, 0x9a, 0xe9, 0x68,
	0x65, 0x76, 0x2b, 0x43, 0xbe, 0x19, 0x61, 0x97, 0x89, 0x23, 0xe2, 0x32, 0x71, 0xa4, 0xc8, 0xe8,
	0xf8, 0xdc, 0x2e, 0xff, 0xe3, 0x2b, 0xec, 0x16, 0xc8, 0x53, 0x64, 0x5e, 0x70, 0xf8, 0x18, 0xbd,
	0x5d, 0x13, 0x0c, 0xfd, 0x27, 0x0a, 0x9d, 0x8e, 0x3e, 0x43, 0x2e, 0x08, 0xa8, 0xdd, 0x84, 0x0a,
	0x0c, 0x92, 0x6a, 0xab, 0xe5, 0x06, 0xe3, 0xff, 0x99, 0xe2, 0xe7, 0x00, 0x7f, 0x91, 0xdd, 0x23,
	0xec, 0x92, 0xfd, 0x46, 0x0f, 0x83, 0x0c, 0x25, 0xeb, 0x16, 0xfd, 0x09, 0x32, 0xc7, 0xf1, 0x5c,
	0xf2, 0x20, 0xa0, 0x10, 0xfc, 0x69, 0x22, 0x73, 0xa0, 0x5f, 0xee, 0x20, 0xb4, 0x10, 0x3b, 0x4a,
	0xaf, 0x30, 0x21, 0x5a, 0xbf, 0xdf, 0x34, 0x6c, 0xcc, 0xf3, 0x02, 0xb1, 0x6f, 0x70, 0x91, 0x37,
	0xc9, 0xb4, 0xad, 0x57, 0x75, 0xdb, 0x51, 0x5d, 0x4b, 0xbe, 0xde, 0x03, 0xda, 0xc2, 0xbb, 0x34,
	0x02, 0xf3, 0xaf, 0x6f, 0x30, 0x69, 0x9f, 0x20, 0xf3, 0xa7, 0xba, 0x76, 0xac, 0x0e, 0x0d, 0xfc,
	0x06, 0x07, 0x3e, 0x46, 0xc8, 0xa1, 0x5e, 0xb7, 0xcc, 0xda, 0x30, 0xa0, 0x6f, 0x72, 0xd0, 0xe3,
	0x64, 0xae, 0xaa, 0x8a, 0x8b, 0xe7, 0x18, 0xdb, 0x03, 0x70, 0xdf, 0xe2, 0xb8, 0x08, 0x19, 0x6f,
	0xd1, 0x77, 0x8c, 0x01, 0xf4, 0xdf, 0x6e, 0xd3, 0xc3, 0xa4, 0xd7, 0xf4, 0x20, 0xfa, 0xef, 0x70,
	0xfa, 0x75, 0x32, 0x29, 0xae, 0xd6, 0x06, 0x20, 0xbe, 0xcb, 0x11, 0x77, 0xc9, 0x6c, 0xc3, 0x30,
	0x55, 0xbd, 0xae, 0x37, 0xf0, 0x8e, 0x5a, 0x10, 0xec, 0x7b, 0x14, 0x36, 0x4e, 0x61, 0xda, 0xfd,
	0xa1, 0x61, 0xdf, 0xe7, 0xb0, 0xc7, 0xe8, 0x5d, 0x6a, 0x28, 0x5e, 0xf1, 0xa2, 0x74, 0x10, 0xe8,
	0xdf, 0xda, 0x53, 0xcb, 0xaf, 0x22, 0xab, 0x27, 0x5a, 0xbd, 0xa5, 0x07, 0x8e, 0xf6, 0xef, 0x1c,
	0x18, 0x23, 0x33, 0xfc, 0x82, 0x18, 0x3d, 0xf7, 0x08, 0x40, 0xfd, 0xc7, 0x1b, 0xec, 0x7a, 0xda,
	0x4c, 0xa4, 0x7d, 0x07, 0x06, 0x27, 0xda, 0x71, 0xf1, 0x1a, 0xad, 0x5a, 0xd7, 0xcd, 0x9a, 0x7b,
	0x14, 0xc4, 0xe4, 0x3f, 0xdf, 0x60, 0xee, 0xff, 0x28, 0x99, 0xa8, 0xaa, 0x8d, 0x96, 0xe3, 0x06,
	0x01, 0xfe, 0xab, 0xed, 0x86, 0x96, 0x5d, 0xd1, 0x6d, 0xbd, 0xa2, 0x1e, 0x9e, 0x05, 0x81, 0xfe,
	0xbb, 0x3d, 0x79, 0x47, 0xf8, 0x69, 0x43, 0xdd, 0x30, 0x8f, 0x87, 0xf0, 0xde, 0xff, 0xe1, 0xb0,
	0x27, 0xc9, 0x82, 0x30, 0x68, 0x85, 0x05, 0xfc, 0x20, 0xe4, 0x0f, 0x38, 0x12, 0x56, 0x66, 0x95,
	0x1a, 0x13, 0x70, 0x41, 0x98, 0x1f, 0xb6, 0x35, 0xab, 0xc2, 0xb2, 0xd4, 0x2a, 0x78, 0xf3, 0x32,
	0x08, 0xf4, 0xe6, 0x1b, 0x22, 0x6a, 0xcd, 0x57, 0xd5, 0xc3, 0xba, 0x75, 0xa8, 0x36, 0x74, 0xc7,
	0xd1, 0x82, 0x57, 0xc0, 0x5b, 0x1c, 0x18, 0x25, 0x8b, 0x15, 0xc3, 0x69, 0xaa, 0xef, 0xc4, 0x2e,
	0x3f, 0xe2, 0x92, 0xde, 0x21, 0x33, 0x55, 0xd5, 0xc1, 0x33, 0x0f, 0xbc, 0x3a, 0x1a, 0x84, 0xfa,
	0x31, 0x1f, 0x71, 0x83, 0x4c, 0x55, 0xd5, 0x23, 0xa3, 0x52, 0xd1, 0x03, 0x17, 0xdd, 0x4f, 0x38,
	0xe4, 0x83, 0x44, 0x86, 0x81, 0xf0, 0x56, 0x1f, 0xbd, 0xf5, 0xad, 0x42, 0x2e, 0x57, 0x3e, 0x0e,
	0x02, 0xff, 0xd4, 0x6f, 0x9a, 0x17, 0x1c, 0x58, 0x44, 0x43, 0x4e, 0xde, 0xcf, 0xb8, 0x7a, 0x4f,
	0x91, 0x09, 0xad, 0x56, 0x53, 0xad, 0x66, 0xe0, 0x6c, 0xbf, 0xc6, 0x6e, 0xdf, 0x4f, 0x45, 0xf8,
	0xab, 0x79, 0x74, 0x34, 0xf6, 0x79, 0x46, 0xd9, 0xaa, 0xb7, 0x1a, 0x81, 0x7a, 0xfe, 0xf0, 0xb5,
	0x31, 0xdf, 0x64, 0xd8, 0xad, 0x26, 0xbd, 0xc7, 0xdb, 0x6a, 0x56, 0x34, 0x37, 0xd0, 0xac, 0x6f,
	0x72, 0xec, 0x3e, 0xdd, 0x7e, 0xe8, 0x99, 0xd7, 0x51, 0xfb, 0xf3, 0x9d, 0x20, 0x2f, 0xa0, 0xe0,
	0x99, 0xcd, 0x95, 0xc8, 0xc0, 0x2f, 0x80, 0x30, 0x46, 0x3a, 0x3a, 0xde, 0x19, 0xbd, 0x1f, 0xe8,
	0x17, 0x94, 0xdb, 0x74, 0x34, 0x4e, 0xa6, 0xc5, 0x37, 0x36, 0xc1, 0x5e, 0xc1, 0x6d, 0x37, 0x1f,
	0xe9, 0x78, 0x5b, 0x14, 0x2d, 0xb6, 0xd5, 0x69, 0xdf, 0xe0, 0x0c, 0xf4, 0x17, 0xae, 0xce, 0x52,
	0xa4, 0xef, 0x0d, 0xd8, 0x68, 0x02, 0xa2, 0x30, 0x0b, 0x70, 0x43, 0xed, 0x2a, 0x3f, 0xe5, 0xb2,
	0xcd, 0x46, 0x7c, 0xd7, 0x5d, 0xa2, 0x1a, 0x59, 0x16, 0x92, 0xd9, 0x3a, 0xac, 0x9c, 0x3a, 0xbb,
	0xea, 0xa0, 0x1e, 0x1e, 0x07, 0x7b, 0x16, 0x97, 0xef, 0x46, 0xe4, 0xdc, 0xcf, 0xa6, 0xd0, 0x0f,
	0xc4, 0x10, 0xb8, 0xd9, 0x38, 0x65, 0xad, 0x1e, 0x68, 0xc8, 0x9f, 0x53, 0xde, 0xa1, 0xe8, 0x6e,
	0xfb, 0x43, 0xa7, 0x86, 0x53, 0x53, 0x8f, 0x78, 0xe1, 0x16, 0x80, 0xfe, 0x05, 0x57, 0xd5, 0xf7,
	0x25, 0x54, 0x47, 0xe1, 0x07, 0xf3, 0x31, 0xd7, 0xc0, 0xd5, 0x50, 0x15, 0xd5, 0x59, 0x00, 0xc3,
	0xb7, 0x39, 0xc3, 0xab, 0x91, 0xc1, 0x15, 0x5e, 0x34, 0xd3, 0x9e, 0x64, 0xa3, 0xa2, 0xf2, 0xef,
	0xd6, 0x82, 0x38, 0xff, 0x92, 0x1b, 0x51, 0x5c, 0xa2, 0xf7, 0xae, 0x81, 0x47, 0x0b, 0x34, 0xf5,
	0x63, 0x33, 0x83, 0x37, 0xee, 0x87, 0x64, 0xf8, 0x2b, 0xce, 0xf0, 0x42, 0xa4, 0xf7, 0xf6, 0x3e,
	0x8b, 0xc6, 0x1a, 0xbe, 0x0e, 0x80, 0xf0, 0x13, 0xc4, 0xe9, 0x7f, 0xf9, 0x5a, 0x7c, 0x86, 0x5c,
	0xe2, 0x7e, 0x86, 0x9b, 0x3e, 0x8d, 0x56, 0x43, 0xe1, 0x5f, 0x7a, 0xc0, 0xf0, 0x07, 0x80, 0xe7,
	0xd7, 0xf8, 0xb1, 0x5c, 0x53, 0x9b, 0xa2, 0x5e, 0x0b, 0xc0, 0xbf, 0xfc, 0x80, 0x19, 0xfd, 0x4a,
	0x64, 0x50, 0xc5, 0x87, 0xab, 0x19, 0x42, 0xa9, 0x5b, 0x31, 0x02, 0x67, 0xf0, 0x13, 0x5c, 0x98,
	0x0f, 0x13, 0xef, 0x30, 0xdd, 0x69, 0x35, 0xf0, 0xeb, 0x39, 0x88, 0xc2, 0xf4, 0x8e, 0x7f, 0x10,
	0x87, 0x4f, 0x72, 0x0e, 0x49, 0x72, 0xd5, 0xe3, 0xc0, 0x82, 0x38, 0x66, 0xe5, 0x27, 0xf8, 0x16,
	0x02, 0xb8, 0x05, 0x71, 0xf9, 0x14, 0xe7, 0xf2, 0x14, 0x91, 0xaa, 0x6a, 0xb9, 0x6e, 0x40, 0x4c,
	0xc5, 0x2f, 0x37, 0x86, 0x71, 0xc2, 0x4f, 0x3f, 0x60, 0x01, 0xe9, 0xa3, 0x6d, 0x15, 0x7c, 0x56,
	0xc5, 0xcf, 0xc7, 0x82, 0x38, 0xbc, 0xf2, 0x80, 0xf9, 0xc6, 0x95, 0xc8, 0xa0, 0xcf, 0xd2, 0x70,
	0x8f, 0xaf, 0x18, 0xd5, 0xea, 0x50, 0x13, 0xfc, 0x19, 0xae, 0xcb, 0x16, 0xd6, 0x47, 0xea, 0x3b,
	0x48, 0xb6, 0x3e, 0xcb, 0x67, 0x76, 0x2e, 0xe2, 0xbf, 0x72, 0x8c, 0x7b, 0x29, 0x84, 0x68, 0xba,
	0xd5, 0x04, 0xfa, 0xc6, 0x0f, 0xc6, 0x44, 0x4a, 0x42, 0x5f, 0x44, 0x0d, 0x83, 0xf9, 0x04, 0xc7,
	0x6c, 0x90, 0x31, 0x57, 0xbf, 0xef, 0xca, 0xb7, 0x7a, 0xc8, 0xf1, 0xfe, 0xd4, 0x1e, 0x26, 0x99,
	0x9d, 0x7b, 0xe1, 0x34, 0x84, 0xb0, 0x39, 0xbd, 0x23, 0xe3, 0x1f, 0x02, 0xfb, 0x43, 0x8e, 0x7d,
	0x82, 0x10, 0xf6, 0xf5, 0x08, 0xe2, 0x87, 0x01, 0xbe, 0xc9, 0x81, 0xf7, 0x00, 0x88, 0x1f, 0xdf,
	0x31, 0x93, 0x0e, 0x01, 0x7c, 0x8b, 0x47, 0x29, 0x39, 0xd2, 0x73, 0x09, 0x0e, 0xfc, 0x6d, 0x56,
	0x57, 0xd9, 0x85, 0x7b, 0x58, 0x30, 0xf6, 0x30, 0xec, 0x7e, 0xe4, 0x57, 0x9e, 0x43, 0x31, 0x60,
	0x0e, 0x83, 0xfd, 0x31, 0xc7, 0x3e, 0x4b, 0x64, 0x0b, 0xd6, 0x89, 0x5e, 0xae, 0xd9, 0x4d, 0x95,
	0x92, 0x43, 0x0e, 0x31, 0x0c, 0x83, 0x9f, 0xf8, 0x06, 0xe7, 0xd6, 0xa3, 0xe7, 0x2e, 0xc3, 0x60,
	0x7f, 0xca, 0xb1, 0xa8, 0x33, 0xc5, 0xb2, 0x2f, 0x46, 0x87, 0x81, 0xfe, 0x8c, 0x43, 0x73, 0x50,
	0xb7, 0x9f, 0x39, 0xfa, 0x89, 0xaa, 0xe1, 0x51, 0x85, 0x17, 0x7b, 0x87, 0xe0, 0xf0, 0x73, 0x1e,
	0x7f, 0xe7, 0x22, 0xfe, 0x6f, 0x67, 0x20, 0xe9, 0x9b, 0xe7, 0xdf, 0x3b, 0xe1, 0xb6, 0x88, 0x25,
	0xfc, 0x10, 0xbc, 0x7e, 0xc1, 0x23, 0xf0, 0x5d, 0x32, 0x75, 0xe4, 0xba, 0x4d, 0x2c, 0x6f, 0x87,
	0x81, 0xbd, 0xcd, 0x95, 0x78, 0x9a, 0x2c, 0xf0, 0xef, 0x96, 0x20, 0x85, 0x56, 0xf1, 0xa6, 0xc4,
	0x30, 0xe8, 0x5f, 0x7a, 0xe9, 0xdb, 0x9c, 0x0f, 0x7d, 0x32, 0x94, 0xf2, 0xbf, 0xea, 0x8b, 0x75,
	0x86, 0xf2, 0x5e, 0xb1, 0xdd, 0x7c, 0x88, 0x48, 0x3e, 0x6c, 0xd9, 0x74, 0xeb, 0x43, 0x79, 0xab,
	0xd8, 0x6d, 0x14, 0xb2, 0xec, 0x83, 0x6b, 0x15, 0x4c, 0x39, 0xb4, 0x32, 0xbd, 0x01, 0x31, 0x0c,
	0x9b, 0x97, 0x39, 0x9b, 0x04, 0x59, 0xf2, 0xb3, 0x69, 0x55, 0x0c, 0x17, 0x8f, 0x60, 0x8c, 0xa1,
	0x4c, 0x28, 0x36, 0x1b, 0x6f, 0xd2, 0x19, 0x93, 0xfa, 0x50, 0x60, 0xb1, 0xcf, 0x80, 0x0d, 0xe9,
	0x87, 0x62, 0x10, 0x53, 0x29, 0x93, 0x61, 0xb0, 0x62, 0x77, 0x89, 0x91, 0x8b, 0x46, 0xcd, 0xc4,
	0x0f, 0xbc, 0xdf, 0xf1, 0xe2, 0xf9, 0x34, 0x67, 0xf1, 0x7c, 0xfb, 0xd3, 0x32, 0xfe, 0x45, 0x38,
	0x5f, 0x05, 0xc3, 0x30, 0x11, 0x1b, 0xcd, 0xa5, 0x48, 0xbf, 0x6f, 0xb3, 0xe9, 0x14, 0x83, 0x33,
	0xc3, 0xd6, 0xd7, 0xd0, 0xcd, 0x8a, 0x36, 0x2c, 0xd7, 0xcf, 0x3c, 0xe8, 0xf2, 0x6b, 0x8c, 0xa8,
	0x43, 0x87, 0xa4, 0xcf, 0xb6, 0xd1, 0x8e, 0x43, 0x3f, 0x9c, 0xa6, 0x31, 0xcd, 0x2c, 0x0f, 0xe5,
	0x9d, 0xbf, 0xc3, 0xd1, 0xcf, 0x90, 0x45, 0x44, 0xe3, 0xae, 0x0d, 0x72, 0x1f, 0x1a, 0xf8, 0x29,
	0xe9, 0x30, 0xf8, 0x57, 0x1f, 0x78, 0x31, 0x09, 0xf1, 0x10, 0x11, 0x5b, 0xf6, 0x90, 0xd0, 0xcf,
	0x3d, 0xf0, 0x62, 0xa9, 0x1f, 0xca, 0xbe, 0xe0, 0x1f, 0x86, 0xc1, 0xef, 0x3f, 0x60, 0xc9, 0xf4,
	0x33, 0xf4, 0x8b, 0x3f, 0x0f, 0x3f, 0xb4, 0x57, 0x7d, 0xbe, 0xed, 0xce, 0x65, 0xbe, 0x9f, 0xa8,
	0xae, 0xe1, 0xd6, 0x87, 0x1a, 0xfc, 0x77, 0xdb, 0x86, 0xab, 0xc0, 0x56, 0xd0, 0xf1, 0xd1, 0xe7,
	0x30, 0xf8, 0xdf, 0xe3, 0xf8, 0x27, 0xc9, 0x0c, 0x6a, 0xef, 0xd6, 0x1d, 0x75, 0x43, 0x5d, 0x1f,
	0x06, 0xf9, 0x05, 0x2e, 0x76, 0x07, 0x72, 0x63, 0x18, 0xe4, 0x1f, 0xf4, 0x43, 0x6e, 0x0e, 0x83,
	0xfc, 0x43, 0x8e, 0xbc, 0x43, 0xa6, 0x1b, 0xde, 0x51, 0xc9, 0xcd, 0x3e, 0x27, 0x9f, 0xf4, 0x58,
	0xa3, 0xfb, 0x18, 0x73, 0x93, 0x4c, 0x36, 0x54, 0x7a, 0x44, 0x16, 0x8c, 0xf9, 0x06, 0x3f, 0x10,
	0x88, 0x90, 0xd1, 0x63, 0xfd, 0x2c, 0x98, 0x5e, 0x1c, 0x5e, 0x6e, 0x90, 0x09, 0xf6, 0x07, 0x0d,
	0x82, 0x21, 0xdf, 0xf2, 0x4e, 0x8c, 0x26, 0x9d, 0xd6, 0x21, 0x7e, 0xee, 0x1e, 0x8c, 0xf9, 0x36,
	0x17, 0x8b, 0x7e, 0x42, 0x8a, 0x83, 0x35, 0xd8, 0x41, 0x58, 0x20, 0xf0, 0x3b, 0xde, 0xe1, 0xea,
	0x4c, 0x83, 0x1d, 0x76, 0xe3, 0xf2, 0x0c, 0xc6, 0x7d, 0xd7, 0x3b, 0xbe, 0x01, 0x8b, 0x8b, 0x33,
	0x91, 0x40, 0xd4, 0xf7, 0xbc, 0x43, 0xc2, 0xa5, 0x06, 0x3b, 0x69, 0x32, 0x75, 0xc7, 0xa5, 0xdf,
	0x75, 0x52, 0x3a, 0x27, 0x98, 0xc5, 0xf7, 0xb9, 0xa6, 0x74, 0x60, 0xfc, 0xca, 0xb6, 0x7e, 0x32,
	0x84, 0x7d, 0xda, 0xc7, 0x9a, 0xb3, 0x7c, 0x28, 0xd5, 0xb6, 0xac, 0x21, 0x24, 0xfe, 0x81, 0xb7,
	0xb5, 0x2e, 0x54, 0x40, 0x5a, 0xcb, 0x35, 0xaa, 0x46, 0x99, 0x85, 0xce, 0x40, 0xac, 0x38, 0x91,
	0xb9, 0x47, 0x16, 0xbc, 0xcf, 0x85, 0x79, 0x46, 0x13, 0x88, 0x7d, 0x93, 0xe7, 0x33, 0xed, 0x6f,
	0x8f, 0x79, 0x46, 0xf3, 0x74, 0xbb, 0xac, 0xb7, 0xad, 0x7a, 0x1d, 0x6c, 0xd7, 0x6a, 0x06, 0xb3,
	0x7b, 0x8b, 0x8b, 0x82, 0xfa, 0xfb, 0xf3, 0xd1, 0x40, 0xa0, 0xc8, 0x46, 0x9f, 0x84, 0xd2, 0xbd,
	0x23, 0x1b, 0x0d, 0x44, 0x8a, 0x5c, 0xf4, 0x2e, 0x21, 0x8d, 0x76, 0xf1, 0x1b, 0x08, 0xfb, 0x09,
	0x97, 0xf4, 0x23, 0x44, 0xe2, 0x30, 0xfa, 0xd2, 0x55, 0x75, 0xb5, 0x5a, 0x30, 0x58, 0x1c, 0xb6,
	0x40, 0x16, 0xe8, 0x7b, 0x5b, 0x1b, 0xcd, 0xb4, 0xff, 0x8a, 0x09, 0xbb, 0xb8, 0x16, 0xcc, 0xe9,
	0x67, 0x5e, 0x52, 0xdf, 0xf3, 0xc2, 0x16, 0x8f, 0x95, 0x20, 0x45, 0xe5, 0x9b, 0xfb, 0xf0, 0x53,
	0xfa, 0x73, 0xce, 0xf2, 0x62, 0xa4, 0xcf, 0x1b, 0xcd, 0x68, 0x9c, 0x5c, 0xee, 0x72, 0x30, 0x95,
	0x9f, 0x17, 0x07, 0x73, 0x16, 0x09, 0xeb, 0x16, 0xb9, 0xda, 0xc3, 0x43, 0xaf, 0x43, 0x0e, 0xae,
	0xd2, 0x63, 0xe0, 0x40, 0x3e, 0x6f, 0xbf, 0x26, 0xb2, 0xb0, 0xe5, 0x43, 0x0d, 0x6a, 0x4b, 0xbc,
	0xa0, 0xfb, 0x8e, 0xbd, 0x9e, 0x27, 0xb2, 0xf1, 0xeb, 0x64, 0x19, 0xb6, 0xeb, 0x88, 0x76, 0x62,
	0x98, 0xec, 0xef, 0x63, 0x38, 0x1e, 0xe4, 0xb3, 0xa1, 0xd0, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xb8, 0xdd, 0xb8, 0x80, 0x62, 0x48, 0x00, 0x00,
}

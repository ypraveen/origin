// Code generated by protoc-gen-go.
// source: action.proto
// DO NOT EDIT!

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	action.proto
	analytics_policy.proto
	analytics_profile.proto
	anomalyzer.proto
	apic_objects.proto
	apic.proto
	application_persistence_profile.proto
	application_policy.proto
	application_policy_runtime.proto
	application_profile.proto
	application.proto
	auth.proto
	backup.proto
	cloud_objects.proto
	cloud_properties.proto
	clustering.proto
	common.proto
	compression_profile.proto
	connections.proto
	controller_properties.proto
	debug_controller.proto
	debug_se.proto
	disk_size.proto
	dos.proto
	health_monitor.proto
	health_monitor_runtime.proto
	health_score.proto
	hsm.proto
	httpcache.proto
	http_codes.proto
	analysis.proto
	analytics_profile_internal.proto
	application_policy_internal.proto
	application_profile_internal.proto
	cli_internal.proto
	cloud_connector_message.proto
	cluster_version.proto
	connpool.proto
	consistency_check.proto
	django_internal.proto
	dp_hb.proto
	fileservice.proto
	flowtable.proto
	health_monitor_internal.proto
	job_db.proto
	l4_internal.proto
	l7_internal.proto
	log_internal.proto
	network_policy_internal.proto
	network_profile_internal.proto
	pool_internal.proto
	se_agent_runtime.proto
	secure_channel.proto
	se_res_mgr.proto
	se_shared_db.proto
	se_state_cache.proto
	ssl_internal.proto
	tech_support.proto
	vs_internal.proto
	ipam_profile.proto
	l4_runtime.proto
	l7_runtime.proto
	license.proto
	log_common.proto
	match.proto
	metrics_mgr_runtime.proto
	metrics.proto
	metrics_query.proto
	metrics_stats.proto
	micro_service.proto
	network_policy.proto
	network_policy_runtime.proto
	network_profile.proto
	network.proto
	options.proto
	os_lbprov_plugin.proto
	policy_stats.proto
	pool.proto
	pool_runtime.proto
	rate.proto
	rebalance.proto
	resource_usage.proto
	se_group.proto
	se_group_runtime.proto
	se_log.proto
	se_properties.proto
	se.proto
	se_runtime.proto
	server_autoscale.proto
	snmp.proto
	ssl_cipher_enums.proto
	ssl.proto
	system.proto
	upgrade.proto
	vi_mgr_common.proto
	vi_mgr_runtime.proto
	vrf.proto
	vs_datascript.proto
	vs.proto
	vs_runtime.proto
	alerts.proto
	apic_events.proto
	cloud_events.proto
	cluster_events.proto
	config_events.proto
	events_filter.proto
	events.proto
	healthscore_events.proto
	metric_events.proto
	network_events.proto
	res_mgr_events.proto
	res_monitor_events.proto
	se_events.proto
	semgr_events.proto
	ssl_events.proto
	upgrade_events.proto
	vinfra_events.proto
	vs_mgr_events.proto
	apitest.proto
	datastore.proto
	fault_injection.proto
	job.proto
	lua_scripts.proto
	robot_topology.proto
	se_dp_rpc.proto
	taskqueue.proto
	test_log.proto
	test.proto
	transaction.proto
	unittest.proto
	vcenter_emulator.proto
	alert_mgr_rpc.proto
	analytics_profile_rpc.proto
	apic_agent_rpc.proto
	application_persistence_profile_rpc.proto
	application_policy_rpc.proto
	application_profile_rpc.proto
	auth_rpc.proto
	autoscale_mgr_rpc.proto
	cloud_connector_rpc.proto
	controller_worker_rpc.proto
	crud_rpc.proto
	debug_controller_rpc.proto
	filters_rpc.proto
	health_monitor_rpc.proto
	license_rpc.proto
	match_rpc.proto
	metrics_agent_rpc.proto
	metrics_mgr_rpc.proto
	metrics_query_rpc.proto
	network_policy_rpc.proto
	network_profile_rpc.proto
	network_rpc.proto
	pool_rpc.proto
	res_monitor_rpc.proto
	rpc_common.proto
	rpc_request.proto
	rpc_response.proto
	se_agent_rpc.proto
	se_log_agent_rpc.proto
	se_mgr_rpc.proto
	se_res_mgr_rpc.proto
	server_autoscale_rpc.proto
	se_supervisor_rpc.proto
	snmp_mib_rpc.proto
	ssl_rpc.proto
	sysconf_rpc.proto
	tcp_rpc.proto
	transaction_stats_rpc.proto
	vcenter_mgr_rpc.proto
	vi_mgr_cli_rpc.proto
	vi_mgr_rpc.proto
	vrf_rpc.proto
	vs_datascript_rpc.proto
	vs_rpc.proto
	syserr.proto
	webapp_err.proto

It has these top-level messages:
	URIParamToken
	URIParam
	URIParamQuery
	HTTPRedirectAction
	HTTPHdrValue
	HTTPHdrData
	HTTPCookieData
	HTTPHdrAction
	HTTPRewriteURLAction
	PoolServer
	HTTPSwitchingAction
	HTTPRewriteLocHdrAction
	ClientLogFilter
	FullClientLogs
	MetricsRealTimeUpdate
	ClientInsightsSampling
	AnalyticsPolicy
	AnalyticsProfile
	AnomalyzerEWMA
	AnomalyEventDetails
	MoBase
	AaaUser
	VnsCIf
	VnsRsCIfAtt
	VnsRtLIfCtxToLIf
	VnsRsLIfCtxToLIf
	FvSubnet
	VnsRsLIfCtxToBD
	VnsLIfCtx
	VnsRsLDevCtxToLDev
	VnsLDevCtx
	VnsCMgmt
	VnsCCred
	VnsCCredSecret
	VnsCDev
	VnsRsALDevToDomP
	VnsRsMDevAtt
	VnsLDevVip
	FvTenant
	CompDom
	FaultInst
	VnsRsMetaIf
	VnsLIf
	VnsGraphInst
	VnsAbsGraph
	VnsAbsTermNodeCon
	VnsAbsTermNodeProv
	VnsAbsTermConn
	VnsAbsNode
	VnsRsNodeToMFunc
	VnsAbsFuncConn
	VnsAbsFuncCfg
	VnsAbsFolder
	VnsAbsParam
	VnsAbsConnection
	VnsRsAbsConnectionConns
	VnsNodeInst
	VnsFuncConnInst
	VnsRsConnToLIf
	PolUni
	VnsRsMConnAtt
	VnsVDev
	VnsRsVIfToLIf
	VnsVConn
	VnsVEncapAsc
	VnsVGrp
	FvBD
	VzBrCP
	FvAEPg
	FvStCEp
	FvCEp
	VnsMDev
	VnsRsLdevIfToLDev
	VzRsSubjGraphAtt
	FvStIp
	VmmCtrlrP
	FvIp
	Imdata
	CIFTable
	ApicAgentInternal
	Cif
	Lif
	APICLifsRuntime
	APICNetworkRel
	ApicVSPlacementReq
	APICTransaction
	APICClearReq
	APICTransactionFlap
	APICTransactionFlapParams
	APICGraphInstances
	APICTenants
	APICVmmDomains
	APICEpgs
	APICEpgAllTenantFilter
	APICEpgFilter
	APICEpgEps
	ApicLogin
	ApicCliLogin
	ApicDevicePkgVer
	APICDisableEnableVsParams
	IPPersistenceProfile
	HttpCookiePersistenceProfile
	AppCookiePersistenceProfile
	HdrPersistenceProfile
	ApplicationPersistenceProfile
	HTTPSecurityAction
	HTTPSecurityRule
	HTTPSecurityPolicy
	HTTPRequestRule
	HTTPRequestPolicy
	HTTPResponseRule
	HTTPResponsePolicy
	HTTPPolicySet
	HTTPPolicies
	HTTPPolicySetStats
	SSLClientRequestHeader
	SSLClientCertificateAction
	HTTPApplicationProfile
	ApplicationProfile
	DosRateLimitProfile
	Application
	LdapDirectorySettings
	LdapUserBindSettings
	LdapAuthSettings
	AuthProfileHTTPClientParams
	AuthProfile
	HTTPClientAuthenticationParams
	Backup
	VCenterConfiguration
	OpenStackRoleMapping
	OpenStackConfiguration
	CloudStackConfiguration
	MarathonConfiguration
	MarathonSeDeployment
	SSHSeDeployment
	DockerRegistry
	FeProxyRoutePublishConfig
	MesosSeResources
	NuageSDNController
	MesosAttribute
	MesosConfiguration
	APICConfiguration
	AwsZoneConfig
	AwsConfiguration
	VCloudAirConfiguration
	Cloud
	CloudRuntime
	CloudStatus
	CloudMeta
	CloudFlavor
	CC_AgentProperties
	CC_Properties
	Hypervisor_Properties
	CloudInfo
	CloudProperties
	ClusterNode
	Cluster
	ClusterState
	ClusterNodeState
	ClusterOperationalStatus
	ClusterServiceState
	ClusterRuntime
	ClusterReboot
	ClusterNodeReboot
	Port
	PortRange
	RepeatableString
	Tag
	TenantConfiguration
	Tenant
	IpAddrRange
	HTTPLocalFile
	VoidResponse
	NullObj
	PBDescription
	TimeStamp
	OperationalStatus
	ConfigurationStatus
	BaseObjectRuntime
	VCenterDefaults
	AppInfo
	PoolUpdate
	ServerFilter
	IpAddrPort
	CompressionFilter
	CompressionProfile
	EstablishedConnections
	ConnectionTable
	ControllerProperties
	SeMgrDebugFilter
	VsDebugFilter
	MetricsMgrDebugFilter
	HSMgrDebugFilter
	AlertMgrDebugFilter
	AutoScaleMgrDebugFilter
	CloudConnectorDebugFilter
	MesosMetricsDebugFilter
	DebugFilterUnion
	DebugController
	DebugVsDataplane
	DebugVirtualServiceCaptureProgress
	DebugVirtualServiceCaptureMetadata
	DebugVirtualServiceCapture
	DebugIpAddr
	DebugVirtualServiceSeParams
	DebugVirtualService
	DebugSeCpuShares
	DebugSeDataplane
	DebugSeAgent
	DebugServiceEngine
	PartitionInfo
	OverallInfo
	DiskUsage
	AttackMetaData
	MaliciousIpInfo
	DosAttackEventDetails
	DosMetrics
	DosThreshold
	DosThresholdProfile
	HealthMonitorTcp
	HealthMonitorUdp
	RepeatableHttpResponse
	HealthMonitorHttp
	HealthMonitorExternal
	HealthMonitorDNS
	HealthMonitor
	ServerHealthMonitorCounter
	ServerHealthMonitorRuntime
	ServerHMStatRuntime
	HealthMonitorRuntime
	HealthMonitorStatRuntime
	LcEntry
	LeastConnectionStat
	WrrEntry
	WrrStat
	AlgoStatRuntime
	HealthScoreEntity
	ControllerResourcesScoreData
	ControllerAnomalyScoreData
	ControllerAnomalyScore
	ControllerResourcesScore
	ServiceEnginePerformanceScoreData
	ServiceEngineResourcesScoreData
	ServiceEngineAnomalyScoreData
	ServiceEngineAnomalyScore
	ServiceEngineResourcesScore
	ServerPerformanceScoreData
	ServerPerformanceScore
	ServerAnomalyScoreData
	ServerAnomalyScore
	ServerResourcesScoreData
	ServerResourcesScore
	PoolPerformanceScoreData
	PoolAnomalyScoreData
	PoolResourcesScoreData
	PoolPerformanceScore
	PoolAnomalyScore
	PoolResourcesScore
	VirtualServicePerformanceScoreData
	VirtualServiceAnomalyScoreData
	VirtualServiceResourcesScoreData
	VirtualServiceAnomalyScore
	VirtualServicePerformanceScore
	VirtualServiceResourcesScore
	ApplicationAnomalyScoreData
	ApplicationPerformanceScoreData
	ApplicationResourcesScoreData
	ApplicationAnomalyScore
	ApplicationPerformanceScore
	ApplicationResourcesScore
	HealthScoreQuery
	HealthScoreIndicator
	HealthScoreIndicatorData
	HealthScorePerformanceData
	HealthScoreAnomalyData
	HealthScoreResourcesData
	HealthScoreSecurityData
	ServiceEngineDosAttackLevel
	ServiceEngineDosAttackLevelData
	DosAttackLevelData
	SslScoreData
	HealthScoreData
	HealthScoreMetric
	HealthScoreTypeContributorData
	HealthScoreHeader
	HealthScoreDataSeries
	HealthScoreQueryResponse
	HSMThalesNetHsm
	HSMThalesRFS
	HSMSafenetLuna
	HardwareSecurityModule
	HardwareSecurityModuleGroup
	HttpCacheObjFilter
	HttpCacheObj
	HttpCacheStats
	HttpCacheStatsObj
	HttpCacheETypeStats
	HttpCacheStat
	HttpCacheStatsDetail
	HttpCacheConfig
	HttpCache
	VsSePlacementAnalysis
	VsPlacementAnalysis
	ConfigAnalysis
	PoolOperationalAnalysis
	ServerOperationalAnalysis
	VsSeOperationalAnalysis
	VsOperationalAnalysis
	VsTrafficAnalysis
	VsSeMetricsAnalysis
	VsMetricsAnalysis
	VsAnalysisTask
	VirtualServiceAnalysis
	SeVsPlacementAnalysis
	SePlacementAnalysis
	SeVsOperationalAnalysis
	SeOperationalAnalysis
	SeTrafficAnalysis
	SeAnalysisTask
	ServiceEngineAnalysis
	VsPlacementAnalysisSummary
	VsConfigAnalysisSummary
	VsOperationalAnalysisSummary
	VirtualServiceAnalysisSummary
	SePlacementAnalysisSummary
	SeConfigAnalysisSummary
	SeOperationalAnalysisSummary
	ServiceEngineAnalysisSummary
	CloudSeAnalysis
	CloudHostAnalysis
	CloudAnalysis
	AnalyticsProfileInternal
	HTTPPolicySetInternal
	ApplicationProfileInternalRtmL4
	ApplicationProfileInternal
	TerminalSettings
	DebugShowSe
	DebugShowVirtualService
	SwitchToTenant
	SwitchToCloud
	TechSupportFilter
	OpenstackLogin
	AWSLogin
	CloudStackLogin
	MarathonLogin
	MesosLogin
	VCALogin
	CloudHostSvc
	CloudHost
	CloudAZ
	CloudRegion
	CC_Notifier
	CC_RefCnt
	CC_Image
	CC_Init
	CC_Cron
	CC_Discovery
	CC_Health
	CC_BGWorker
	CC_Format
	CC_MgmtNw
	CC_OpenStack
	CC_AWS
	CC_CloudStack
	CC_VCloudAir
	CC_Mesos
	CC_AgentInternal
	CC_VnicInfo
	CloudConnectorStatus
	CloudConnectorUser
	ClusterVersion
	ControllerVersion
	SeVersion
	ConnpoolFilter
	ConnpoolStats
	ConnectionItem
	ConnpoolServerInternal
	ConnpoolConfig
	ConnpoolInternal
	ConfigConsistencyCheckStatus
	ConsistencyCheckStatus
	ConsistencyCheckFilter
	Permission
	Role
	UserRole
	User
	AviFlowHdr
	AviFlowDelHdr
	AviPoolSdbState
	AviHmHdr
	AviIpcHdr
	FileServiceRequest
	FileServiceCopy
	ExportConfiguration
	ExportVirtualService
	ImportConfiguration
	ShowConfiguration
	GenerateAviConfigFromBigIP
	ExportSeOVA
	FlowtableIntfFilter
	FlowtableEntryFilter
	IndivdispatcherRuntime
	DispatcherStatRuntime
	VshashoneRuntime
	VshashshowRuntime
	RteringStatRuntime
	DispatcherStatClear
	DispatcherTableDumpClear
	DispatcherStatClearRuntime
	DispatcherEntryClearRuntime
	DispatcherEntryRuntime
	DispatcherOneTableRuntime
	DispatcherTableDumpRuntime
	DispatcherRemoteTimerListRuntime
	DispatcherRemoteTimerListDumpRuntime
	DispatcherSehmprobetempdisableRuntime
	HealthMonitorInternal
	JobEntry
	VstypeFilter
	ListeningsockFilter
	CorenumFilter
	CoreFilter
	IpStatRuntime
	ArpStatRuntime
	IcmpHist
	IcmpStat
	IcmpStatRuntime
	MbStatRuntime
	IpstkQStatsRuntime
	MallocStatEntry
	MallocStatRuntime
	ShMallocStatEntry
	ShMallocStatRuntime
	CpuUsageRuntime
	ProcCpuStat
	CpuStatRuntime
	CpuUsageEntry
	AllocInfo
	PageStats
	Jestats
	Mallstats
	MemConfig
	MemProto
	MeminfoRuntime
	RouteEntry
	RouteTableRuntime
	InterfaceStats
	IpInterface
	VnicInfo
	InterfaceRuntime
	ArpEntry
	ArptableRuntime
	ArpTableFilter
	ConnectionClearFilter
	ConnectionFilter
	ConnectionEntry
	ConnectionDumpRuntime
	SimpleconnEntry
	SocketBufferInfo
	SocketInfo
	EtherHeader
	InpcbInfo
	InpcbProxyInfo
	InpcbFastInfo
	SackBlk
	SackHint
	CcInfo
	TcpcbInfo
	TcptwInfo
	DetailedConnEntry
	TcpConnRuntime
	TcpConnRuntimeDetail
	RatelimiterStatRuntime
	SeDosStatRuntime
	SeMemDistRuntime
	SEFaultInjectExhaustParam
	SeFaultInjectExhaustM
	SeFaultInjectExhaustMcl
	SeFaultInjectExhaustMclSmall
	SeFaultInjectExhaustConn
	SeReservedVs
	ContainerInternal
	MicroServiceInternal
	SeMicroService
	ContainerDetail
	MicroServiceDetail
	ContainerTaskIdFilterKey
	SeMicroServiceFilter
	MicroServiceGroupDetail
	ConnpoolGlobalStats
	CacheGlobalStats
	CacheLocalStats
	L7GlobalStatsRuntime
	SeAuthStatsRuntime
	SeLogStatsRuntime
	LogControllerMapping
	NetworkSecurityPolicyInternal
	NetworkProfileInternal
	ServerSlowStart
	ServerStats
	ServerInternal
	PersistenceFilter
	PersistenceInternalEntry
	PersistenceInternal
	PersistenceHandleInternal
	PoolLbState
	ServerRefCnt
	HealthMonitorRefCnt
	PoolRefCnt
	PoolInternal
	PoolDebug
	SeAgentVnicNwRuntime
	SeAgentVnicRuntime
	SeAgentRoute
	SeAgentVrfRuntime
	SeAgentVnicDBRuntime
	SeAgentGraphDBNodeConfig
	SeAgentGraphDBNodeTxnDetail
	SeAgentGraphDBNodeTxnStats
	SeAgentGraphDBNodeStats
	SeAgentGraphDBNodeObject
	SeAgentGraphDBNodeInfo
	SeAgentGraphDBRuntime
	SeAgentSharedDBStats
	SeAgentStateRuntime
	SecureChannelMapping
	SecureChannelToken
	SecureChannelAvailableLocalIPs
	SeResourceVnic
	SeResourceProto
	SeResourceCliProto
	SeCreatePendingProto
	RmVrfProto
	SeResourceConsumedProto
	VsProtocol
	CreateInfo
	ModVnicInfo
	VnicIpInfo
	PlacementOpInfo
	PlacementHistory
	SeConsumerProto
	SeConsumerCliProto
	SeUniAdminInfo
	SeVipInfo
	ConVipInfo
	SeVipProto
	ResourceStatus
	ConsumerStatus
	PlacementStatus
	RmResMetrics
	RmConMetrics
	RmSeGrpMetrics
	RmMetrics
	SeResourceManagerProtoRuntime
	SeResourceManagerProto
	SeGarbageCollectorJob
	SeGeneratorJob
	TickGeneratorJob
	SeResourceFilter
	SeConsumerFilter
	SeVipFilter
	PlacementStatusFilter
	PlacementVrfFilter
	CandidateSeHostFilter
	IpPersistentKey
	SslKey
	SdbKey
	IpPersistentValue
	SslValue
	SdbValue
	SdbEntry
	SharedDbStatsClear
	SharedDbStats
	SCKey
	SCValue
	SSLProfileInternal
	SSLKeyAndCertificateCliRequest
	TechSupportFull
	TechSupportSystem
	TechSupportVinfra
	TechSupportDebugLogs
	TechSupportVirtualService
	TechSupportServiceEngine
	SestatusInternal
	ApplicationProfileRefCnt
	ServiceRefCnt
	NetworkProfileRefCnt
	HTTPRequestPolicyPoolRefCnt
	HTTPPolicySetRefCnt
	VirtualServiceRefCnt
	ListeningSocket
	SSLStatsInternal
	SeLbEntry
	CoreLbEntry
	SeLbChEntry
	VirtualServiceInternal
	CpsDoserFilter
	KeyvalInternalEntry
	KeyvalInternal
	KeyvalCacheInternal
	KeyvalHandleInternal
	KeyvalSummaryInternal
	CltrackInternalMetricsEntry
	CltrackInternalEntry
	CltrackInternal
	CltrackHandleInternal
	CltrackSummaryInternal
	ClientInternalEntry
	ClientInternal
	ClientSummaryInternal
	InfobloxProfile
	IpamProfile
	SyncacheStats
	ConnectionStats
	ConnectionDropStats
	PacketDropStats
	RxStats
	TxStats
	RetransmitStats
	SackStats
	EcnStats
	TimeoutStats
	MiscStats
	TcpStatRuntime
	TcpStatFilter
	UdpStatRuntime
	UdpStatFilter
	CpsDoserEntry
	CpsDoserStats
	VsDosStatRuntime
	L7VirtualServiceStatsRuntime
	VirtualServiceAuthServerStats
	VirtualServiceAuthStats
	SingleLicense
	ControllerLicense
	DataScriptErrorTrace
	ConnErrorInfo
	ApplicationLog
	ConnectionLog
	IpAddrGroup
	KeyValue
	StringGroup
	IpAddrMatch
	PortMatch
	ProtocolMatch
	RepeatableHTTPMethod
	RepeatableHTTPVersion
	MethodMatch
	HTTPVersionMatch
	StringMatch
	PathMatch
	QueryMatch
	HdrMatch
	CookieMatch
	HostHdrMatch
	LocationHdrMatch
	HTTPStatusRange
	HTTPStatusCode
	HTTPStatusMatch
	MatchTarget
	ResponseMatchTarget
	MicroServiceGroup
	MicroServiceMatch
	DbCacheStats
	RumInternalStats
	MetricsEntityRuntime
	MetricsMgrFilter
	ServerL4MetricsObj
	VserverL4MetricsObj
	ServerL7MetricsObj
	VserverL7MetricsObj
	VmStatsObj
	SeStatsObj
	ControllerStatsObj
	MetricsTenantStatsObj
	MetricCollections
	MetricsAnomalyObj
	MetricsHealthScoreObj
	MetricsRumSamplesDimensionObj
	MetricsRumSamplesBlobObj
	MetricsRumAnalyticsObj
	MetricsRumPreaggBrowserObj
	MetricsRumPreaggUrlObj
	MetricsRumPreaggOsObj
	MetricsRumPreaggLangObj
	MetricsRumPreaggDevtypeObj
	MetricsRumPreaggCountryObj
	MetricsRumPreaggIPGroupObj
	MetricsDosAnalyticsObj
	MetricsAppInsightsObj
	MetricsServiceInsightsObj
	MetricsSourceInsightsObj
	MetricsVserverDNSObj
	MetricsServerDNSObj
	MetricStatistics
	RelationalOperatorsParams
	MetricsFilters
	MetricsDimensionData
	MetricsQuery
	MetricsQueryInfo
	MetricsQueryCollection
	MetricObjTypes
	MetricsMissingDataInterval
	MetricsDataHeader
	MetricsData
	MetricsDataSeries
	MetricsQueryResponse
	MetricsQueryCollectionResponse
	AnomalyzerQuery
	ExponentialMovingAverageCtx
	HoltWintersCtx
	AnomalyContext
	AnomalyData
	AnomalyDataSeries
	AnomalyzerQueryResponse
	MetricsEntityData
	VirtualServiceRelatedEntities
	RumSampleQuery
	RumSampleDataHeader
	HStoreData
	RumSampleData
	RumSampleDataSeries
	RumSampleQueryResponse
	ServerL4Stats
	VserverL4Stats
	ServerL7Stats
	VserverL7Stats
	SeRumInsertionStats
	RumStats
	NavigationTiming
	ResourceTiming
	VserverRum
	VserverDNSStats
	ServerDNSStats
	MicroServiceContainer
	MicroService
	NetworkSecurityPolicyActionRLParam
	NetworkSecurityMatchTarget
	NetworkSecurityRule
	NetworkSecurityPolicy
	NetworkSecurityRuleDos
	NetworkSecurityPolicyDos
	NetworkSecurityPolicyDosUnblock
	NetworkSecurityPolicyDosInfo
	NetworkSecurityPolicyStats
	NetworkSecurityPolicyDetail
	UDPFastPathProfile
	TCPFastPathProfile
	TCPProxyProfile
	NetworkProfileUnion
	NetworkProfile
	Subnet
	Network
	IpAllocInfo
	SubnetRuntime
	NetworkRuntime
	RetrieveIps
	RetrieveIpsRsp
	MetricsProviderHypervisor
	MetricRespLatencyTimeInterval
	MetricsOptions
	MetricsIndexesOption
	MetricsAnomalyzerOptions
	MetricsAnomalyModelOptions
	MetricsRuleOptions
	MetricIdOptions
	AlertOptions
	MetricsDerivationData
	IpAddr
	IpAddrPrefix
	OsLbProvPluginForm
	OsLbProvPluginDetail
	OsLbProvPluginStatus
	OsLbProvPluginsDetail
	OsLbProvAuditForm
	OsLbProvAuditDetail
	OsLbAuditReq
	OsLbAuditResp
	RuleStats
	HTTPSecurityPolicyStat
	HTTPRequestPolicyStat
	HTTPResponsePolicyStat
	HTTPPolicySetStat
	DiscoveredNetwork
	Server
	NetworkFilter
	PlacementNetwork
	PoolDownActionHTTPRedirect
	PoolDownActionHTTPLocalResponse
	PoolDownActionBackupPool
	PoolDownAction
	PoolX509Certificate
	Pool
	PoolServerState
	ServerUpdateReq
	ServerState
	ServerStateUpdateInfo
	ServerHealthMonitor
	SHMSummary
	ServerRuntimeSummary
	PoolRuntimeSummary
	ConnpoolStatsBase
	PoolStats
	CapestData
	ServerRuntimeDetail
	PoolRuntimeDetail
	PoolRuntime
	SePoolRuntimeSummary
	PoolStateDBCacheSummary
	ServerConfig
	SeServerRuntimeSummary
	ServerStateDBCacheSummary
	SeTimestampInfo
	RateProfile
	RateLimiterAction
	RateLimiterProfile
	RebalanceParams
	MemoryUsage
	CPUUsage
	SeVnicOpProto
	Host
	VcenterClusters
	VcenterHosts
	SeAutoScalePolicy
	ServiceEngineGroup
	SeCreateStats
	SeVnicStats
	ServiceEngineGroupRuntime
	BackendServerConnection
	FileInfo
	LogMessage
	LogQuery
	LogCommand
	IndexingTaskRequest
	IndexingTaskResponse
	LogOrcMessage
	SeBootupCompressionProperties
	SeBootupProperties
	AppHdr
	SeRuntimeCompressionProperties
	SeRateLimiters
	SeRuntimeProperties
	SeAgentProperties
	SeProperties
	VNICNetwork
	VNIC
	PortGroup
	SeResources
	DefaultGateway
	ConVip
	ConServer
	ConInfo
	ServiceEngine
	ServiceEngineInternal
	ServiceEngineDbExtension
	SeHbStatus
	VnicRuntime
	ServiceEngineCounters
	ServiceEngineRuntime
	ServiceEngineRuntimeSummary
	ServiceEngineRuntimeDetail
	ServiceEngineCookie
	VsMetrics
	SeMetricsFilter
	VsMetricsFilter
	ServiceEngineStateDBCacheSummary
	AutoScaleKVData
	AutoScaleOpenStackSettings
	AutoScaleAWSSettings
	AutoScaleMesosSettings
	AutoScaleLaunchConfig
	ServerAutoScalePolicy
	ServerAutoScaleOutInfo
	ServerAutoScaleInInfo
	ServerId
	ServerAutoScaleOutCompleteInfo
	ServerAutoScaleInCompleteInfo
	ServerAutoScaleFailedInfo
	IntelligentAutoScaleState
	AutoScaleState
	SnmpConfiguration
	SnmpTrapServer
	SnmpTrapProfile
	SSLVersion
	SSLRating
	SSLProfile
	SSLKeyRSAParams
	SSLKeyECParams
	SSLKeyParams
	SSLCertificateRequest
	SSLKeyAndCertificateImport
	SSLCertificateDescription
	SSLCertificate
	CertificateAuthority
	SSLKeyAndCertificate
	CRLImport
	PKIProfileImport
	CRL
	PKIProfile
	DNSConfiguration
	NTPConfiguration
	AdminAuthConfiguration
	TechSupportUploaderConfiguration
	PortalConfiguration
	EmailConfiguration
	LinuxConfiguration
	ProxyConfiguration
	SystemConfiguration
	UpgradeTask
	ControllerUpgradeState
	SystemUpgradeService
	SystemUpgradeCli
	SystemUpgradeState
	SeTask
	SeGroupStatus
	SeUpgradeErrors
	SeUpgradeStatusSummary
	SeUpgradeStatusDetail
	SeUpgradeParams
	SystemReinstallCli
	VcenterDatastore
	VIMgrIPSubnetRuntime
	VIAdminCredentials
	VcenterLogin
	VcenterLoginRsp
	VIGuestvNicIPAddr
	VIControllerVnicInfo
	VIControllerIpSubnetInfo
	VIVMInfo
	VIHostInfo
	VIClusterInfo
	VIPGInfo
	VIDCInfo
	VIValidateVcenterReq
	VIValidateVcenterRsp
	VIVmVnicInfo
	VISetMgmtIpSEReq
	VISetMgmtIpSERsp
	VISetvNicNwReq
	VISetvNicNwRsp
	VISeVmOvaParams
	VISeVmIpConfParams
	VIStartPerformanceMonitorReq
	CdpLldpInfo
	VlanRange
	InterestedVMs
	InterestedHosts
	VmwarePerfCounterInfo
	VcenterSupportedCounters
	VmwarePerfMetricId
	VcenterPerfCounter
	EntityCounters
	SEVMCreateProgress
	SEVMCreateProgressSingle
	HostInfo
	QueryHostsCapabilityReq
	QueryHostsCapabilityRsp
	VCenterNumJavaThreads
	VISubfolderFilter
	RetrieveVcenterSubfoldersReq
	SubfolderInfo
	VISubfolders
	RetrieveVcenterSubfoldersRsp
	VIDatastoreFilter
	RetrieveVcenterDatastoreReq
	DatastoreInfo
	VIDatastore
	RetrieveVcenterDatastoreRsp
	VIHostResourceFilter
	HostResourceInfo
	VIHostResources
	VINetworkSubnetFilter
	NetworkSubnetVM
	VINetworkSubnetVMs
	VIFaultInjection
	VcenterMap
	DatacenterMap
	APICMode
	VcenterCloudStatusReq
	VcenterCloudStatusRsp
	VcenterInventoryDiagReq
	VcenterHostDiag
	VcenterMgmtNwDiag
	OverlappingSubnetPair
	OverlappingSubnetInfo
	VcenterNetworkDiag
	NetworkManagerDiagReq
	NetworkManagerDiagRsp
	VcenterInventoryDiagRsp
	VIControllerIps
	VIMgrInterestedEntity
	VIMgrGuestNicRuntime
	SeVmPowerState
	VIMgrSEVMRuntime
	VIMgrVMRuntime
	VIMgrHostRuntime
	VIMgrNWRuntime
	VIMgrClusterRuntime
	VIMgrDCRuntime
	VIMgrControllerRuntime
	VIMgrVcenterRuntime
	VIRedisDatastoreFilter
	VIDatastoreContents
	BgpPeer
	BgpConfig
	StaticRoute
	VrfContext
	VSDataScript
	VSDataScriptSet
	VSDataScripts
	VsSeVnic
	SeList
	VirtualServiceResource
	VsResProfile
	PerformanceLimits
	Service
	ServicePoolSelector
	VirtualService
	TLSTicket
	VirtualServiceSe
	VsApicExtension
	CurSeInfo
	VsScaleoutParams
	VsScaleinParams
	VsMigrateParams
	VsSeInitialPlacementParams
	VsResyncParams
	VsInitialPlacementParams
	VsWarmRestartParams
	VirtualServiceLogmgrMap
	VirtualServiceDbExtension
	VsCreateSeParams
	ScaleStatus
	VirtualServiceRuntime
	VsSeAssigned
	VirtualServiceRuntimeSummary
	VirtualServiceRuntimeDetail
	SeParamsFilter
	SeVsRuntimeSummary
	VirtualServiceStateDBCacheSummary
	VsScaleoutSe
	VsScaleoutHost
	VsScaleoutList
	VsCandidateSe
	VsCandidateHost
	VsCandidateSeHostList
	VsPlacementResolutionInfo
	VsRedisMap
	AlertFilter
	AlertRuleEvent
	AlertMetricThreshold
	AlertRuleMetric
	AlertRule
	AlertObjectList
	AlertSyslogServer
	AlertSyslogConfig
	AlertEmailConfig
	AlertScriptConfig
	ActionGroupConfig
	AlertConfig
	MetricLog
	Alert
	AlertScriptParam
	AlertMgrParams
	ApicAgentGenericEventDetails
	OpenStackClusterSetup
	OpenStackSeVmChange
	OpenStackVnicChange
	OpenStackIpChange
	OpenStackSyncServices
	OpenStackLbProvAuditCheck
	OpenStackLbPluginOp
	AWSSetup
	VCASetup
	CloudSeVmChange
	CloudVnicChange
	CloudIpChange
	CloudSyncServices
	CloudVipUpdate
	CloudDnsUpdate
	CloudStackSetup
	CloudGeneric
	CloudHealth
	CloudTenantCleanup
	CloudTenantsDeleted
	CloudClusterVip
	MarathonServicePortConflict
	MesosSetup
	ClusterNodeAddEvent
	ClusterNodeRemoveEvent
	ClusterServiceFailedEvent
	ClusterLeaderFailoverEvent
	ClusterWarmRebootEvent
	ConfigCreateDetails
	ConfigUpdateDetails
	ConfigDeleteDetails
	ConfigUserLogin
	ConfigUserLogout
	ConfigActionDetails
	ConfigUserPasswordChangeRequest
	ConfigEventFilter
	EventFilter
	EventContextSystemUuidPrefix
	EventContextAppUuidPrefix
	EventDetails
	EventLog
	EventApiInfo
	EventLogAlertScriptParams
	EventGenParams
	HealthScoreDetails
	MetricThresoldUpDetails
	LicenseExpiryDetails
	LicenseDetails
	AvgUptimeChangeDetails
	MetricsDbDiskEventDetails
	NetworkSubnetClash
	SummarizedSubnetInfo
	SummarizedInfo
	RmSpawnSeEventDetails
	RmDeleteSeEventDetails
	RmModifyVnic
	RmAddVnic
	RmModifyNetworksEventDetails
	RmAddNetworksEventDetails
	RmBindVsSeEventDetails
	RmUnbindVsSeEventDetails
	RmRebootSeEventDetails
	RmSeBootupFailEventDetails
	RmSeIpFailEventDetails
	HostUnavailEventDetails
	AllSeUpgradeEventDetails
	SeUpgradeEventDetails
	SeUpgradeScaleoutEventDetails
	SeUpgradeScaleinEventDetails
	SeUpgradeMigrateEventDetails
	SeUpgradeVsDisruptedEventDetails
	RebalanceScaleoutEventDetails
	RebalanceScaleinEventDetails
	RebalanceMigrateEventDetails
	SePoolLbEventDetails
	SeThreshEventDetails
	SeHmEventShmDetails
	SeHmEventServerDetails
	SeHmEventPoolDetails
	SeHmEventVsDetails
	SePersistenceEventDetails
	SeExternalHMRestartDetails
	SeHBEventDetails
	SeIpfailureEventDetails
	SeDupipEventDetails
	SeMgrEventDetails
	SSLExpireDetails
	SSLExportDetails
	SeVersionCheckFailedEvent
	SystemUpgradeStarted
	SystemUpgradeComplete
	SystemUpgradeAborted
	VinfraVmDetails
	VinfraDiscSummaryDetails
	VinfraVcenterBadCredentials
	VinfraCntlrHostUnreachableList
	VinfraPoolServerDeleteDetails
	VinfraMgmtNwChangeDetails
	VinfraVcenterObjDeleteDetails
	VinfraVcenterDiscoveryFailure
	VsFsmEventDetails
	VsPoolNwFilterEventDetails
	VsScaleOutEventDetails
	VsScaleInEventDetails
	VsMigrateEventDetails
	VsErrorEventDetails
	VsAwaitingSeEventDetails
	VsInitialPlacementEventDetails
	Cpu
	Storage
	VmNetwork
	Device
	VirtualMachine
	Datacenter
	VirtualMachineStatsFilter
	VirtualMachineStats
	VirtualMachineRuntime
	FiuModuleExchange
	FiuFilter
	FiuConfig
	FiuConfigUpdate
	FiuConfigRsp
	FiuConfigUpdateRsp
	JobProto
	LuaScript
	LuaScripts
	Topology
	Robot_Server
	Robot_Pool
	RobotDeployAvi
	RobotVirtualization
	RobotVm
	RobotVnic
	RobotAccess
	RobotTestbedRequirements
	RobotOverrideSettings
	RobotTag
	RobotConfFiles
	RobotTextFile
	RobotConfigMap
	RobotMesosCluster
	RobotMarathonApp
	RobotContainer
	RobotDocker
	RobotDockerPortMappings
	RobotContainerHealthChecks
	SeAgentDpMsg
	TaskRequestBase
	TaskResponseBase
	TaskDbNotificationBase
	TaskBase
	TestConfig
	CoreConfig
	SubTreeConfig
	FieldConfig
	StaticValueGenerator
	WeightedDictGenerator
	WeightedUniqueGenerator
	IncrementTypeGenerator
	TestBase
	PingReq
	PingRsp
	PongReq
	PongRsp
	OneWayReq
	VcenterConnectReq
	VcenterConnectResp
	Level3
	Level3Runtime
	Level2
	Level2Runtime
	Level1
	Level1Runtime
	Level0
	Level0Runtime
	TransactionCachedObj
	TransactionRuntime
	ChildInfo
	TransactionStats
	Referencable
	NonReferencable
	NonReferencable2
	MostDifficultObjectEver
	HasSingleReferencable
	HasOptionalReferencable
	HasMultipleReferencable
	HasSingleNonReferencable
	HasOptionalNonReferencable
	HasRepeatedNonReferencable
	UltimateTest
	UltimateTestRepeated
	IsOwnedReference
	HasOwnedReferences
	VCEmDCRuntime
	VCEmClusterRuntime
	VCEmVMRuntime
	VCEmPGRuntime
	VCEmIPAddrRuntime
	VCEmVirtualNicRuntime
	VCenterConfig
	ServerAutoScaleIntelligentTimer
	ServerAutoScaleNotifn
	ServerIPPort
	AutoScaleRuntime
	ServerAutoScaleStatus
	CcVerifyLoginReq
	CcReq
	CcRsp
	CcInternalsReq
	CcInternalsRsp
	CcConfigureReq
	CcDeconfigureReq
	CcDiscoverRsp
	CcLookupNetworkIp
	CcLookupNwReq
	CcIpNetwork
	CcLookupNwRsp
	CcVipInfo
	CcUpdateVipReq
	CcUpdateVipRsp
	CcDeleteVipReq
	CcCreateSeReq
	CcCreateSeRsp
	CcDeleteSeReq
	CcCheckSeStatusReq
	CcCheckSeStatusRsp
	CcSeActionReq
	CcAddVnicsReq
	CcAddVnicsRsp
	CcDelVnicsReq
	CcAttachIpReq
	CcDetachIpReq
	CcNwRuntimeReq
	CcNwRuntimeRsp
	CcVmRuntimeReq
	CcVmRuntimeRsp
	CcLbprovPluginReq
	CcLbprovPluginRsp
	CcLbprovPluginStatusReq
	CcLbprovPluginStatusRsp
	CcLbprovAuditReq
	CcLbprovAuditRsp
	CcLbprovAuditStatusRsp
	CcSyncServicesReq
	CcZoneReq
	CcZoneRsp
	CcFlavorReq
	CcFlavorRsp
	CcGcReq
	CcStatusRsp
	CcWebhookMesosReq
	CcWebhookMarathonReq
	CcMesosServiceengineReq
	CcVmLaunchReq
	CcVmStopReq
	ControllerWorkerFlags
	ControllerWorkerFlagsRsp
	CreateReq
	CreateRsp
	UpdateReq
	UpdateRsp
	DeleteReq
	DeleteRsp
	DebugControllerReq
	DebugControllerRsp
	NetworkServerFilter
	PoolFilter
	LicenseRsp
	LicenseCfgReq
	LicenseReq
	VmStats
	SeStats
	ControllerStats
	MetricsAppInsights
	MetricsServiceInsights
	MetricsSourceInsights
	MetricsTenantStats
	MetricsAgentMessage
	MetricsAgentMessageBag
	MetricsAgentFilter
	MetricsPackedData
	MetricsObj
	MetricsRuntimeSummary
	VsStats
	MetricsRuntimeDetail
	MetricsMgrFreeDiskReq
	MetricsMgrFreeDiskRsp
	VsUpdate
	IpList
	IpNetwork
	IpNetworkList
	IpNexthop
	IpNexthopList
	StaticIPInfo
	StaticIPReq
	StaticIPRsp
	StaticIPResyncReq
	StaticIPResyncRsp
	PoolVmRefReq
	PoolVmRefInfo
	PoolVmRefRsp
	StaticIPAvailInfo
	StaticIPAvailReq
	StaticIPAvailRsp
	NetworkInfo
	DuplicateIpSubnets
	RPCRequest
	RPCResponse
	RelRsrcUpdRequest
	RPCRequestMetaData
	RPCRequestResource
	RPCRequestFilter
	RPCRequestActionParams
	RPCResponseMetaData
	RPCResponseResource
	RPCResponseActionParams
	SeAgentTaskRequest
	SeAgentTaskResponse
	SeHeadlessOnlineReq
	SeAgentHbRequest
	SeAgentHbResponse
	SeAgentVnicRequest
	SeAgentPing
	SeAgentVnicResponse
	SeAgentGlobalRequest
	SeAgentGlobalResponse
	SeAgentVirtualServiceList
	SeAgentRumMessage
	SeAgentConfigSyncRequest
	SeLogAgentNotify
	SeLogAgentResponse
	SeMgmtReq
	SeMgmtRsp
	SePowerMgmtReq
	SePowerMgmtRsp
	SeClusterPowerMgmtReq
	VnicNetworkReq
	VnicNetworkRsp
	VnicReq
	VnicRsp
	RouteReq
	ServiceEngineUpdateRsp
	SeHealthCheckStatus
	ConsumersUpdReq
	ResyncIp
	ResyncStaticIpsReq
	SetNetworksReq
	UpdateVrfsReq
	SeHbMonitorJob
	SeLeaseTimerJob
	SeHealthCheckJob
	SeInfo
	SeMgrSvcId
	SeResourceFindReq
	SeAllocInfo
	SeResourceFindResp
	SeAssignReq
	SeAssignResp
	SeConsumerResyncReq
	SeConsumerResyncResp
	SeResVerifyBindingReq
	SeResVerifyBindingResp
	SeResourcePreReleaseReq
	SeResourcePreReleaseResp
	SeResourceReleaseReq
	SeResourceReleaseResp
	SeResourceAddReq
	SeResourceModifyReq
	SeResourceDelReq
	SeResourceDelResp
	SeResReachabilityAddReq
	SeResReachabilityDelReq
	SeVniReachUpdReq
	SeSubnetReachUpdReq
	SeVmCreateStatus
	SeVmDeleteStatus
	SeVmVnicOpStatus
	SweepReq
	SweepVnicReq
	ModifyCreateReq
	RefreshProgressReq
	UniAdminRoleReq
	SeCreateResp
	SeMgmtIpFailReq
	SeResourceFindReqBatch
	SeAssignReqBatch
	SeResourcePreReleaseReqBatch
	SeResourceReleaseReqBatch
	ControllerMibEntry
	ServiceEngineMibEntry
	VirtualServiceMibEntry
	SnmpReq
	SnmpRsp
	AllocSshPortReq
	AllocSshPortRsp
	TcpRpcRequest
	TcpRpcResponse
	VIGetDCReq
	VIGetDCRsp
	VIGetDCDetailsReq
	VIGetDCDetailsRsp
	VIGetHostReq
	VIGetHostRsp
	VIGetClusterReq
	VIGetClusterRsp
	VIGetVMReq
	VIGetVMRsp
	VIGetvNicVMReq
	VIGuestvNicInfo
	VIGetvNicVMRsp
	VIGetPGReq
	VIGetPGRsp
	VIGetHostPGReq
	VIGetHostPGRsp
	VIGetVMPGReq
	VIGetVMPGRsp
	VIVcenterMonitorReq
	VIVcenterMonitorRsp
	VICreateSEVMReq
	VICreateSEVMRsp
	VIDeleteSEVMReq
	VIDeleteSEVMRsp
	VISetMgmtIpSEVMReq
	VISetMgmtIpSEVMRsp
	VIAddSEVMvNicReq
	VIAddSEVMvNicRsp
	VIRemoveSEVMvNicReq
	VIRemoveSEVMvNicRsp
	VIVMPowerChangeRsp
	VIVMPowerChangeReq
	InterestedVM
	VIPerformanceMonitorVM
	VIRetrieveEntityCounterReq
	VcenterHostCapabilityInfo
	VcenterHostsCapabilityRsp
	VcenterMonitorVersionReq
	VcenterDcMonitorVersion
	VcenterMonitorVersionRsp
	HostAccess
	HostReachabilityReq
	HostReachabilityRsp
	VIVMNotif
	VIHostNotif
	VIClusterNotif
	VIPGNotif
	VIDCNotif
	VIGlobalVMNotif
	VIGlobalResourceNotif
	VIRediscNotif
	VIInterestedNWs
	VIInterestedVMs
	VICreateSEReq
	VICreateSERsp
	VIDeleteSEReq
	VIDeleteSERsp
	VIVMPowerStateChangeRsp
	VIVMPowerStateChangeReq
	VIVcenterInventoryProgressReq
	VIVcenterInventoryProgressRsp
	VIVcenterRediscoverReq
	VITestEventGen
	VirtualServiceConfig
	VirtualServiceSeConfig
	ResourceUpdate
	VsSeScaleInReady
	VsSeScaleOutReady
	VhAppRequest
	VsRuntimeStatus
	VsScaleInTimerJob
	VsScaleOutTimerJob
	SyserrTest1Info
	SyserrInfo
	SyserrMsg
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// Host, Path and Query can be specified either as a full string or as a
// composition of tokens from the three pieces.
// Examples:
// Host can be set to www.avinetworks.com
// -OR-
// If the URI is www.avinetworks.com/sales/blah, the rewrite can make it
// sales.avinetworks.com/blah, which will specify that the rewrite parameters
// are :
// host = path[0].host[1:] and path = path[1:]
type URIParamType int32

const (
	URIParamType_URI_PARAM_TYPE_TOKENIZED URIParamType = 1
)

var URIParamType_name = map[int32]string{
	1: "URI_PARAM_TYPE_TOKENIZED",
}
var URIParamType_value = map[string]int32{
	"URI_PARAM_TYPE_TOKENIZED": 1,
}

func (x URIParamType) Enum() *URIParamType {
	p := new(URIParamType)
	*p = x
	return p
}
func (x URIParamType) String() string {
	return proto.EnumName(URIParamType_name, int32(x))
}
func (x *URIParamType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(URIParamType_value, data, "URIParamType")
	if err != nil {
		return err
	}
	*x = URIParamType(value)
	return nil
}
func (URIParamType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type URITokenType int32

const (
	URITokenType_URI_TOKEN_TYPE_HOST   URITokenType = 0
	URITokenType_URI_TOKEN_TYPE_PATH   URITokenType = 1
	URITokenType_URI_TOKEN_TYPE_STRING URITokenType = 2
)

var URITokenType_name = map[int32]string{
	0: "URI_TOKEN_TYPE_HOST",
	1: "URI_TOKEN_TYPE_PATH",
	2: "URI_TOKEN_TYPE_STRING",
}
var URITokenType_value = map[string]int32{
	"URI_TOKEN_TYPE_HOST":   0,
	"URI_TOKEN_TYPE_PATH":   1,
	"URI_TOKEN_TYPE_STRING": 2,
}

func (x URITokenType) Enum() *URITokenType {
	p := new(URITokenType)
	*p = x
	return p
}
func (x URITokenType) String() string {
	return proto.EnumName(URITokenType_name, int32(x))
}
func (x *URITokenType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(URITokenType_value, data, "URITokenType")
	if err != nil {
		return err
	}
	*x = URITokenType(value)
	return nil
}
func (URITokenType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type HTTPHdrActionType int32

const (
	HTTPHdrActionType_HTTP_ADD_HDR     HTTPHdrActionType = 1
	HTTPHdrActionType_HTTP_REMOVE_HDR  HTTPHdrActionType = 2
	HTTPHdrActionType_HTTP_REPLACE_HDR HTTPHdrActionType = 3
)

var HTTPHdrActionType_name = map[int32]string{
	1: "HTTP_ADD_HDR",
	2: "HTTP_REMOVE_HDR",
	3: "HTTP_REPLACE_HDR",
}
var HTTPHdrActionType_value = map[string]int32{
	"HTTP_ADD_HDR":     1,
	"HTTP_REMOVE_HDR":  2,
	"HTTP_REPLACE_HDR": 3,
}

func (x HTTPHdrActionType) Enum() *HTTPHdrActionType {
	p := new(HTTPHdrActionType)
	*p = x
	return p
}
func (x HTTPHdrActionType) String() string {
	return proto.EnumName(HTTPHdrActionType_name, int32(x))
}
func (x *HTTPHdrActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HTTPHdrActionType_value, data, "HTTPHdrActionType")
	if err != nil {
		return err
	}
	*x = HTTPHdrActionType(value)
	return nil
}
func (HTTPHdrActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type HTTPSwitchingActionType int32

const (
	HTTPSwitchingActionType_HTTP_SWITCHING_SELECT_POOL  HTTPSwitchingActionType = 1
	HTTPSwitchingActionType_HTTP_SWITCHING_SELECT_LOCAL HTTPSwitchingActionType = 2
)

var HTTPSwitchingActionType_name = map[int32]string{
	1: "HTTP_SWITCHING_SELECT_POOL",
	2: "HTTP_SWITCHING_SELECT_LOCAL",
}
var HTTPSwitchingActionType_value = map[string]int32{
	"HTTP_SWITCHING_SELECT_POOL":  1,
	"HTTP_SWITCHING_SELECT_LOCAL": 2,
}

func (x HTTPSwitchingActionType) Enum() *HTTPSwitchingActionType {
	p := new(HTTPSwitchingActionType)
	*p = x
	return p
}
func (x HTTPSwitchingActionType) String() string {
	return proto.EnumName(HTTPSwitchingActionType_name, int32(x))
}
func (x *HTTPSwitchingActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HTTPSwitchingActionType_value, data, "HTTPSwitchingActionType")
	if err != nil {
		return err
	}
	*x = HTTPSwitchingActionType(value)
	return nil
}
func (HTTPSwitchingActionType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type URIParamToken struct {
	Type             *URITokenType `protobuf:"varint,1,req,name=type,enum=URITokenType" json:"type,omitempty"`
	StartIndex       *uint32       `protobuf:"varint,2,opt,name=start_index" json:"start_index,omitempty"`
	EndIndex         *uint32       `protobuf:"varint,3,opt,name=end_index" json:"end_index,omitempty"`
	StrValue         *string       `protobuf:"bytes,4,opt,name=str_value" json:"str_value,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *URIParamToken) Reset()                    { *m = URIParamToken{} }
func (m *URIParamToken) String() string            { return proto.CompactTextString(m) }
func (*URIParamToken) ProtoMessage()               {}
func (*URIParamToken) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *URIParamToken) GetType() URITokenType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return URITokenType_URI_TOKEN_TYPE_HOST
}

func (m *URIParamToken) GetStartIndex() uint32 {
	if m != nil && m.StartIndex != nil {
		return *m.StartIndex
	}
	return 0
}

func (m *URIParamToken) GetEndIndex() uint32 {
	if m != nil && m.EndIndex != nil {
		return *m.EndIndex
	}
	return 0
}

func (m *URIParamToken) GetStrValue() string {
	if m != nil && m.StrValue != nil {
		return *m.StrValue
	}
	return ""
}

type URIParam struct {
	Type             *URIParamType    `protobuf:"varint,1,req,name=type,enum=URIParamType" json:"type,omitempty"`
	Tokens           []*URIParamToken `protobuf:"bytes,2,rep,name=tokens" json:"tokens,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *URIParam) Reset()                    { *m = URIParam{} }
func (m *URIParam) String() string            { return proto.CompactTextString(m) }
func (*URIParam) ProtoMessage()               {}
func (*URIParam) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *URIParam) GetType() URIParamType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return URIParamType_URI_PARAM_TYPE_TOKENIZED
}

func (m *URIParam) GetTokens() []*URIParamToken {
	if m != nil {
		return m.Tokens
	}
	return nil
}

type URIParamQuery struct {
	KeepQuery        *bool   `protobuf:"varint,1,opt,name=keep_query,def=1" json:"keep_query,omitempty"`
	AddString        *string `protobuf:"bytes,2,opt,name=add_string" json:"add_string,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *URIParamQuery) Reset()                    { *m = URIParamQuery{} }
func (m *URIParamQuery) String() string            { return proto.CompactTextString(m) }
func (*URIParamQuery) ProtoMessage()               {}
func (*URIParamQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

const Default_URIParamQuery_KeepQuery bool = true

func (m *URIParamQuery) GetKeepQuery() bool {
	if m != nil && m.KeepQuery != nil {
		return *m.KeepQuery
	}
	return Default_URIParamQuery_KeepQuery
}

func (m *URIParamQuery) GetAddString() string {
	if m != nil && m.AddString != nil {
		return *m.AddString
	}
	return ""
}

type HTTPRedirectAction struct {
	Protocol         *HTTPProtocol           `protobuf:"varint,1,req,name=protocol,enum=HTTPProtocol" json:"protocol,omitempty"`
	Host             *URIParam               `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port             *Port                   `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	Path             *URIParam               `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	KeepQuery        *bool                   `protobuf:"varint,5,opt,name=keep_query,def=1" json:"keep_query,omitempty"`
	StatusCode       *HTTPRedirectStatusCode `protobuf:"varint,6,opt,name=status_code,enum=HTTPRedirectStatusCode,def=302" json:"status_code,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *HTTPRedirectAction) Reset()                    { *m = HTTPRedirectAction{} }
func (m *HTTPRedirectAction) String() string            { return proto.CompactTextString(m) }
func (*HTTPRedirectAction) ProtoMessage()               {}
func (*HTTPRedirectAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

const Default_HTTPRedirectAction_KeepQuery bool = true
const Default_HTTPRedirectAction_StatusCode HTTPRedirectStatusCode = HTTPRedirectStatusCode_HTTP_REDIRECT_STATUS_CODE_302

func (m *HTTPRedirectAction) GetProtocol() HTTPProtocol {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return HTTPProtocol_HTTP
}

func (m *HTTPRedirectAction) GetHost() *URIParam {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *HTTPRedirectAction) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *HTTPRedirectAction) GetPath() *URIParam {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *HTTPRedirectAction) GetKeepQuery() bool {
	if m != nil && m.KeepQuery != nil {
		return *m.KeepQuery
	}
	return Default_HTTPRedirectAction_KeepQuery
}

func (m *HTTPRedirectAction) GetStatusCode() HTTPRedirectStatusCode {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return Default_HTTPRedirectAction_StatusCode
}

type HTTPHdrValue struct {
	Var              *HTTPPolicyVar `protobuf:"varint,1,opt,name=var,enum=HTTPPolicyVar" json:"var,omitempty"`
	Val              *string        `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HTTPHdrValue) Reset()                    { *m = HTTPHdrValue{} }
func (m *HTTPHdrValue) String() string            { return proto.CompactTextString(m) }
func (*HTTPHdrValue) ProtoMessage()               {}
func (*HTTPHdrValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *HTTPHdrValue) GetVar() HTTPPolicyVar {
	if m != nil && m.Var != nil {
		return *m.Var
	}
	return HTTPPolicyVar_HTTP_POLICY_VAR_CLIENT_IP
}

func (m *HTTPHdrValue) GetVal() string {
	if m != nil && m.Val != nil {
		return *m.Val
	}
	return ""
}

type HTTPHdrData struct {
	// Match against this header name for Add, Remove, Modify
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// For Add and Replace header, the value to be set.
	Value            *HTTPHdrValue `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HTTPHdrData) Reset()                    { *m = HTTPHdrData{} }
func (m *HTTPHdrData) String() string            { return proto.CompactTextString(m) }
func (*HTTPHdrData) ProtoMessage()               {}
func (*HTTPHdrData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *HTTPHdrData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HTTPHdrData) GetValue() *HTTPHdrValue {
	if m != nil {
		return m.Value
	}
	return nil
}

// TODO: Remove, not supported but requires data path modifications
type HTTPCookieData struct {
	Name             *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HTTPCookieData) Reset()                    { *m = HTTPCookieData{} }
func (m *HTTPCookieData) String() string            { return proto.CompactTextString(m) }
func (*HTTPCookieData) ProtoMessage()               {}
func (*HTTPCookieData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *HTTPCookieData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HTTPCookieData) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type HTTPHdrAction struct {
	Action *HTTPHdrActionType `protobuf:"varint,1,req,name=action,enum=HTTPHdrActionType" json:"action,omitempty"`
	// Add, Remove, Replace Headers
	Hdr *HTTPHdrData `protobuf:"bytes,2,opt,name=hdr" json:"hdr,omitempty"`
	// TODO: Remove, not supported but requires data path modifications
	Cookie           *HTTPCookieData `protobuf:"bytes,3,opt,name=cookie" json:"cookie,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HTTPHdrAction) Reset()                    { *m = HTTPHdrAction{} }
func (m *HTTPHdrAction) String() string            { return proto.CompactTextString(m) }
func (*HTTPHdrAction) ProtoMessage()               {}
func (*HTTPHdrAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *HTTPHdrAction) GetAction() HTTPHdrActionType {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return HTTPHdrActionType_HTTP_ADD_HDR
}

func (m *HTTPHdrAction) GetHdr() *HTTPHdrData {
	if m != nil {
		return m.Hdr
	}
	return nil
}

func (m *HTTPHdrAction) GetCookie() *HTTPCookieData {
	if m != nil {
		return m.Cookie
	}
	return nil
}

type HTTPRewriteURLAction struct {
	// Host Header
	HostHdr *URIParam `protobuf:"bytes,1,opt,name=host_hdr" json:"host_hdr,omitempty"`
	// Path, Query
	Path             *URIParam      `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	Query            *URIParamQuery `protobuf:"bytes,3,opt,name=query" json:"query,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HTTPRewriteURLAction) Reset()                    { *m = HTTPRewriteURLAction{} }
func (m *HTTPRewriteURLAction) String() string            { return proto.CompactTextString(m) }
func (*HTTPRewriteURLAction) ProtoMessage()               {}
func (*HTTPRewriteURLAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *HTTPRewriteURLAction) GetHostHdr() *URIParam {
	if m != nil {
		return m.HostHdr
	}
	return nil
}

func (m *HTTPRewriteURLAction) GetPath() *URIParam {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *HTTPRewriteURLAction) GetQuery() *URIParamQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

type PoolServer struct {
	Ip               *IpAddr `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Hostname         *string `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Port             *Port   `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PoolServer) Reset()                    { *m = PoolServer{} }
func (m *PoolServer) String() string            { return proto.CompactTextString(m) }
func (*PoolServer) ProtoMessage()               {}
func (*PoolServer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *PoolServer) GetIp() *IpAddr {
	if m != nil {
		return m.Ip
	}
	return nil
}

func (m *PoolServer) GetHostname() string {
	if m != nil && m.Hostname != nil {
		return *m.Hostname
	}
	return ""
}

func (m *PoolServer) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

type HTTPSwitchingAction struct {
	Action           *HTTPSwitchingActionType     `protobuf:"varint,1,req,name=action,enum=HTTPSwitchingActionType" json:"action,omitempty"`
	PoolUuid         *string                      `protobuf:"bytes,2,opt,name=pool_uuid" json:"pool_uuid,omitempty"`
	StatusCode       *HTTPLocalResponseStatusCode `protobuf:"varint,3,opt,name=status_code,enum=HTTPLocalResponseStatusCode" json:"status_code,omitempty"`
	File             *HTTPLocalFile               `protobuf:"bytes,4,opt,name=file" json:"file,omitempty"`
	Server           *PoolServer                  `protobuf:"bytes,5,opt,name=server" json:"server,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *HTTPSwitchingAction) Reset()                    { *m = HTTPSwitchingAction{} }
func (m *HTTPSwitchingAction) String() string            { return proto.CompactTextString(m) }
func (*HTTPSwitchingAction) ProtoMessage()               {}
func (*HTTPSwitchingAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *HTTPSwitchingAction) GetAction() HTTPSwitchingActionType {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return HTTPSwitchingActionType_HTTP_SWITCHING_SELECT_POOL
}

func (m *HTTPSwitchingAction) GetPoolUuid() string {
	if m != nil && m.PoolUuid != nil {
		return *m.PoolUuid
	}
	return ""
}

func (m *HTTPSwitchingAction) GetStatusCode() HTTPLocalResponseStatusCode {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return HTTPLocalResponseStatusCode_HTTP_LOCAL_RESPONSE_STATUS_CODE_200
}

func (m *HTTPSwitchingAction) GetFile() *HTTPLocalFile {
	if m != nil {
		return m.File
	}
	return nil
}

func (m *HTTPSwitchingAction) GetServer() *PoolServer {
	if m != nil {
		return m.Server
	}
	return nil
}

type HTTPRewriteLocHdrAction struct {
	Protocol         *HTTPProtocol `protobuf:"varint,1,req,name=protocol,enum=HTTPProtocol" json:"protocol,omitempty"`
	Port             *Port         `protobuf:"bytes,2,opt,name=port" json:"port,omitempty"`
	Host             *URIParam     `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	Path             *URIParam     `protobuf:"bytes,4,opt,name=path" json:"path,omitempty"`
	KeepQuery        *bool         `protobuf:"varint,5,opt,name=keep_query,def=1" json:"keep_query,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HTTPRewriteLocHdrAction) Reset()                    { *m = HTTPRewriteLocHdrAction{} }
func (m *HTTPRewriteLocHdrAction) String() string            { return proto.CompactTextString(m) }
func (*HTTPRewriteLocHdrAction) ProtoMessage()               {}
func (*HTTPRewriteLocHdrAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

const Default_HTTPRewriteLocHdrAction_KeepQuery bool = true

func (m *HTTPRewriteLocHdrAction) GetProtocol() HTTPProtocol {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return HTTPProtocol_HTTP
}

func (m *HTTPRewriteLocHdrAction) GetPort() *Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *HTTPRewriteLocHdrAction) GetHost() *URIParam {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *HTTPRewriteLocHdrAction) GetPath() *URIParam {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *HTTPRewriteLocHdrAction) GetKeepQuery() bool {
	if m != nil && m.KeepQuery != nil {
		return *m.KeepQuery
	}
	return Default_HTTPRewriteLocHdrAction_KeepQuery
}

func init() {
	proto.RegisterType((*URIParamToken)(nil), "URIParamToken")
	proto.RegisterType((*URIParam)(nil), "URIParam")
	proto.RegisterType((*URIParamQuery)(nil), "URIParamQuery")
	proto.RegisterType((*HTTPRedirectAction)(nil), "HTTPRedirectAction")
	proto.RegisterType((*HTTPHdrValue)(nil), "HTTPHdrValue")
	proto.RegisterType((*HTTPHdrData)(nil), "HTTPHdrData")
	proto.RegisterType((*HTTPCookieData)(nil), "HTTPCookieData")
	proto.RegisterType((*HTTPHdrAction)(nil), "HTTPHdrAction")
	proto.RegisterType((*HTTPRewriteURLAction)(nil), "HTTPRewriteURLAction")
	proto.RegisterType((*PoolServer)(nil), "PoolServer")
	proto.RegisterType((*HTTPSwitchingAction)(nil), "HTTPSwitchingAction")
	proto.RegisterType((*HTTPRewriteLocHdrAction)(nil), "HTTPRewriteLocHdrAction")
	proto.RegisterEnum("URIParamType", URIParamType_name, URIParamType_value)
	proto.RegisterEnum("URITokenType", URITokenType_name, URITokenType_value)
	proto.RegisterEnum("HTTPHdrActionType", HTTPHdrActionType_name, HTTPHdrActionType_value)
	proto.RegisterEnum("HTTPSwitchingActionType", HTTPSwitchingActionType_name, HTTPSwitchingActionType_value)
}

var fileDescriptor0 = []byte{
	// 1796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x57, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0xa7, 0x6d, 0x27, 0x1b, 0x97, 0x13, 0x4f, 0xa6, 0x77, 0x96, 0x09, 0x99, 0xf5, 0xd2, 0xdb,
	0x68, 0x37, 0xd9, 0x30, 0xdb, 0x19, 0x39, 0xcc, 0x64, 0x09, 0xbb, 0xac, 0xdc, 0xb6, 0x19, 0x9b,
	0x78, 0xc6, 0xc6, 0x76, 0xb2, 0xb0, 0x48, 0x34, 0x3d, 0xdd, 0xe5, 0xb8, 0x49, 0xbb, 0xbb, 0xe9,
	0x6e, 0x27, 0x13, 0xc1, 0x4a, 0x5c, 0xb8, 0xcc, 0x01, 0x04, 0x12, 0x9a, 0x23, 0x02, 0xa1, 0x1c,
	0x90, 0xb8, 0xc0, 0x6d, 0xb8, 0x20, 0x8e, 0x7c, 0x03, 0xb8, 0xa1, 0xe1, 0xc2, 0xb7, 0xe0, 0xd5,
	0xab, 0x6a, 0xbb, 0x9d, 0x64, 0x26, 0x19, 0x0e, 0x48, 0x1c, 0x12, 0x75, 0x55, 0xbd, 0xfa, 0xbd,
	0x5f, 0xbd, 0xff, 0x26, 0x8b, 0xa6, 0x15, 0x3b, 0xbe, 0xa7, 0x05, 0xa1, 0x1f, 0xfb, 0xab, 0x8b,
	0x96, 0x3f, 0x1a, 0x4d, 0x56, 0x4b, 0x7e, 0xc0, 0xce, 0x22, 0xbe, 0x54, 0x9f, 0x67, 0xc8, 0xd2,
	0x5e, 0xb7, 0xd9, 0x31, 0x43, 0x73, 0xd4, 0xf7, 0x0f, 0xa9, 0x27, 0xd7, 0x48, 0x2e, 0x3e, 0x09,
	0xe8, 0x8a, 0xa4, 0x64, 0xd6, 0x8b, 0xe5, 0x25, 0x0d, 0x4e, 0xf1, 0xa0, 0x0f, 0x9b, 0xfa, 0xda,
	0x6f, 0x4f, 0x4b, 0x5f, 0xc2, 0xa5, 0xc2, 0x84, 0x94, 0x81, 0x1f, 0x2a, 0x16, 0xa0, 0xc5, 0xe1,
	0x18, 0x54, 0x7a, 0x07, 0x4a, 0x3c, 0xa4, 0x0a, 0xdc, 0x90, 0x1b, 0xa4, 0x10, 0xc5, 0x66, 0x18,
	0x1b, 0x8e, 0x67, 0xd3, 0xc7, 0x2b, 0x19, 0x45, 0x5a, 0x5f, 0xd2, 0xb7, 0xe0, 0xf6, 0x66, 0x93,
	0x6d, 0x28, 0xfe, 0x00, 0x45, 0x51, 0x06, 0xef, 0x21, 0xa6, 0xe3, 0xe1, 0xae, 0xe3, 0x01, 0x65,
	0xb6, 0xcb, 0x90, 0x3c, 0x92, 0xa7, 0x9e, 0x2d, 0x70, 0xb2, 0x88, 0xf3, 0x5d, 0xc0, 0x79, 0x7f,
	0x06, 0x07, 0x24, 0x5e, 0x8a, 0xf2, 0xc7, 0xd3, 0xd2, 0x6b, 0x77, 0xde, 0xbf, 0x77, 0xf7, 0xee,
	0xd6, 0x57, 0xfe, 0x71, 0x5a, 0xba, 0xf5, 0x23, 0x85, 0x7d, 0xde, 0x55, 0x76, 0x94, 0x35, 0xb8,
	0xc9, 0x40, 0xe0, 0x05, 0x20, 0xba, 0xa6, 0x7c, 0x26, 0x7f, 0x40, 0xf2, 0xb0, 0x30, 0x8e, 0x4c,
	0x77, 0x4c, 0x57, 0x72, 0xa0, 0x2f, 0xaf, 0xbf, 0x03, 0xfa, 0xde, 0xae, 0xb2, 0x67, 0x9a, 0x5e,
	0x2c, 0x44, 0x41, 0x97, 0x32, 0x8e, 0xa8, 0x62, 0x46, 0x8a, 0xc9, 0xf5, 0xee, 0xac, 0xfc, 0xf5,
	0xb4, 0x74, 0x63, 0xc6, 0x98, 0x35, 0x3a, 0x30, 0xc7, 0x6e, 0xac, 0xfe, 0x4e, 0x22, 0x0b, 0xc9,
	0x81, 0xbc, 0x79, 0xde, 0xc0, 0xfc, 0x06, 0x33, 0xb0, 0x0c, 0xaa, 0x8a, 0xb0, 0xa3, 0x04, 0x6c,
	0x0b, 0x8d, 0x2c, 0x1f, 0x90, 0x79, 0x54, 0x10, 0x81, 0x19, 0xb3, 0xeb, 0x85, 0x72, 0x51, 0x9b,
	0x51, 0xa2, 0xdf, 0x87, 0x3b, 0x1f, 0x73, 0xa7, 0x80, 0x2f, 0x06, 0xce, 0x81, 0x42, 0x1d, 0x30,
	0x40, 0x88, 0xde, 0x11, 0x0e, 0x81, 0x93, 0x51, 0xe0, 0x7b, 0xd4, 0x8b, 0x23, 0x05, 0x76, 0x4d,
	0xee, 0xb5, 0xe9, 0x73, 0xfe, 0x72, 0x5a, 0x92, 0xd4, 0xdf, 0xa4, 0x82, 0xe1, 0x5b, 0x63, 0x1a,
	0x9e, 0xc8, 0x8f, 0x09, 0x39, 0xa4, 0x34, 0x30, 0x7e, 0xc8, 0x56, 0xc0, 0x58, 0x5a, 0x5f, 0xd8,
	0xc9, 0x81, 0xb3, 0xa9, 0xfe, 0x3d, 0x50, 0xfa, 0xe9, 0x1e, 0x18, 0x00, 0xd0, 0xec, 0xd0, 0x0f,
	0x50, 0x11, 0x8a, 0x25, 0x3e, 0x99, 0xd8, 0x3f, 0xa4, 0xb0, 0x1f, 0xc5, 0x48, 0x43, 0xf8, 0x26,
	0xbd, 0x05, 0x86, 0x64, 0x5b, 0x8f, 0x4c, 0xeb, 0x90, 0x39, 0x23, 0xa2, 0xe1, 0x11, 0x0d, 0xe5,
	0x5f, 0x49, 0x84, 0x98, 0xb6, 0x6d, 0x70, 0x7a, 0x18, 0x40, 0x79, 0xfd, 0x27, 0x12, 0x68, 0xfd,
	0x31, 0x78, 0xc2, 0x32, 0x63, 0xea, 0xc1, 0x1f, 0x3c, 0x64, 0xea, 0x8e, 0xab, 0x31, 0x30, 0x41,
	0x07, 0x1c, 0x7a, 0xe8, 0x3d, 0x27, 0xbe, 0x88, 0xd1, 0x81, 0x9f, 0x42, 0x9c, 0xe5, 0xa5, 0xfe,
	0x21, 0x4b, 0xe4, 0x46, 0xbf, 0xdf, 0xe9, 0x52, 0xdb, 0x09, 0xa9, 0x15, 0x57, 0x30, 0xd5, 0xe4,
	0x32, 0x59, 0xc0, 0x84, 0xb2, 0x7c, 0x77, 0xe2, 0x58, 0x26, 0xd6, 0x11, 0x9b, 0xfa, 0x75, 0x60,
	0xbe, 0x94, 0xac, 0xb8, 0x5f, 0xd7, 0x49, 0x6e, 0xe8, 0x47, 0x31, 0xbe, 0xad, 0x50, 0xce, 0x4f,
	0xbc, 0xaa, 0x5f, 0x03, 0xd9, 0x42, 0x03, 0x8e, 0x84, 0x3f, 0xe5, 0xaf, 0x91, 0x5c, 0xe0, 0x87,
	0x31, 0x86, 0x7f, 0xa1, 0x3c, 0xa7, 0x75, 0x60, 0xa1, 0xbf, 0x0b, 0x52, 0x2a, 0xfb, 0x62, 0x4c,
	0x8f, 0x87, 0x8e, 0x35, 0x84, 0x47, 0x70, 0x52, 0xe9, 0x17, 0x31, 0x35, 0x81, 0x19, 0x0f, 0x31,
	0x96, 0xcf, 0xab, 0xe9, 0xc0, 0x51, 0xa2, 0x66, 0x30, 0xe3, 0xed, 0xb9, 0x94, 0xb7, 0x5b, 0x20,
	0xda, 0xd8, 0x85, 0xb3, 0xff, 0xd6, 0xdd, 0x9c, 0x17, 0xb5, 0x31, 0xa5, 0x7f, 0x80, 0xc5, 0x21,
	0x1e, 0x47, 0x86, 0xe5, 0xdb, 0x74, 0x65, 0x1e, 0x14, 0x15, 0xcb, 0x37, 0xb5, 0xb4, 0x59, 0x7b,
	0x78, 0x5e, 0x85, 0xe3, 0x9d, 0x12, 0xdb, 0x37, 0xba, 0xf5, 0x5a, 0xb3, 0x5b, 0xaf, 0xf6, 0x8d,
	0x5e, 0xbf, 0xd2, 0xdf, 0xeb, 0x19, 0xd5, 0x76, 0xad, 0x6e, 0x6c, 0xdd, 0x29, 0xeb, 0x25, 0xa0,
	0xf6, 0x05, 0x26, 0x32, 0x7d, 0x3d, 0x07, 0x57, 0x18, 0xb8, 0xfa, 0x53, 0x89, 0x2c, 0xb2, 0xd3,
	0x86, 0x1d, 0xee, 0xb3, 0x94, 0x96, 0xdf, 0x23, 0xd9, 0x23, 0x33, 0xc4, 0x58, 0x2e, 0x42, 0x2a,
	0xa1, 0x93, 0x7c, 0xd7, 0xb1, 0x4e, 0xf6, 0xcd, 0x50, 0x5f, 0x04, 0xb0, 0x05, 0xf8, 0x70, 0xcc,
	0x47, 0x2e, 0x95, 0xbf, 0xc9, 0x44, 0x5d, 0x11, 0x7b, 0x1f, 0xc1, 0xd1, 0x57, 0x51, 0xcf, 0x90,
	0x9a, 0x36, 0x64, 0x17, 0x56, 0x08, 0x66, 0x8f, 0x23, 0x21, 0x0f, 0x04, 0x82, 0x90, 0x46, 0x90,
	0x63, 0xcc, 0x0c, 0xa6, 0xa7, 0xa4, 0xa4, 0xd5, 0x01, 0x29, 0x08, 0x1a, 0x35, 0x33, 0x36, 0x65,
	0x95, 0xe4, 0x3c, 0x73, 0x44, 0x91, 0x46, 0x5e, 0xbf, 0x01, 0xd8, 0xcb, 0x69, 0x6c, 0x76, 0x26,
	0x6f, 0x91, 0x39, 0x5e, 0x85, 0x78, 0x80, 0xf0, 0x80, 0x4a, 0xde, 0xa1, 0xbf, 0x01, 0x77, 0xae,
	0x9f, 0xe3, 0xa3, 0x76, 0x48, 0x91, 0x6d, 0x56, 0x7d, 0xff, 0xd0, 0xa1, 0xa8, 0xaa, 0x34, 0xa3,
	0x0a, 0x9d, 0xce, 0x4f, 0xb9, 0x96, 0x2f, 0xa6, 0xb5, 0xe4, 0xf5, 0x65, 0x38, 0x5f, 0x14, 0xe7,
	0x1c, 0xf1, 0x17, 0x39, 0xb2, 0x24, 0x34, 0x8b, 0x60, 0xff, 0x59, 0x96, 0xcc, 0xf3, 0x16, 0x23,
	0x62, 0x5d, 0xd6, 0x66, 0x04, 0xb0, 0x92, 0xfd, 0x3b, 0x03, 0x48, 0xff, 0xca, 0x54, 0x6a, 0xb5,
	0x1d, 0xa5, 0xa2, 0x78, 0xf4, 0x38, 0xe1, 0x79, 0x0c, 0xc5, 0x09, 0xa3, 0x82, 0xed, 0x71, 0x23,
	0x3a, 0x50, 0x44, 0x6d, 0x1b, 0xa2, 0xc3, 0x09, 0xc1, 0x80, 0x01, 0xf8, 0xd0, 0x39, 0xa2, 0x93,
	0xda, 0xfe, 0xd8, 0x89, 0x20, 0xdb, 0x2d, 0xdc, 0x98, 0xb5, 0x6a, 0x22, 0x72, 0x00, 0xe2, 0x1e,
	0x3e, 0x47, 0x53, 0xba, 0xf5, 0x4e, 0xab, 0x52, 0xad, 0xbf, 0x8a, 0xd2, 0x81, 0xe2, 0xf9, 0x2f,
	0x44, 0xe4, 0xfa, 0xa3, 0xdb, 0x0a, 0x75, 0x23, 0xb1, 0x60, 0xee, 0xe5, 0xe2, 0xd1, 0x14, 0x38,
	0x75, 0xc3, 0x0c, 0x59, 0x2c, 0x8c, 0xfc, 0x23, 0x00, 0x67, 0xe5, 0xc6, 0xbc, 0x22, 0x13, 0x46,
	0xfe, 0x41, 0x7b, 0x9f, 0x71, 0x77, 0x5d, 0x94, 0x49, 0xb4, 0x9c, 0x67, 0x95, 0xd2, 0xa1, 0xc9,
	0xf7, 0x48, 0x76, 0x68, 0x87, 0x22, 0x4e, 0x16, 0xb5, 0x54, 0xa0, 0xe9, 0xb7, 0xc0, 0x0b, 0x37,
	0xd3, 0x26, 0x73, 0x3c, 0x68, 0x0b, 0x23, 0x13, 0x1d, 0xb9, 0x4d, 0xe6, 0x2d, 0x74, 0xb5, 0xa8,
	0x2c, 0xd7, 0xb4, 0xd9, 0xd8, 0xd1, 0x3f, 0x0f, 0xb7, 0x65, 0x11, 0x0d, 0xa9, 0x8b, 0xea, 0xaf,
	0x25, 0x72, 0x83, 0xa7, 0xeb, 0x71, 0xe8, 0xc4, 0x74, 0xaf, 0xdb, 0x12, 0xa1, 0x71, 0x9b, 0x2c,
	0xb0, 0x9a, 0x66, 0x30, 0x3a, 0xd2, 0xa5, 0x75, 0x2d, 0x29, 0x4d, 0x99, 0x4b, 0x4b, 0xd3, 0x26,
	0x99, 0xe3, 0x55, 0x89, 0x13, 0x9d, 0xb6, 0x40, 0xec, 0x53, 0x3c, 0x6a, 0xf1, 0x53, 0x5c, 0x50,
	0x7f, 0x9f, 0x21, 0xa4, 0xe3, 0xfb, 0x6e, 0x8f, 0xb7, 0x93, 0xaf, 0x93, 0x8c, 0x13, 0x60, 0xb4,
	0x16, 0xca, 0xaf, 0x69, 0xcd, 0xa0, 0x62, 0xdb, 0xa1, 0xfe, 0x1e, 0xdc, 0x7a, 0xa7, 0xd9, 0x61,
	0xc6, 0x87, 0xb0, 0x9b, 0x58, 0x99, 0x57, 0xfa, 0xa4, 0x76, 0x05, 0x3e, 0xa0, 0xc8, 0x26, 0x7f,
	0x17, 0x26, 0x12, 0x4f, 0x94, 0x36, 0x5c, 0xde, 0xad, 0x3d, 0xec, 0x81, 0x17, 0x22, 0xdf, 0x3d,
	0xc2, 0x02, 0x80, 0x9e, 0x99, 0x41, 0xd1, 0x14, 0xe5, 0x81, 0x79, 0xa2, 0x3c, 0xa2, 0xac, 0xdd,
	0xd8, 0x0c, 0x33, 0x70, 0x4d, 0x6b, 0x22, 0x34, 0x55, 0xae, 0xc9, 0x27, 0x17, 0x15, 0x79, 0x1b,
	0xb4, 0x7c, 0x1f, 0x8b, 0xbc, 0xb8, 0x01, 0x74, 0xdc, 0x84, 0xa1, 0x8b, 0x89, 0xc1, 0xa2, 0x91,
	0x75, 0x7a, 0xe6, 0x8f, 0x4d, 0xf6, 0xaf, 0xa7, 0x29, 0x62, 0xf0, 0x98, 0xc6, 0x17, 0xbb, 0x6a,
	0x8b, 0x4d, 0xa6, 0x25, 0xf5, 0x3a, 0x57, 0x53, 0x9f, 0x65, 0xc9, 0xeb, 0x78, 0x13, 0x82, 0xd3,
	0x1a, 0x02, 0xa0, 0xf0, 0xe6, 0xee, 0x99, 0x3c, 0x5f, 0xd1, 0x2e, 0x90, 0xc2, 0x6c, 0x7f, 0x1b,
	0x78, 0x96, 0xa0, 0x31, 0x03, 0x1f, 0xa8, 0xbf, 0x89, 0x80, 0xc2, 0x6f, 0xf3, 0x76, 0xd7, 0x26,
	0x79, 0xa6, 0xcd, 0x18, 0x8f, 0x1d, 0x5b, 0xd8, 0xf0, 0xc3, 0x27, 0xa7, 0xa5, 0x1c, 0xf3, 0x12,
	0xdc, 0xbe, 0xb3, 0xb7, 0xd7, 0xac, 0xcd, 0xbc, 0x92, 0x8d, 0x65, 0xf8, 0xd0, 0x88, 0x75, 0x38,
	0xfc, 0x9c, 0x69, 0x6c, 0x67, 0xda, 0x48, 0x16, 0x2b, 0xfa, 0x9b, 0x48, 0xb1, 0xe5, 0x5b, 0xa6,
	0xdb, 0x85, 0x52, 0x02, 0x53, 0x0e, 0x9d, 0xf6, 0x12, 0x7d, 0x1b, 0x14, 0x6d, 0x61, 0x36, 0xa4,
	0x7a, 0x44, 0x32, 0xca, 0x1d, 0xb3, 0xa9, 0x80, 0xa9, 0x61, 0xcc, 0x5d, 0x86, 0xc0, 0x7c, 0x8b,
	0x10, 0xf2, 0xb7, 0x49, 0x6e, 0xe0, 0xb8, 0x54, 0x34, 0xd1, 0xe2, 0x54, 0xc9, 0x37, 0x60, 0x57,
	0xdf, 0x01, 0xd8, 0x7b, 0xec, 0x4b, 0x19, 0x84, 0xfe, 0x48, 0x34, 0xe3, 0x09, 0xe7, 0x59, 0xa8,
	0x64, 0xae, 0x48, 0x5e, 0xf1, 0x31, 0x99, 0xe7, 0xaf, 0xc4, 0x86, 0x5b, 0x28, 0x17, 0xb4, 0x69,
	0xd8, 0xea, 0x2a, 0x00, 0xbf, 0xd5, 0x83, 0x82, 0xe8, 0x0c, 0x1c, 0x6b, 0xc6, 0xf7, 0x88, 0xee,
	0x42, 0xa5, 0x54, 0x9f, 0x65, 0xc8, 0xcd, 0x54, 0x2e, 0x02, 0xab, 0x69, 0xa5, 0xde, 0xbe, 0x6c,
	0x2c, 0xc1, 0x04, 0x47, 0x83, 0x04, 0x33, 0xb3, 0xc9, 0x8e, 0x08, 0xc6, 0x4c, 0x3a, 0x18, 0x71,
	0x0e, 0x4e, 0x26, 0x0e, 0x1c, 0x9f, 0x2e, 0x6c, 0xef, 0xc9, 0x5c, 0x93, 0xbd, 0x72, 0xfe, 0x5f,
	0x3e, 0x9a, 0xec, 0xbf, 0x70, 0x34, 0xf9, 0x10, 0x44, 0x3f, 0x78, 0xc1, 0x68, 0x82, 0xde, 0x48,
	0xa5, 0x74, 0xe4, 0xd8, 0x53, 0xb6, 0x8c, 0xeb, 0xc6, 0x6d, 0xb2, 0x98, 0x9e, 0xbf, 0xe5, 0x37,
	0xc9, 0x0a, 0xac, 0x8d, 0x4e, 0xa5, 0x5b, 0x79, 0x60, 0xf4, 0xbf, 0xd3, 0xa9, 0x1b, 0xfd, 0xf6,
	0x6e, 0xfd, 0x61, 0xf3, 0xd3, 0x7a, 0x6d, 0x59, 0xda, 0xf8, 0xbb, 0x84, 0xe2, 0x93, 0xdf, 0x43,
	0xf0, 0x63, 0xe9, 0x75, 0x26, 0x8e, 0x32, 0x5c, 0xbc, 0xd1, 0xee, 0xf5, 0x97, 0x3f, 0xb7, 0xfa,
	0xe5, 0x5f, 0x3e, 0x55, 0xd7, 0xd8, 0x78, 0x3c, 0xe4, 0xcf, 0x15, 0xc3, 0x77, 0x12, 0xdf, 0x38,
	0x88, 0x46, 0xfc, 0x77, 0x43, 0x74, 0x01, 0x4a, 0xa7, 0xd2, 0x6f, 0x2c, 0x4b, 0x53, 0x94, 0x80,
	0x9b, 0xe2, 0xa5, 0x28, 0x1f, 0x91, 0x37, 0xce, 0xa0, 0xf4, 0xfa, 0xdd, 0xe6, 0xc3, 0xfb, 0xcb,
	0x99, 0x55, 0x15, 0x70, 0xde, 0x62, 0x38, 0x67, 0xa6, 0xfe, 0xd4, 0xaf, 0x97, 0x8d, 0xe7, 0x59,
	0x72, 0xfd, 0x5c, 0x17, 0x97, 0x7f, 0x2e, 0xc6, 0x27, 0x03, 0xfa, 0xb8, 0xd1, 0xa8, 0x75, 0x81,
	0xd4, 0x67, 0x4f, 0x9e, 0xaa, 0x04, 0xea, 0xa7, 0x68, 0x28, 0x00, 0x7d, 0xf8, 0x3f, 0xec, 0xef,
	0x90, 0x89, 0xd7, 0xc4, 0x40, 0xc8, 0x5a, 0x25, 0x72, 0xca, 0xac, 0x56, 0x81, 0xd3, 0x52, 0x17,
	0xdb, 0xe1, 0x94, 0x96, 0xf6, 0x8a, 0x5d, 0xf4, 0x9f, 0x12, 0x59, 0x16, 0xd0, 0x38, 0x42, 0x20,
	0x76, 0x76, 0xf5, 0x6f, 0x12, 0x80, 0x17, 0xbb, 0x94, 0x17, 0xee, 0x09, 0xfa, 0x9f, 0xa4, 0xff,
	0xc3, 0x01, 0x63, 0xe3, 0xcf, 0x12, 0x2f, 0x16, 0x17, 0xd4, 0x70, 0xf9, 0x13, 0xb2, 0x8a, 0xcf,
	0xef, 0x7d, 0xd2, 0xec, 0x57, 0x1b, 0x10, 0x39, 0x46, 0xaf, 0xde, 0x62, 0x23, 0x77, 0xa7, 0xdd,
	0x6e, 0x81, 0xe3, 0xb7, 0xe1, 0xd5, 0x5b, 0x3d, 0x2c, 0x3a, 0xa0, 0x91, 0xd3, 0xb9, 0x52, 0xa1,
	0xbe, 0x4f, 0x6e, 0x5d, 0x0c, 0xdc, 0x6a, 0x57, 0x2b, 0x2d, 0x70, 0xdf, 0xbb, 0x80, 0xac, 0xf6,
	0xd8, 0xaf, 0xac, 0x97, 0xd6, 0xca, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x79, 0x2a, 0xd5,
	0xd9, 0x10, 0x00, 0x00,
}
